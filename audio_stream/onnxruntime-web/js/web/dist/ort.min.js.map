{"version":3,"sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./node_modules/@protobufjs/aspromise/index.js","webpack://ort/./node_modules/@protobufjs/base64/index.js","webpack://ort/./node_modules/@protobufjs/eventemitter/index.js","webpack://ort/./node_modules/@protobufjs/float/index.js","webpack://ort/./node_modules/@protobufjs/inquire/index.js","webpack://ort/./node_modules/@protobufjs/pool/index.js","webpack://ort/./node_modules/@protobufjs/utf8/index.js","webpack://ort/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://ort/./node_modules/guid-typescript/dist/guid.js","webpack://ort/./node_modules/long/src/long.js","webpack://ort/./node_modules/onnx-proto/dist/onnx.js","webpack://ort/./node_modules/protobufjs/minimal.js","webpack://ort/./node_modules/protobufjs/src/index-minimal.js","webpack://ort/./node_modules/protobufjs/src/reader.js","webpack://ort/./node_modules/protobufjs/src/reader_buffer.js","webpack://ort/./node_modules/protobufjs/src/roots.js","webpack://ort/./node_modules/protobufjs/src/rpc.js","webpack://ort/./node_modules/protobufjs/src/rpc/service.js","webpack://ort/./node_modules/protobufjs/src/util/longbits.js","webpack://ort/./node_modules/protobufjs/src/util/minimal.js","webpack://ort/./node_modules/protobufjs/src/writer.js","webpack://ort/./node_modules/protobufjs/src/writer_buffer.js","webpack://ort/./lib/backend-onnxjs.ts","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/onnxjs/attribute-with-cache-key.ts","webpack://ort/./lib/onnxjs/attribute.ts","webpack://ort/./lib/onnxjs/backend.ts","webpack://ort/./lib/onnxjs/backends/backend-webgl.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://ort/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://ort/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://ort/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://ort/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://ort/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://ort/./lib/onnxjs/backends/webgl/types.ts","webpack://ort/./lib/onnxjs/backends/webgl/utils.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://ort/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://ort/./lib/onnxjs/execution-plan.ts","webpack://ort/./lib/onnxjs/graph.ts","webpack://ort/./lib/onnxjs/instrument.ts","webpack://ort/./lib/onnxjs/model.ts","webpack://ort/./lib/onnxjs/operators.ts","webpack://ort/./lib/onnxjs/opset.ts","webpack://ort/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://ort/./lib/onnxjs/session-handler.ts","webpack://ort/./lib/onnxjs/session.ts","webpack://ort/./lib/onnxjs/tensor.ts","webpack://ort/./lib/onnxjs/util.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/./lib/wasm/proxy-worker/main.ts","webpack://ort/./node_modules/worker-loader/dist/runtime/inline.js","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/compat get default export","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/global","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","length","splice","push","env","this","wasm","webgl","logLevelInternal","value","indexOf","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","set","Tensor","arg0","arg1","arg2","type","data","dims","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","constructor","size","dim","Number","isSafeInteger","RangeError","calculateSize","InferenceSession","handler","feeds","fetches","options","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","buffer","byteOffset","byteLength","backendHints","executionProviders","map","async","backendNames","errors","backendName","backendInfo","initialized","initializing","aborted","e","err","join","resolveBackend","startProfiling","endProfiling","_scriptDir","document","currentScript","src","t","R","j","$","W","n","Y","r","U","q","o","B","a","G","u","c","s","ready","Promise","f","l","d","p","h","m","b","g","_","y","window","w","importScripts","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","O","T","locateFile","__dirname","normalize","readFileSync","Z","readFile","argv","replace","slice","on","sn","le","oe","exitCode","exit","inspect","Worker","E","console","error","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","x","S","k","print","log","bind","M","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","P","I","F","TextDecoder","decode","N","H","subarray","String","fromCharCode","L","z","charCodeAt","V","Q","X","Ft","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","J","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","K","ee","te","ne","re","ie","ae","preRun","shift","unshift","ue","ce","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","he","992292","me","Ec","Wb","be","Atomics","load","cn","compareExchange","notify","ge","ye","Rb","ic","worker","_emscripten_futex_wake","_e","Ub","Tb","qc","qd","Ic","store","Qt","qt","Jc","receiveObjectTransfer","Pc","threadInit","Zc","threadCancel","Yc","threadExit","yc","setExitStatus","Rc","pc","vc","pop","$t","wc","Yt","postMessage","cmd","xc","terminate","Qb","nc","Sb","Wt","mc","Vb","Qc","un","Lc","onmessage","Cc","targetThread","wd","transferList","Nt","Oe","thread","loaded","ac","threadId","text","alert","ln","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","zc","Fc","ed","now","we","Date","jt","ve","Le","Ae","$b","Wc","Tc","Uc","Sc","Vc","Gc","fc","Xb","detached","Xt","start_routine","Xc","arg","threadInfoStruct","stackBase","stackSize","time","dd","Te","exchange","wait","Ee","establishStackSpace","nn","invokeEntryPoint","hrtime","__performance_now_clock_drift","xe","Se","ke","Me","De","kd","Re","Ce","Pe","Ie","Ze","Fe","ld","je","Math","ceil","an","fill","Nc","Kc","Ac","fd","td","flags","offset","We","Ye","Ue","md","qe","Be","Ge","Ne","He","arguments","tn","rn","Ht","ze","Ve","Qe","querySelector","Xe","ec","uc","hd","Lt","dc","cc","getParameter","width","height","viewport","$e","Je","Ke","et","tt","nt","rt","split","it","ot","BYTES_PER_ELEMENT","at","alpha","ut","dimensions","ct","windowDimensions","padding","strides","dilations","autoPad","layout","st","ft","lt","dt","pt","ht","mt","bt","gt","_t","yt","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","wt","forEach","vt","At","Ot","Tt","od","nd","Et","xt","St","toTimeString","match","Bc","getFullYear","getTimezoneOffset","max","en","Kt","Jt","kt","Mt","Dt","Rt","Ct","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Pt","toString","getDay","Pb","lc","bd","ad","jc","bc","Yb","kc","xd","$c","cd","RegExp","substring","abs","includes","Zb","Oc","create","oc","object","hc","release","It","Zt","Gt","gd","Bt","zt","aa","Ta","ba","ca","apply","copyWithin","hardwareConcurrency","min","grow","setTimeout","stack","Vt","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Mc","rd","sc","Dc","ud","vd","tc","getContext","WebGLRenderingContext","pd","attributes","version","canvas","Hc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","jd","sd","getSupportedExtensions","Ra","devicePreference","ml","createContext","Ua","ua","Va","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","rc","getSeconds","getMinutes","getHours","setTime","Qa","Pa","La","add","Ka","averagePool2d","Ja","scale","bias","axis","epsilon","activation","batchNormalization","Ia","build","Ha","minValue","maxValue","clamp","Ga","concat","Fa","constant","Ea","groups","inputLayout","filterLayout","conv2d","Da","beta","aTranspose","bTranspose","gemm","Ca","input","Ba","leakyRelu","Aa","za","matmul","ya","maxPool2d","ra","xa","relu","wa","va","mode","scales","sizes","resample","ta","reshape","sa","permutation","transpose","Oa","compute","Na","Ma","pa","qa","resource","na","oa","la","ma","ka","ja","ia","ha","Sa","ga","MLGraphBuilder","fa","ea","da","asm","pb","Wa","ub","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Xa","_OrtCreateSessionOptions","Ya","_OrtSessionOptionsAppendExecutionProviderWebNN","Za","_OrtAddSessionConfigEntry","_a","_OrtReleaseSessionOptions","$a","_OrtCreateSession","ab","_OrtReleaseSession","bb","_OrtGetInputCount","cb","_OrtGetOutputCount","db","_OrtGetInputName","eb","_OrtGetOutputName","fb","_OrtFree","gb","_OrtCreateTensor","hb","_OrtGetTensorData","ib","_OrtReleaseTensor","jb","_OrtCreateRunOptions","kb","_OrtAddRunConfigEntry","lb","_OrtReleaseRunOptions","mb","_OrtRun","nb","_OrtEndProfiling","ob","_malloc","qb","___errno_location","rb","_free","sb","_pthread_self","tb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","vb","Ut","_emscripten_register_main_browser_thread_id","wb","_emscripten_main_browser_thread_id","xb","_emscripten_sync_run_in_main_thread_4","yb","_emscripten_main_thread_process_queued_calls","zb","_emscripten_run_in_main_runtime_thread_js","Ab","__emscripten_call_on_thread","Bb","_pthread_testcancel","Cb","_pthread_exit","Db","__emscripten_thread_init","Eb","_emscripten_get_global_libc","Fb","___pthread_tsd_run_dtors","Gb","__get_tzname","Hb","__get_daylight","Ib","__get_timezone","Jb","stackSave","Kb","stackRestore","Lb","stackAlloc","Mb","_emscripten_stack_set_limits","Nb","_memalign","Ob","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","fn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","preInit","ortWasm","ctx","params","index","pending","reject","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","keys","alloc","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","fromObject","LongBits","toObject","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","onnxjsBackend","OnnxjsBackend","initializeFlags","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","initWasm","promisify","OnnxruntimeWebAssemblySessionHandler","wasmBackend","OnnxruntimeWebAssemblyBackend","assign","_cacheKey","sort","createAttributeWithCacheKey","AttributeWithCacheKeyImpl","ortFbs","onnxruntime","experimental","fbs","_attributes","attr","Attribute","getValue","getType","delete","getFloat","getInt","getString","getTensor","getFloats","getInts","getStrings","getTensors","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","initialize","dispose","WebGLBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","getFunctions","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","getCustomTypes","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","coordsSnippet","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","valuesPerRow","squeezedShape","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","squeezeShape","newShape","keptDims","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","getPackedValueFrom","GlslLib","CoordsGlslLib","FunctionType","GlslContext","addDependency","GlslLibRoutineNode","returnOrderedNodes","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","TopologicalSortGlslRoutines","encodeFloat32","decodeFloat32","encodeUint8","endianness","EncodingGlslLib","decodeUint8","setFragColor","getColorAsFloat","FragColorGlslLib","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","glslRegistry","lib","libName","routinesInLib","currentNode","preprocess","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","samplers","uniformLines","sampler","arrayLength","GlslPreprocessor","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","calculateTextureWidthAndHeight","textureType","layoutStrategy","executeProgram","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","createTextureDataFromLayoutBindTensor","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapeUnpacked","reshapedDims","inputTD","unpacked","newTextureLayout","channels","computeStrides","reshapePacked","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","isTextureLayoutCached","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WebGLInferenceHandler","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","momentum","spatial","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","inputCount","metadata","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","group","kernelShape","pads","calculateOutputShape","getActicationSnippet","activationFunction","applyActivation","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","blocksize","blocksizeSqr","transposePerm","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","codeW","kw","sw","pwStart","pwEnd","dimW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","fragScript","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","ProgramManager","PreferLogicalStrategy","maxTextureSize","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","createInferenceHandler","onGraphInitialized","initializers","getValues","addInitializer","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","RedFloat32DataEncoder","dest","RGBAFloatDataEncoder","ALPHA","UNSIGNED_BYTE","_textureSize","Uint8DataEncoder","computeTextureWH","prefs","breakAxis","wsize","hsize","totalSize","AlwaysKeepOriginalSizeStrategy","wh","computeTexture","logShape","squeezeResult","sizeFromShape","sizeToSquarishShape","isEmptyArray","parseAxisParam","assert","ax","isInt","dimsToSkip","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","createAndWaitForFence","tensorData","subscribers","deleteTexture","_dataType","checkFn","delayFn","maxCounter","_counter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","isFramebufferReady","getActiveTexture","ACTIVE_TEXTURE","TEXTURE0","getTextureBinding","TEXTURE_BINDING_2D","getFramebufferBinding","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","isRenderFloat32Supported","textureHalfFloatExtension","HALF_FLOAT_OES","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createDefaultGeometry","createBuffer","geometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","beginTimer","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endTimer","endQuery","isTimerResultAvailable","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","getTimerResult","timeElapsed","QUERY_RESULT","deleteQuery","waitForQueryAndGetTime","repeatedTry","fenceContext","createFence","pollFence","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","isFencePassed","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","pollItems","isDoneFn","resolveFn","getNodes","_ops","KernelOp","_starter","resolved","_values","getInputIndices","execute","sessionHandler","modelInputs","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","to","currentDownstreamNodeIndex","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","ExecutionPlan","Graph","graphProto","GraphImpl","_from","_to","ProtoUtil","tensorValueTypeFromProto","_nodeProto","Node","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","getInputNames","_allInputNames","_allOutputIndices","getOutputNames","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","Value","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","deleteNode","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","isActivation","child","_severity","_content","_category","severity","content","category","color","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","NoOpLoggerProvider","ConsoleLoggerProvider","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","logInternal","toISOString","previousConfig","logLevel","startTime","endCallback","timer","checkTimer","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","stop","logOneEvent","isPromise","reason","Event","endSync","EventRecord","toFixed","currentTime","previousPointer","Profiler","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","getRootAsInferenceSession","model","opsetImportLength","opsetId","Model","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","__init","getRootAsShape","Shape","getSizePrefixedRootAsShape","startShape","builder","addDim","createDimVector","startDimVector","numElems","endShape","createShape","getRootAsDimension","getSizePrefixedRootAsDimension","DimensionValue","optionalEncoding","startDimension","addValue","valueOffset","addDenotation","denotationOffset","endDimension","createDimension","getRootAsDimensionValue","getSizePrefixedRootAsDimensionValue","dimType","UNKNOWN","startDimensionValue","addDimType","addDimValue","addDimParam","dimParamOffset","endDimensionValue","createDimensionValue","getRootAsTensorTypeAndShape","getSizePrefixedRootAsTensorTypeAndShape","UNDEFINED","startTensorTypeAndShape","addElemType","addShape","shapeOffset","endTensorTypeAndShape","createTensorTypeAndShape","getRootAsMapType","MapType","getSizePrefixedRootAsMapType","keyType","TypeInfo","startMapType","addKeyType","addValueType","valueTypeOffset","endMapType","createMapType","getRootAsSequenceType","SequenceType","getSizePrefixedRootAsSequenceType","startSequenceType","elemTypeOffset","endSequenceType","createSequenceType","srcArgIndex","dstArgIndex","createEdgeEnd","node_index","src_arg_index","dst_arg_index","EdgeEnd","getRootAsNodeEdge","NodeEdge","getSizePrefixedRootAsNodeEdge","inputEdges","inputEdgesLength","outputEdges","outputEdgesLength","startNodeEdge","addNodeIndex","addInputEdges","inputEdgesOffset","startInputEdgesVector","addOutputEdges","outputEdgesOffset","startOutputEdgesVector","endNodeEdge","createNodeEdge","getRootAsNode","getSizePrefixedRootAsNode","sinceVersion","Primitive","executionProviderType","inputArgCounts","inputArgCountsLength","inputArgCountsArray","implicitInputs","implicitInputsLength","startNode","addName","nameOffset","addDocString","docStringOffset","addDomain","domainOffset","addSinceVersion","addIndex","addOpType","opTypeOffset","addType","addExecutionProviderType","executionProviderTypeOffset","addInputs","inputsOffset","createInputsVector","startInputsVector","addOutputs","outputsOffset","createOutputsVector","startOutputsVector","addAttributes","attributesOffset","createAttributesVector","startAttributesVector","addInputArgCounts","inputArgCountsOffset","createInputArgCountsVector","startInputArgCountsVector","addImplicitInputs","implicitInputsOffset","createImplicitInputsVector","startImplicitInputsVector","endNode","createNode","getRootAsValueInfo","ValueInfo","getSizePrefixedRootAsValueInfo","startValueInfo","typeOffset","endValueInfo","createValueInfo","getRootAsTypeInfo","getSizePrefixedRootAsTypeInfo","NONE","startTypeInfo","endTypeInfo","createTypeInfo","getRootAsOperatorSetId","OperatorSetId","getSizePrefixedRootAsOperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","createOperatorSetId","getRootAsTensor","getSizePrefixedRootAsTensor","dimsLength","rawDataLength","rawDataArray","stringDataLength","startTensor","addDims","dimsOffset","createDimsVector","startDimsVector","addDataType","addRawData","rawDataOffset","createRawDataVector","startRawDataVector","addStringData","stringDataOffset","createStringDataVector","startStringDataVector","endTensor","createTensor","getRootAsSparseTensor","SparseTensor","getSizePrefixedRootAsSparseTensor","indices","startSparseTensor","addValues","valuesOffset","addIndices","indicesOffset","endSparseTensor","createSparseTensor","getRootAsAttribute","getSizePrefixedRootAsAttribute","floatsLength","graphsLength","startAttribute","addF","addI","addS","sOffset","addT","tOffset","addG","gOffset","addFloats","floatsOffset","createFloatsVector","startFloatsVector","addInts","intsOffset","createIntsVector","startIntsVector","addStrings","stringsOffset","createStringsVector","startStringsVector","addTensors","tensorsOffset","createTensorsVector","startTensorsVector","addGraphs","graphsOffset","createGraphsVector","startGraphsVector","endAttribute","createAttribute","getRootAsGraph","getSizePrefixedRootAsGraph","maxNodeIndex","nodeEdges","nodeEdgesLength","sparseInitializers","sparseInitializersLength","startGraph","addInitializers","initializersOffset","createInitializersVector","startInitializersVector","addNodeArgs","nodeArgsOffset","createNodeArgsVector","startNodeArgsVector","addNodes","nodesOffset","createNodesVector","startNodesVector","addMaxNodeIndex","addNodeEdges","nodeEdgesOffset","createNodeEdgesVector","startNodeEdgesVector","addSparseInitializers","sparseInitializersOffset","createSparseInitializersVector","startSparseInitializersVector","endGraph","createGraph","getRootAsModel","getSizePrefixedRootAsModel","graphDocString","startModel","addIrVersion","addOpsetImport","opsetImportOffset","createOpsetImportVector","startOpsetImportVector","addProducerName","producerNameOffset","addProducerVersion","producerVersionOffset","addModelVersion","addGraph","graphOffset","addGraphDocString","graphDocStringOffset","endModel","createModel","getRootAsKernelCreateInfos","KernelCreateInfos","getSizePrefixedRootAsKernelCreateInfos","nodeIndices","nodeIndicesLength","nodeIndicesArray","kernelDefHashes","kernelDefHashesLength","startKernelCreateInfos","addNodeIndices","nodeIndicesOffset","createNodeIndicesVector","startNodeIndicesVector","addKernelDefHashes","kernelDefHashesOffset","createKernelDefHashesVector","startKernelDefHashesVector","endKernelCreateInfos","createKernelCreateInfos","getRootAsSubGraphSessionState","SubGraphSessionState","getSizePrefixedRootAsSubGraphSessionState","graphId","sessionState","SessionState","startSubGraphSessionState","addGraphId","graphIdOffset","addSessionState","sessionStateOffset","endSubGraphSessionState","createSubGraphSessionState","getRootAsSessionState","getSizePrefixedRootAsSessionState","kernels","subGraphSessionStates","subGraphSessionStatesLength","startSessionState","addKernels","kernelsOffset","addSubGraphSessionStates","subGraphSessionStatesOffset","createSubGraphSessionStatesVector","startSubGraphSessionStatesVector","endSessionState","createSessionState","getSizePrefixedRootAsInferenceSession","bufferHasIdentifier","ortVersion","startInferenceSession","addOrtVersion","ortVersionOffset","addModel","modelOffset","endInferenceSession","finishInferenceSessionBuffer","finishSizePrefixedInferenceSessionBuffer","createInferenceSession","_fetches","_options","inputMap","feed","outputMap","_initialized","graphInputTypes","graphInputDims","_model","isView","modelProtoBlob","initializeOps","_executionPlan","normalizeAndValidateInputs","outputTensors","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","fromData","ortTensor","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","preprocessInputShapes","dimsA","dimsB","postprocessOutputShape","calcMatMulShape","MatMulUtil","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","calc","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","valA","valB","isAScalar","isBScalar","rest","isValidBroadcast","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","typeProto","tensorDataTypeStringToEnum","getSizeFromDimensionRange","incrementIndex","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","sqr","axpy","powx","MathUtil","determineSplit","numElementsAlongAxis","calcReduce","keepdims","ReduceUtil","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","computeConvOutputShape","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","proxyWorker","initWasmCallbacks","initOrtCallbacks","isProxy","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAa,IAAID,IAEjBD,EAAU,IAAIC,IARhB,CASGK,MAAM,WACT,O,sNCRA,MAAMC,EAAW,GACXC,EAA2B,GAQpBC,EAAkB,CAACC,EAAMC,EAASC,KAC3C,IAAID,GAAmC,mBAAjBA,EAAQE,MAA+D,mBAAjCF,EAAQG,qBAoBpE,MAAM,IAAIC,UAAU,uBApBpB,CACI,MAAMC,EAAiBT,EAASG,GAChC,QAAuBO,IAAnBD,EAGC,IAAIA,EAAeL,UAAYA,EAChC,OAGA,MAAM,IAAIO,MAAM,YAAYR,4BAN5BH,EAASG,GAAQ,CAAEC,UAASC,YAQhC,IAAK,IAAIO,EAAI,EAAGA,EAAIX,EAAyBY,OAAQD,IACjD,GAAIZ,EAASC,EAAyBW,IAAIP,UAAYA,EAElD,YADAJ,EAAyBa,OAAOF,EAAG,EAAGT,GAI9CF,EAAyBc,KAAKZ,KCvBzBa,EAAM,ICJZ,MACH,cACIC,KAAKC,KAAO,GACZD,KAAKE,MAAQ,GACbF,KAAKG,iBAAmB,UAG5B,aAAaC,GACT,QAAcX,IAAVW,EAAJ,CAGA,GAAqB,iBAAVA,IAA2F,IAArE,CAAC,UAAW,OAAQ,UAAW,QAAS,SAASC,QAAQD,GACtF,MAAM,IAAIV,MAAM,8BAA8BU,KAElDJ,KAAKG,iBAAmBC,GAE5B,eACI,OAAOJ,KAAKG,mBCjBdG,EAAoD,oBAAlBC,eAA+D,mBAAvBA,cAAcC,KACxFC,EAAsD,oBAAnBC,gBAAiE,mBAAxBA,eAAeF,KAE3FG,EAAwC,IAAIC,IAAI,CAClD,CAAC,UAAWC,cACZ,CAAC,QAASC,YACV,CAAC,OAAQC,WACT,CAAC,SAAUC,aACX,CAAC,QAASC,YACV,CAAC,QAASC,YACV,CAAC,OAAQJ,YACT,CAAC,UAAWK,cACZ,CAAC,SAAUC,eAGTC,EAAwC,IAAIT,IAAI,CAClD,CAACC,aAAc,WACf,CAACC,WAAY,SACb,CAACC,UAAW,QACZ,CAACC,YAAa,UACd,CAACC,WAAY,SACb,CAACC,WAAY,SACb,CAACC,aAAc,WACf,CAACC,YAAa,YAEdd,IACAK,EAAsCW,IAAI,QAASf,eACnDc,EAAsCC,IAAIf,cAAe,UAEzDE,IACAE,EAAsCW,IAAI,SAAUZ,gBACpDW,EAAsCC,IAAIZ,eAAgB,WAqBvD,MAAMa,EACT,YAAYC,EAAMC,EAAMC,GACpB,IAAIC,EACAC,EACAC,EAEJ,GAAoB,iBAATL,EAMP,GAFAG,EAAOH,EACPK,EAAOH,EACM,WAATF,EAAmB,CAEnB,IAAKM,MAAMC,QAAQN,GACf,MAAM,IAAIlC,UAAU,kDAIxBqC,EAAOH,MAEN,CAED,MAAMO,EAAwBrB,EAAsCsB,IAAIT,GACxE,QAA8B/B,IAA1BuC,EACA,MAAM,IAAIzC,UAAU,4BAA4BiC,MAEpD,GAAIM,MAAMC,QAAQN,GAKdG,EAAOI,EAAsBxB,KAAKiB,OAEjC,MAAIA,aAAgBO,GAIrB,MAAM,IAAIzC,UAAU,KAAKoC,mCAAsCK,KAH/DJ,EAAOH,QAYf,GADAI,EAAOJ,EACHK,MAAMC,QAAQP,GAAO,CAErB,GAAoB,IAAhBA,EAAK5B,OACL,MAAM,IAAIL,UAAU,uDAExB,MAAM2C,SAA0BV,EAAK,GACrC,GAAyB,WAArBU,EACAP,EAAO,SACPC,EAAOJ,MAEN,IAAyB,YAArBU,EAQL,MAAM,IAAI3C,UAAU,uCAAuC2C,MAP3DP,EAAO,OAIPC,EAAOd,WAAWN,KAAKgB,QAM1B,CAED,MAAMW,EAAad,EAAsCY,IAAIT,EAAKY,aAClE,QAAmB3C,IAAf0C,EACA,MAAM,IAAI5C,UAAU,qCAAqCiC,EAAKY,gBAElET,EAAOQ,EACPP,EAAOJ,EAIf,QAAa/B,IAAToC,EAEAA,EAAO,CAACD,EAAKhC,aAEZ,IAAKkC,MAAMC,QAAQF,GACpB,MAAM,IAAItC,UAAU,0CAGxB,MAAM8C,EArGQ,CAACR,IACnB,IAAIQ,EAAO,EACX,IAAK,IAAI1C,EAAI,EAAGA,EAAIkC,EAAKjC,OAAQD,IAAK,CAClC,MAAM2C,EAAMT,EAAKlC,GACjB,GAAmB,iBAAR2C,IAAqBC,OAAOC,cAAcF,GACjD,MAAM,IAAI/C,UAAU,QAAQI,+BAA+B2C,KAE/D,GAAIA,EAAM,EACN,MAAM,IAAIG,WAAW,QAAQ9C,2CAA2C2C,KAE5ED,GAAQC,EAEZ,OAAOD,GAyFUK,CAAcb,GAC3B,GAAIQ,IAAST,EAAKhC,OACd,MAAM,IAAIF,MAAM,iBAAiB2C,iCAAoCT,EAAKhC,YAE9EI,KAAK6B,KAAOA,EACZ7B,KAAK2B,KAAOA,EACZ3B,KAAK4B,KAAOA,EACZ5B,KAAKqC,KAAOA,EAIhB,QAAQR,GACJ,OAAO,IAAIN,EAAOvB,KAAK2B,KAAM3B,KAAK4B,KAAMC,ICrJzC,MAAM,EAASN,ECAf,MAAMoB,EACT,YAAYC,GACR5C,KAAK4C,QAAUA,EAEnB,UAAUC,EAAOpB,EAAMC,GACnB,MAAMoB,EAAU,GAChB,IAAIC,EAAU,GAEd,GAAqB,iBAAVF,GAAgC,OAAVA,GAAkBA,aAAiB,GAAUf,MAAMC,QAAQc,GACxF,MAAM,IAAItD,UAAU,iGAExB,IAAIyD,GAAiB,EAErB,GAAoB,iBAATvB,EAAmB,CAC1B,GAAa,OAATA,EACA,MAAM,IAAIlC,UAAU,2CAExB,GAAIkC,aAAgB,EAChB,MAAM,IAAIlC,UAAU,gCAExB,GAAIuC,MAAMC,QAAQN,GAAO,CACrB,GAAoB,IAAhBA,EAAK7B,OACL,MAAM,IAAIL,UAAU,uCAExByD,GAAiB,EAEjB,IAAK,MAAM9D,KAAQuC,EAAM,CACrB,GAAoB,iBAATvC,EACP,MAAM,IAAIK,UAAU,kDAExB,IAAwC,IAApCS,KAAKiD,YAAY5C,QAAQnB,GACzB,MAAM,IAAIuD,WAAW,2CAA2CvD,MAEpE4D,EAAQ5D,GAAQ,KAEpB,GAAoB,iBAATwC,GAA8B,OAATA,EAC5BqB,EAAUrB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAInC,UAAU,oCAGvB,CAGD,IAAI2D,GAAY,EAChB,MAAMC,EAAWC,OAAOC,oBAAoB5B,GAC5C,IAAK,MAAMvC,KAAQc,KAAKiD,YACpB,IAAgC,IAA5BE,EAAS9C,QAAQnB,GAAc,CAC/B,MAAMoE,EAAI7B,EAAKvC,IACL,OAANoE,GAAcA,aAAa,KAC3BJ,GAAY,EACZF,GAAiB,EACjBF,EAAQ5D,GAAQoE,GAI5B,GAAIJ,GACA,GAAoB,iBAATxB,GAA8B,OAATA,EAC5BqB,EAAUrB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAInC,UAAU,qCAIxBwD,EAAUtB,QAIjB,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,2DAGxB,IAAK,MAAML,KAAQc,KAAKuD,WACpB,QAA2B,IAAhBV,EAAM3D,GACb,MAAM,IAAIQ,MAAM,UAAUR,6BAIlC,GAAI8D,EACA,IAAK,MAAM9D,KAAQc,KAAKiD,YACpBH,EAAQ5D,GAAQ,KAIxB,MAAMsE,QAAgBxD,KAAK4C,QAAQa,IAAIZ,EAAOC,EAASC,GACjDW,EAAc,GACpB,IAAK,MAAMC,KAAOH,EACVJ,OAAOQ,eAAeC,KAAKL,EAASG,KACpCD,EAAYC,GAAO,IAAI,EAAOH,EAAQG,GAAKhC,KAAM6B,EAAQG,GAAK/B,KAAM4B,EAAQG,GAAK9B,OAGzF,OAAO6B,EAEX,oBAAoBlC,EAAMC,EAAMC,EAAMoC,GAElC,IAAIC,EACAhB,EAAU,GACd,GAAoB,iBAATvB,GAEP,GADAuC,EAAuBvC,EACH,iBAATC,GAA8B,OAATA,EAC5BsB,EAAUtB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,qCAGvB,GAAIiC,aAAgBV,YAErB,GADAiD,EAAuBvC,EACH,iBAATC,GAA8B,OAATA,EAC5BsB,EAAUtB,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIlC,UAAU,oCAGvB,MAAIiC,aAAgBwC,aACS,oBAAtBC,mBAAqCzC,aAAgByC,mBAyC7D,MAAM,IAAI1E,UAAU,uDAzC6D,CACjF,MAAM2E,EAAS1C,EACf,IAAI2C,EAAa,EACbC,EAAa5C,EAAK4C,WACtB,GAAoB,iBAAT3C,GAA8B,OAATA,EAC5BsB,EAAUtB,OAET,GAAoB,iBAATA,EAAmB,CAE/B,GADA0C,EAAa1C,GACRc,OAAOC,cAAc2B,GACtB,MAAM,IAAI1B,WAAW,oCAEzB,GAAI0B,EAAa,GAAKA,GAAcD,EAAOE,WACvC,MAAM,IAAI3B,WAAW,oCAAoCyB,EAAOE,gBAGpE,GADAA,EAAa5C,EAAK4C,WAAaD,EACX,iBAATzC,EAAmB,CAE1B,GADA0C,EAAa1C,GACRa,OAAOC,cAAc4B,GACtB,MAAM,IAAI3B,WAAW,oCAEzB,GAAI2B,GAAc,GAAKD,EAAaC,EAAaF,EAAOE,WACpD,MAAM,IAAI3B,WAAW,oCAAoCyB,EAAOE,WAAaD,OAEjF,GAAoB,iBAATL,GAA8B,OAATA,EAC5Bf,EAAUe,OAET,QAAoB,IAATA,EACZ,MAAM,IAAIvE,UAAU,qCAGvB,QAAoB,IAATmC,EACZ,MAAM,IAAInC,UAAU,uCAGvB,QAAoB,IAATkC,EACZ,MAAM,IAAIlC,UAAU,gCAExBwE,EAAuB,IAAIjD,WAAWoD,EAAQC,EAAYC,IAM9D,MACMC,GADMtB,EAAQuB,oBAAsB,IACjBC,KAAI5E,GAAkB,iBAANA,EAAiBA,EAAIA,EAAET,OAC1DC,OLhIgBqF,OAAOH,IACjC,MAAMI,EAAuC,IAAxBJ,EAAazE,OAAeZ,EAA2BqF,EACtEK,EAAS,GACf,IAAK,MAAMC,KAAeF,EAAc,CACpC,MAAMG,EAAc7F,EAAS4F,GAC7B,GAAIC,EAAa,CACb,GAAIA,EAAYC,YACZ,OAAOD,EAAYzF,QAElB,GAAIyF,EAAYE,aACjB,MAAM,IAAIpF,MAAM,YAAYiF,8DAE3B,GAAIC,EAAYG,QACjB,SAEJ,IAII,OAHAH,EAAYE,cAAe,QACrBF,EAAYzF,QAAQE,OAC1BuF,EAAYC,aAAc,EACnBD,EAAYzF,QAEvB,MAAO6F,GACHN,EAAO5E,KAAK,CAAEZ,KAAMyF,EAAaM,IAAKD,IACtCJ,EAAYG,SAAU,EAE1B,QACIH,EAAYE,cAAe,IAIvC,MAAM,IAAIpF,MAAM,oCAAoCgF,EAAOH,KAAIS,GAAK,IAAIA,EAAE9F,SAAS8F,EAAEC,QAAOC,KAAK,UKkGvEC,CAAed,GAC/BzB,QAAgBzD,EAAQG,qBAAqByE,EAAsBhB,GACzE,OAAO,IAAIJ,EAAiBC,GAEhC,iBACI5C,KAAK4C,QAAQwC,iBAEjB,eACIpF,KAAK4C,QAAQyC,eAEjB,iBACI,OAAOrF,KAAK4C,QAAQW,WAExB,kBACI,OAAOvD,KAAK4C,QAAQK,aClLrB,MAAM,EAAmBN,G,yBCJ5B2C,WAAWN,GAAsIM,YAAnIA,WAAW,oBAAoBC,UAAUA,SAASC,cAAcD,SAASC,cAAcC,SAAI,I,YAA2E,SAAST,GAAG,SAASU,IAAI,OAAOC,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQ4B,EAAE,SAASC,IAAI,OAAOJ,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQ8B,EAAE,SAASC,IAAI,OAAON,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQgC,EAAE,SAASvG,IAAI,OAAOgG,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQiC,EAAE,SAASC,IAAI,OAAOT,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQmC,EAAE,SAASC,IAAI,OAAOX,EAAEzB,QAAQ0B,GAAGC,EAAEF,EAAEzB,QAAQqC,EAAE,IAAIC,EAAEC,EAAEC,EAAE1B,EAAEA,GAAG,GAAGwB,IAAIA,OAAE,IAASxB,EAAEA,EAAE,IAAIwB,EAAEG,MAAM,IAAIC,SAAQ,SAAU5B,EAAEU,GAAGe,EAAEzB,EAAE0B,EAAEhB,KAAK,IAAImB,EAAEC,EAAE,GAAG,IAAID,KAAKL,EAAEA,EAAE5C,eAAeiD,KAAKC,EAAED,GAAGL,EAAEK,IAAI,IAAIE,EAAE,iBAAiB,SAASC,EAAEhC,EAAEU,GAAG,MAAMA,EAAE,IAAIuB,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAE,iBAAiBC,OAAOC,EAAE,mBAAmBC,cAAcnE,EAAE,iBAAiBoE,SAAS,iBAAiBA,QAAQC,UAAU,iBAAiBD,QAAQC,SAASC,KAAKC,EAAErB,EAAEsB,yBAAwB,EAAGC,EAAE,GAAG,SAASC,EAAEhD,GAAG,OAAOwB,EAAEyB,WAAWzB,EAAEyB,WAAWjD,EAAE+C,GAAGA,EAAE/C,EAAE,GAAG1B,GAAG,GAAGyE,EAAEP,EAAE,eAAwBO,GAAG,IAAIG,KAAcjB,EAAE,SAASjC,EAAEU,GAAG,OAAO0B,IAAIA,EAAE,EAAQ,OAAOC,IAAIA,EAAE,EAAQ,MAASrC,EAAEqC,EAAEc,UAAUnD,GAAGoC,EAAEgB,aAAapD,EAAEU,EAAE,KAAK,SAASyB,EAAE,SAASnC,GAAG,OAAOA,EAAEiC,EAAEjC,GAAE,IAAKd,SAASc,EAAE,IAAIlE,WAAWkE,IAAIqD,EAAErD,EAAEd,QAAQc,GAAGkC,EAAE,SAASlC,EAAEU,EAAEK,GAAGqB,IAAIA,EAAE,EAAQ,OAAOC,IAAIA,EAAE,EAAQ,MAASrC,EAAEqC,EAAEc,UAAUnD,GAAGoC,EAAEkB,SAAStD,GAAE,SAAUA,EAAEiB,GAAGjB,EAAEe,EAAEf,GAAGU,EAAEO,EAAE/B,YAAY,EAAEwD,QAAQa,KAAK3I,SAASmH,EAAEW,QAAQa,KAAK,GAAGC,QAAQ,MAAM,MAAMd,QAAQa,KAAKE,MAAM,GAAGf,QAAQgB,GAAG,qBAAoB,SAAU1D,GAAG,KAAKA,aAAa2D,IAAI,MAAM3D,KAAK0C,QAAQgB,GAAG,qBAAqBE,IAAI5B,EAAE,SAAShC,EAAEU,GAAG,GAAGmD,KAAK,MAAMnB,QAAQoB,SAAS9D,EAAEU,EAAEgC,QAAQqB,KAAK/D,IAAIwB,EAAEwC,QAAQ,WAAW,MAAM,mCAA8B,IAAS,EAAA5B,EAAO6B,OAAO,CAAC,IAAIC,EAAE,IAAIA,EAAE,EAAQ,MAAkB,MAAMlE,GAAG,MAAMmE,QAAQC,MAAM,2GAA2GpE,EAAE,EAAAoC,EAAO6B,OAAOC,EAAED,aAAa3B,GAAGE,KAAKA,EAAEO,EAAEjJ,KAAKuK,SAASC,KAAK,oBAAoB/D,UAAUA,SAASC,gBAAgBuC,EAAExC,SAASC,cAAcC,KAAKH,aAAayC,EAAEzC,YAAYyC,EAAE,IAAIA,EAAE1H,QAAQ,SAAS0H,EAAEwB,OAAO,EAAExB,EAAEyB,YAAY,KAAK,GAAG,GAAGlG,GAAG2D,EAAE,SAASjC,EAAEU,GAAG,OAAO0B,IAAIA,EAAE,EAAQ,OAAOC,IAAIA,EAAE,EAAQ,MAASrC,EAAEqC,EAAEc,UAAUnD,GAAGoC,EAAEgB,aAAapD,EAAEU,EAAE,KAAK,SAASyB,EAAE,SAASnC,GAAG,OAAOA,EAAEiC,EAAEjC,GAAE,IAAKd,SAASc,EAAE,IAAIlE,WAAWkE,IAAIqD,EAAErD,EAAEd,QAAQc,GAAGkC,EAAE,SAASlC,EAAEU,EAAEK,GAAGqB,IAAIA,EAAE,EAAQ,OAAOC,IAAIA,EAAE,EAAQ,MAASrC,EAAEqC,EAAEc,UAAUnD,GAAGoC,EAAEkB,SAAStD,GAAE,SAAUA,EAAEiB,GAAGjB,EAAEe,EAAEf,GAAGU,EAAEO,EAAE/B,cAAc+C,EAAE,SAASjC,GAAG,IAAIU,EAAE,IAAI+D,eAAe,OAAO/D,EAAEgE,KAAK,MAAM1E,GAAE,GAAIU,EAAEiE,KAAK,MAAMjE,EAAEkE,cAAcpC,IAAIL,EAAE,SAASnC,GAAG,IAAIU,EAAE,IAAI+D,eAAe,OAAO/D,EAAEgE,KAAK,MAAM1E,GAAE,GAAIU,EAAEmE,aAAa,cAAcnE,EAAEiE,KAAK,MAAM,IAAI7I,WAAW4E,EAAEoE,YAAY5C,EAAE,SAASlC,EAAEU,EAAEK,GAAG,IAAIE,EAAE,IAAIwD,eAAexD,EAAEyD,KAAK,MAAM1E,GAAE,GAAIiB,EAAE4D,aAAa,cAAc5D,EAAE8D,OAAO,WAAW,KAAK9D,EAAE+D,QAAQ,GAAG/D,EAAE+D,QAAQ/D,EAAE6D,SAASpE,EAAEO,EAAE6D,UAAU/D,KAAKE,EAAEgE,QAAQlE,EAAEE,EAAE0D,KAAK,SAASrG,GAAG,oBAAoB4G,cAAc,EAAA9C,EAAO8C,YAAY,qBAAmC,IAAIC,EAAEC,EAAEC,EAAE7D,EAAE8D,OAAOnB,QAAQoB,IAAIC,KAAKrB,SAASsB,EAAEjE,EAAEkE,UAAUvB,QAAQwB,KAAKH,KAAKrB,SAAS,IAAItC,KAAKC,EAAEA,EAAElD,eAAeiD,KAAKL,EAAEK,GAAGC,EAAED,IAAIC,EAAE,KAAKN,EAAEoE,cAAc7D,EAAEP,EAAEoE,aAAapE,EAAEqE,OAAO7D,EAAER,EAAEqE,MAAMrE,EAAEsE,aAAaV,EAAE5D,EAAEsE,YAAY,IAAIC,EAAEvE,EAAEwE,gBAAe,EAAG,iBAAiBC,aAAarC,GAAG,mCAAmC,IAAIjD,EAAEuF,EAAEC,EAAEC,GAAE,EAAG,SAAS/C,EAAErD,EAAEU,GAAGV,GAAG4D,GAAG,qBAAqBlD,GAAG,SAAS2F,EAAErG,GAAG,IAAIU,EAAE,IAAI4F,YAAYtG,GAAGhF,KAAKuL,OAAO,SAASvG,GAAG,OAAOA,EAAEd,kBAAkBD,oBAAoBe,EAAE,IAAIlE,WAAWkE,IAAIU,EAAE6F,OAAO1H,KAAK6B,EAAEV,IAAI,IAAIY,EAAEE,EAAEE,EAAEE,EAAEC,EAAEE,EAAEE,EAAEiF,EAAE,oBAAoBF,YAAY,IAAID,EAAE,aAAQ,EAAO,SAASI,EAAEzG,EAAEU,EAAEK,GAAG,IAAIE,EAAEP,EAAEK,EAAE,IAAIA,EAAEL,EAAEV,EAAEe,MAAMA,GAAGE,MAAMF,EAAE,GAAG,GAAGA,EAAEL,GAAGV,EAAE0G,UAAUF,EAAE,OAAOA,EAAED,OAAOvG,EAAE0G,SAAShG,EAAEK,IAAI,IAAIE,EAAE,GAAGP,EAAEK,GAAG,CAAC,IAAIpG,EAAEqF,EAAEU,KAAK,GAAG,IAAI/F,EAAE,CAAC,IAAIyG,EAAE,GAAGpB,EAAEU,KAAK,GAAG,MAAM,IAAI/F,GAAGsG,GAAG0F,OAAOC,cAAc,GAAGjM,IAAI,EAAEyG,OAAO,CAAC,IAAIE,EAAE,GAAGtB,EAAEU,KAAK,OAAO/F,EAAE,MAAM,IAAIA,IAAI,GAAGA,IAAI,GAAGyG,GAAG,EAAEE,GAAG,EAAE3G,IAAI,GAAGyG,GAAG,GAAGE,GAAG,EAAE,GAAGtB,EAAEU,MAAMO,GAAG0F,OAAOC,aAAajM,IAAIA,GAAG,MAAMsG,GAAG0F,OAAOC,aAAa,MAAMjM,GAAG,GAAG,MAAM,KAAKA,UAAUsG,GAAG0F,OAAOC,aAAajM,GAAG,OAAOsG,EAAE,SAAS4F,EAAE7G,EAAEU,GAAG,OAAOV,EAAEyG,EAAE1F,IAAIf,EAAEU,GAAG,GAAG,SAASoG,EAAE9G,EAAEU,EAAEK,EAAEE,GAAG,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAItG,EAAEoG,EAAEE,EAAEF,EAAEE,EAAE,EAAE,IAAI,IAAIG,EAAE,EAAEA,EAAEpB,EAAEpF,SAASwG,EAAE,CAAC,IAAIE,EAAEtB,EAAE+G,WAAW3F,GAAG,GAAG,OAAOE,GAAG,OAAOA,IAAIA,EAAE,QAAQ,KAAKA,IAAI,IAAI,KAAKtB,EAAE+G,aAAa3F,IAAI,KAAKE,EAAE,CAAC,GAAGP,GAAGE,EAAE,MAAMP,EAAEK,KAAKO,MAAM,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGP,EAAE,GAAGE,EAAE,MAAMP,EAAEK,KAAK,IAAIO,GAAG,MAAM,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGP,EAAE,GAAGE,EAAE,MAAMP,EAAEK,KAAK,IAAIO,GAAG,OAAO,CAAC,GAAGP,EAAE,GAAGE,EAAE,MAAMP,EAAEK,KAAK,IAAIO,GAAG,GAAGZ,EAAEK,KAAK,IAAIO,GAAG,GAAG,GAAGZ,EAAEK,KAAK,IAAIO,GAAG,EAAE,GAAGZ,EAAEK,KAAK,IAAI,GAAGO,GAAG,OAAOZ,EAAEK,GAAG,EAAEA,EAAEpG,EAAE,SAASqM,EAAEhH,EAAEU,EAAEO,GAAG,OAAO6F,EAAE9G,EAAEe,IAAIL,EAAEO,GAAG,SAASgG,EAAEjH,GAAG,IAAI,IAAIU,EAAE,EAAEK,EAAE,EAAEA,EAAEf,EAAEpF,SAASmG,EAAE,CAAC,IAAIE,EAAEjB,EAAE+G,WAAWhG,GAAG,OAAOE,GAAG,OAAOA,IAAIA,EAAE,QAAQ,KAAKA,IAAI,IAAI,KAAKjB,EAAE+G,aAAahG,IAAI,KAAKE,IAAIP,EAAEA,EAAE,MAAMO,EAAEP,EAAE,EAAE,OAAOO,EAAEP,EAAE,EAAEA,EAAE,EAAE,OAAOA,EAAE,SAASwG,EAAElH,GAAG,IAAIe,EAAEkG,EAAEjH,GAAG,EAAEiB,EAAEkG,GAAGpG,GAAG,OAAOE,GAAG6F,EAAE9G,EAAEU,IAAIO,EAAEF,GAAGE,EAAE,SAASJ,EAAEb,GAAGY,EAAEZ,EAAEwB,EAAE4F,MAAMtG,EAAE,IAAI/E,UAAUiE,GAAGwB,EAAE6F,OAAO,IAAIpL,WAAW+D,GAAGwB,EAAE8F,OAAOpG,EAAE,IAAIhF,WAAW8D,GAAGwB,EAAE+F,OAAOvG,EAAE,IAAIlF,WAAWkE,GAAGwB,EAAEgG,QAAQ,IAAIxL,YAAYgE,GAAGwB,EAAEiG,QAAQtG,EAAE,IAAI/E,YAAY4D,GAAGwB,EAAEkG,QAAQrG,EAAE,IAAIxF,aAAamE,GAAGwB,EAAEmG,QAAQpG,EAAE,IAAIpF,aAAa6D,GAAG,oBAAoBsG,aAAa,IAAID,EAAE,YAAYxD,IAAIjC,EAAEY,EAAEtC,QAAQ,IAAI0I,EAAEpG,EAAEqG,gBAAgB,SAAS,GAAGhF,EAAElC,EAAEa,EAAEsG,WAAWlH,EAAEY,EAAEtC,YAAY,GAAGsC,EAAEsG,WAAWnH,EAAEa,EAAEsG,gBAAgB,MAAMnH,EAAE,IAAIsF,YAAY8B,OAAO,CAACC,QAAQJ,EAAE,MAAMK,QAAQ,MAAMC,QAAO,KAAMhJ,kBAAkBD,mBAAmB,MAAMwG,EAAE,+NAA+NnH,GAAG6F,QAAQoB,IAAI,qHAAqH7K,MAAM,cAAciG,IAAIC,EAAED,EAAEzB,QAAQ0I,EAAEhH,EAAExB,WAAWyB,EAAED,GAAG,IAAIuH,GAAEC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,EAAE,SAAS3E,KAAK,OAAOkC,GAAG,EAAEyC,GAAG,SAASC,KAAK,IAAIzI,EAAEwB,EAAEkH,OAAOC,QAAQP,GAAGQ,QAAQ5I,GAAG,IAAI6I,GAAGC,GAAG,EAAEC,GAAG,KAAKC,GAAG,KAAK,SAASpF,GAAG5D,GAAG,MAAMwB,EAAEyH,SAASzH,EAAEyH,QAAQjJ,GAAGqD,GAAGR,GAAG4C,EAAEzF,GAAGoG,GAAE,EAAGD,EAAE,EAAEnG,EAAE,IAAIiG,YAAYiD,aAAa,SAASlJ,EAAE,gDAAgD0B,EAAE1B,GAAGA,EAAE,SAASmJ,KAAK,OAAON,GAAGO,WAAW,yCAAyC,SAASC,KAAK,IAAIrJ,EAAE6I,GAAG,IAAI,GAAG7I,GAAG6I,IAAIzD,EAAE,OAAO,IAAItJ,WAAWsJ,GAAG,GAAGjD,EAAE,OAAOA,EAAEnC,GAAG,KAAK,kDAAkD,MAAMA,GAAG4D,GAAG5D,IAAIwB,EAAE8H,gBAAgB,GAAG9H,EAAE+H,gBAAgB,GAAGV,GAAG,yBAAyBM,OAAON,GAAG7F,EAAE6F,KAAK,IAAIW,GAAG,CAACC,OAAO,WAAW,KAAK,cAAc,SAASC,GAAG1J,GAAG,KAAK,EAAEA,EAAEpF,QAAQ,CAAC,IAAI8F,EAAEV,EAAE2I,QAAQ,GAAG,mBAAmBjI,EAAEA,EAAEc,OAAO,CAAC,IAAIT,EAAEL,EAAEiJ,GAAG,iBAAiB5I,OAAE,IAASL,EAAEkJ,GAAGzB,GAAElL,IAAI8D,EAANoH,GAAWA,GAAElL,IAAI8D,EAANoH,CAASzH,EAAEkJ,IAAI7I,OAAE,IAASL,EAAEkJ,GAAG,KAAKlJ,EAAEkJ,MAAM,SAASC,GAAG7J,EAAEe,GAAG,GAAG,GAAGf,GAAGA,EAAEU,IAAI9F,QAAQ,EAAEoF,GAAG,EAAEe,EAAE,OAAO,GAAG,GAAG,GAAGA,EAAE,OAAO,EAAE,YAAYA,IAAIA,EAAE,KAAK,IAAIpG,EAAEmP,QAAQC,KAAK9I,IAAI+I,IAAI,GAAG5I,EAAE,EAAE,GAAGzG,GAAGqF,GAAG8J,QAAQG,gBAAgBhJ,IAAI+I,IAAI,EAAErP,EAAE,IAAIA,IAAIyG,EAAE,EAAE,KAAKL,GAAG,OAAO,EAAE,GAAG,IAAIf,EAAE8J,QAAQI,OAAOjJ,IAAIjB,GAAG,EAAEe,IAAI,OAAOf,EAAEoB,EAAE,KAAK,+CAA+CpB,EAAE,SAASmK,GAAGnK,GAAG,GAAG6C,EAAE,KAAK,wFAAwF,IAAI7C,EAAE,KAAK,qDAAqD,IAAIU,EAAE0J,GAAGC,GAAGrK,GAAGU,IAAIO,IAAIjB,EAAE,IAAI,GAAG,EAAEoK,GAAGE,GAAG5J,EAAE6J,SAAS/I,EAAEgJ,uBAAuBX,GAAG,IAAIY,GAAGL,GAAG,CAACM,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,aAAaC,GAAG,WAAW,IAAI,IAAI9K,EAAEmH,GAAG,KAAKzG,EAAE,EAAE,GAAGA,IAAIA,EAAE/F,IAAIqF,EAAE,EAAEU,GAAG,EAAEO,IAAIjB,EAAE,IAAI,GAAGA,EAAEU,EAAEV,EAAE,IAAIiB,IAAIP,GAAG,GAAGA,EAAE,IAAIK,EAAEoG,GAAG,KAAK,IAAIzG,EAAE,EAAE,IAAIA,IAAIA,EAAE/F,IAAIoG,EAAE,EAAEL,GAAG,EAAEoJ,QAAQiB,MAAMpQ,IAAIqF,EAAE,KAAK,EAAEe,GAAG+I,QAAQiB,MAAMpQ,IAAIqF,EAAE,IAAI,EAAEA,GAAGgL,GAAGhL,GAAGwC,EAAE,GAAGyI,GAAGjL,IAAIkL,GAAG,WAAWd,GAAGe,sBAAsBf,GAAGgB,GAAGhB,GAAGiB,WAAWjB,GAAGkB,GAAGlB,GAAGmB,aAAanB,GAAGoB,GAAGpB,GAAGqB,WAAWrB,GAAGsB,GAAGtB,GAAGuB,cAAcvB,GAAGwB,IAAIvB,GAAG,GAAGwB,GAAG,GAAGC,GAAG,WAAW,KAAK,EAAE1B,GAAGyB,GAAGjR,QAAQwP,GAAGyB,GAAGE,KAAN3B,GAAc4B,MAAMC,GAAG,SAASjM,EAAEU,GAAGoJ,QAAQiB,MAAMpQ,IAAIqF,EAAE,IAAI,EAAE,GAAG8J,QAAQiB,MAAMpQ,IAAIqF,EAAE,IAAI,EAAE,GAAGoK,GAAG0B,KAAKhC,QAAQiB,MAAMpQ,IAAIqF,EAAE,GAAG,EAAEU,GAAGoJ,QAAQiB,MAAMpQ,IAAIqF,EAAE,GAAG,EAAE,GAAG6J,GAAG7J,EAAE,EAAE,YAAYgL,GAAG,EAAE,EAAE,IAAIY,GAAG,SAAS5L,GAAGmG,EAAEnG,GAAG0L,GAAG,SAAS1L,GAAG,IAAIU,EAAEwL,KAAKxL,IAAI0J,GAAG6B,GAAGvL,EAAEV,GAAG6C,GAAGsJ,YAAY,CAACC,IAAI,WAAWZ,GAAG,WAAWpB,GAAG6B,GAAGC,MAAM,GAAGC,YAAY,CAACC,IAAI,gBAAgBC,GAAG,WAAW,IAAI,IAAIrM,KAAKoK,GAAGC,GAAG,CAAC,IAAI3J,EAAE0J,GAAGC,GAAGrK,GAAGU,GAAGA,EAAE6J,QAAQH,GAAGE,GAAG5J,EAAE6J,QAAQ,IAAIH,GAAGC,GAAG,GAAGrK,EAAE,EAAEA,EAAEoK,GAAGM,GAAG9P,SAASoF,EAAE,CAAC,IAAIe,EAAEqJ,GAAGM,GAAG1K,GAAGe,EAAEuL,YAAY,IAAIlC,GAAGM,GAAG,GAAG1K,EAAE,EAAEA,EAAEoK,GAAGO,GAAG/P,SAASoF,EAAEU,GAAGK,EAAEqJ,GAAGO,GAAG3K,IAAIuM,GAAGnC,GAAGoC,GAAG9L,GAAGK,EAAEuL,YAAYlC,GAAGO,GAAG,IAAI6B,GAAG,SAASxM,GAAG,GAAGA,EAAE,CAAC,GAAGA,EAAEyM,GAAG,CAAC,IAAI/L,EAAEO,IAAIjB,EAAEyM,GAAG,KAAK,GAAGxL,IAAIjB,EAAEyM,GAAG,KAAK,GAAG,EAAEC,GAAGhM,GAAGgM,GAAG1M,EAAEyM,IAAIzM,EAAEyM,GAAG,EAAEzM,EAAE2M,IAAI3M,EAAE4M,IAAIF,GAAG1M,EAAE4M,IAAI5M,EAAE4M,GAAG,EAAE5M,EAAEuK,SAASvK,EAAEuK,OAAOgC,GAAG,QAAQjC,GAAG,SAAStK,GAAGoK,GAAGyC,IAAG,kBAAmBzC,GAAGC,GAAGrK,EAAEuM,GAAGE,IAAIrC,GAAGM,GAAG5P,KAAKkF,GAAGoK,GAAGO,GAAG9P,OAAOuP,GAAGO,GAAGtP,QAAQ2E,GAAG,GAAGoK,GAAGoC,GAAGxM,EAAEuM,IAAIvM,EAAEuM,QAAG,MAAWM,GAAG,SAAS7M,GAAGiB,IAAI6L,IAAI,GAAG,EAAE,IAAI9M,IAAI,QAAQiB,IAAI6L,IAAI,GAAG,IAAI1B,GAAG,aAAaE,GAAG,WAAW,IAAI,IAAItL,KAAKoK,GAAGQ,GAAGR,GAAGQ,GAAG5K,MAAM+M,GAAG,SAAS/M,EAAEU,GAAGV,EAAEgN,UAAU,SAASjM,GAAG,IAAIK,EAAEL,EAAEnE,KAAK0E,EAAEF,EAAEgL,IAAI,GAAGpM,EAAEuM,KAAKnC,GAAG6C,GAAGjN,EAAEuM,GAAGE,IAAIrL,EAAE8L,cAAc9L,EAAE8L,cAAchB,KAAK,CAAC,IAAI1K,EAAE4I,GAAGC,GAAGjJ,EAAE+L,IAAI3L,EAAEA,EAAE+I,OAAO4B,YAAYpL,EAAEnE,KAAKwE,EAAEgM,cAAc3H,EAAE,0CAA0CnE,EAAE,uBAAuBF,EAAE8L,aAAa,4CAA4C,GAAG,gCAAgC5L,EAAE+L,UAAU,GAAG,gBAAgB/L,EAAEgM,GAAGvM,EAAEnE,WAAW,GAAG,kBAAkB0E,EAAE6I,GAAG/I,EAAEmM,aAAa,GAAG,eAAejM,EAAE,CAAC,GAAGP,EAAEK,EAAEmM,OAAO1K,EAAE,KAAK,qFAAqF,IAAI9B,EAAE,KAAK,kDAAkDE,IAAIF,EAAE,IAAI,GAAG,EAAEK,EAAEgJ,GAAGC,GAAGtJ,UAAUqJ,GAAGC,GAAGtJ,GAAGK,EAAEmJ,OAAO+B,YAAYlC,GAAGoC,GAAGpL,GAAGgJ,GAAGO,GAAG9P,OAAOuP,GAAGO,GAAGtP,QAAQ+F,EAAEmJ,QAAQ,GAAGnJ,EAAEmJ,OAAOgC,QAAG,OAAY,GAAG,iBAAiBjL,EAAE,CAAC,GAAGP,EAAEK,EAAEmM,OAAO1K,EAAE,KAAK,uFAAuF,IAAI9B,EAAE,KAAK,oDAAoDqJ,GAAGC,GAAGtJ,GAAGwJ,OAAO4B,YAAY,CAACC,IAAI,gBAAgB,GAAG,WAAW9K,EAAEtB,EAAEwN,QAAO,EAAG9M,GAAGA,EAAEV,GAAGA,EAAEyN,KAAKzN,EAAEyN,YAAYzN,EAAEyN,SAAS,GAAG,UAAUnM,EAAE+D,EAAE,UAAUjE,EAAEsM,SAAS,KAAKtM,EAAEuM,WAAW,GAAG,aAAarM,EAAEmE,EAAE,UAAUrE,EAAEsM,SAAS,KAAKtM,EAAEuM,WAAW,GAAG,UAAUrM,EAAEsM,MAAM,UAAUxM,EAAEsM,SAAS,KAAKtM,EAAEuM,WAAW,GAAG,SAASrM,EAAEtB,EAAEuM,IAAIzC,QAAQC,KAAKpP,IAAIqF,EAAEuM,GAAGE,GAAG,IAAI,IAAIrC,GAAGE,GAAGtK,QAAQ,GAAG,gBAAgBsB,EAAE,IAAIuM,GAAGzM,EAAE0M,YAAY,MAAM9N,GAAG,GAAGA,aAAa2D,GAAG,OAAO,MAAM3D,MAAM,eAAesB,EAAE8I,GAAGE,GAAGtK,GAAG,mBAAmBsB,IAAI,iBAAiBP,EAAEnE,KAAKmR,OAAO/N,EAAEmM,YAAYpL,EAAEnE,MAAM6I,EAAE,kCAAkCnE,IAAI8I,GAAG6C,QAAG,GAAQjN,EAAEiF,QAAQ,SAASjF,GAAGyF,EAAE,0BAA0BzF,EAAEgO,SAAS,IAAIhO,EAAEiO,OAAO,KAAKjO,EAAEkO,UAAU5P,QAAG,IAAS0B,EAAE0D,KAAK1D,EAAE0D,GAAG,WAAU,SAAUhD,GAAGV,EAAEgN,UAAU,CAACpQ,KAAK8D,OAAOV,EAAE0D,GAAG,SAAQ,SAAUhD,GAAGV,EAAEiF,QAAQvE,MAAMV,EAAE0D,GAAG,QAAO,gBAAiB1D,EAAEmM,YAAY,CAACC,IAAI,OAAO+B,UAAU3M,EAAE4M,qBAAqB9N,WAAWwH,WAAWnH,EAAE0N,WAAWnI,KAAKoI,GAAG,WAAW,IAAItO,EAAEgD,EAAE,+BAA+BoH,GAAGM,GAAG5P,KAAK,IAAImJ,OAAOjE,KAAKuO,GAAG,WAAW,OAAO,GAAGnE,GAAGM,GAAG9P,SAASwP,GAAGkE,KAAKlE,GAAG2C,GAAG3C,GAAGM,GAAG,KAAKN,GAAGM,GAAGqB,OAAOyC,GAAG,SAASxO,GAAG,IAAIA,EAAEkF,YAAYuJ,MAAMzO,EAAEkF,YAAYuJ,MAAMzO,OAAO,SAAS0O,GAAG1O,EAAEU,GAAG,GAAG,IAAIV,EAAEA,EAAE2O,KAAKF,UAAU,CAAC,GAAG,IAAIzO,GAAG,IAAIA,EAAE,OAAOiB,IAAI2N,MAAM,GAAG,IAAI,EAAE5O,EAAEyK,KAAK,OAAOxJ,IAAIP,GAAG,GAAGV,EAAE,IAAI,EAAEiB,IAAIP,EAAE,GAAG,GAAGV,EAAE,IAAI,IAAI,EAAE,EAAE,SAAS6O,GAAG7O,EAAEU,GAAG,GAAGmC,EAAE,OAAOiM,GAAG,EAAE,EAAE9O,EAAEU,GAAG4H,GAAGM,QAAQ,CAACe,GAAG3J,EAAE4J,GAAGlJ,IAAI,SAASqO,GAAG/O,GAAGhF,KAAKgU,GAAGhP,EAAE,GAAGhF,KAAKiU,GAAG,SAASjP,GAAGiB,IAAIjG,KAAKgU,GAAG,GAAG,GAAGhP,GAAGhF,KAAKkU,GAAG,SAASlP,GAAGiB,IAAIjG,KAAKgU,GAAG,GAAG,GAAGhP,GAAGhF,KAAKmU,GAAG,WAAWlO,IAAIjG,KAAKgU,IAAI,GAAG,GAAGhU,KAAKoU,GAAG,WAAW1O,IAAI1F,KAAKgU,GAAG,IAAI,GAAG,GAAGhU,KAAKqU,GAAG,WAAW3O,IAAI1F,KAAKgU,GAAG,IAAI,GAAG,GAAGhU,KAAKsU,GAAG,SAAStP,EAAEU,GAAG1F,KAAKiU,GAAGjP,GAAGhF,KAAKkU,GAAGxO,GAAG1F,KAAKmU,KAAKnU,KAAKoU,KAAKpU,KAAKqU,MAAM,SAAS/B,GAAGtN,GAAG,GAAG6C,EAAE,KAAK,sFAAsF,IAAInC,EAAE0J,GAAGmE,KAAK,IAAI7N,EAAE,OAAO,EAAE,QAAG,IAASA,EAAE6L,GAAG,KAAK,kBAAkB,IAAIvM,EAAEuP,GAAG,KAAK,kCAAkCnF,GAAGO,GAAG7P,KAAK4F,GAAG,IAAI,IAAIK,EAAEoG,GAAG,KAAK/F,EAAE,EAAE,IAAIA,IAAIA,EAAEH,IAAIF,EAAE,EAAEK,GAAG,GAAG,EAAE,IAAIE,EAAEtB,EAAE4M,GAAG5M,EAAEwP,GAAGhO,GAAGJ,EAAEgJ,GAAGC,GAAGrK,EAAEuP,IAAI,CAAChF,OAAO7J,EAAEkM,GAAG5M,EAAE4M,GAAG4C,GAAGxP,EAAEwP,GAAG7C,GAAG3M,EAAE2M,GAAGF,GAAGzM,EAAEuP,KAAK9C,IAAI,EAAE3C,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGxB,EAAEyP,UAAU3F,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGT,GAAG+I,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGJ,EAAEqL,IAAI3C,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGxB,EAAEwP,IAAI1F,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGF,GAAGwI,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGxB,EAAEwP,IAAI1F,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGF,GAAGwI,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGxB,EAAEyP,UAAU1O,EAAE2O,KAAK,GAAG5F,QAAQiB,MAAMpQ,IAAI6G,EAAE,GAAGT,GAAGL,EAAE6L,GAAGnL,EAAE,IAAIK,EAAE,CAAC2K,IAAI,MAAMuD,cAAc3P,EAAE4P,GAAGC,IAAI7P,EAAE4J,GAAGkG,iBAAiB9P,EAAEuP,GAAGQ,UAAU/P,EAAE4M,GAAGoD,UAAUhQ,EAAEwP,IAAI,OAAO9O,EAAE+M,GAAG,WAAWhM,EAAEwO,KAAK/K,YAAYuJ,MAAM/N,EAAEyL,YAAY1K,EAAEzB,EAAEkQ,KAAKxP,EAAE8M,SAAS9M,EAAE+M,YAAY/M,EAAE+M,IAAI,EAAE,SAAS0C,GAAGnQ,EAAEe,EAAEpG,GAAG,GAAG,GAAGqF,GAAGA,EAAEU,IAAI9F,QAAQ,EAAEoF,EAAE,OAAO,GAAG,GAAGsC,EAAE,CAAC,GAAGwH,QAAQC,KAAK9I,IAAIjB,GAAG,IAAIe,EAAE,OAAO,EAAE,IAAIK,EAAE8D,YAAYuJ,MAAM,IAAI9T,EAAEyG,EAAEzG,EAAEmP,QAAQsG,SAASnP,IAAI+I,IAAI,EAAEhK,KAAK,CAAC,IAAIoB,EAAE8D,YAAYuJ,OAAO9T,EAAE,OAAOmP,QAAQsG,SAASnP,IAAI+I,IAAI,EAAE,IAAI,GAAG,GAAG,IAAI5I,EAAE0I,QAAQsG,SAASnP,IAAI+I,IAAI,EAAE,IAAI,MAAM,GAAGqD,KAAKvD,QAAQC,KAAK9I,IAAIjB,GAAG,IAAIe,EAAE,OAAO,EAAE+I,QAAQsG,SAASnP,IAAI+I,IAAI,EAAEhK,GAAG,OAAO,EAAE,GAAG,eAAeA,EAAE8J,QAAQuG,KAAKpP,IAAIjB,GAAG,EAAEe,EAAEpG,IAAI,OAAO,GAAG,GAAG,cAAcqF,EAAE,OAAO,EAAE,GAAG,OAAOA,EAAE,OAAO,EAAE,KAAK,6CAA6CA,EAAE,SAASsQ,KAAKhS,GAAGkE,IAAI2C,IAAIA,EAAE,IAAIA,EAAE,8IAA8IA,EAAE,4IAA4I,EAAEM,EAAE,8IAA8IjE,EAAE+O,oBAAoB,SAASvQ,EAAEU,GAAGgD,GAAG1D,EAAEU,GAAG8P,GAAGxQ,IAAIwB,EAAEiP,iBAAiB,SAASzQ,EAAEU,GAAG,OAAOyH,GAAElL,IAAI+C,EAANmI,CAASzH,IAAI+J,GAAGnM,EAAE,WAAW,IAAI0B,EAAE0C,QAAQgO,SAAS,OAAO,IAAI1Q,EAAE,GAAGA,EAAE,GAAG,KAAK6C,EAAE,WAAW,OAAOqC,YAAYuJ,MAAMjN,EAAEmP,+BAA+B,WAAW,OAAOzL,YAAYuJ,OAAO,IAAImC,GAAG,GAAGC,GAAG,CAAC,KAAK,GAAG,IAAI,SAASC,GAAG9Q,EAAEU,GAAG,IAAIK,EAAE8P,GAAG7Q,GAAG,IAAIU,GAAG,KAAKA,IAAI,IAAIV,EAAEqF,EAAEI,GAAGgB,EAAE1F,EAAE,IAAIA,EAAEnG,OAAO,GAAGmG,EAAEjG,KAAK4F,GAAG,IAAIqQ,GAAG,GAAG,SAASC,GAAGhR,EAAEU,GAAG,OAAOmC,EAAEiM,GAAG,EAAE,EAAE9O,EAAEU,IAAIV,EAAE6G,EAAE7G,GAAG+Q,GAAGE,GAAGjR,EAAEU,IAAI,SAASwQ,GAAGlR,EAAEU,EAAEK,GAAG,OAAO8B,EAAEiM,GAAG,EAAE,EAAE9O,EAAEU,EAAEK,GAAG,EAAE,SAASoQ,GAAGnR,EAAEU,GAAG,GAAGmC,EAAE,OAAOiM,GAAG,EAAE,EAAE9O,EAAEU,GAAG,SAAS0Q,GAAGpR,EAAEU,EAAEK,GAAG,GAAG8B,EAAE,OAAOiM,GAAG,EAAE,EAAE9O,EAAEU,EAAEK,GAAG,SAASsQ,GAAGrR,EAAEU,EAAEK,GAAG,OAAO8B,EAAEiM,GAAG,EAAE,EAAE9O,EAAEU,EAAEK,GAAG,EAAE,SAASuQ,GAAGtR,EAAEU,GAAG,GAAGmC,EAAE,OAAOiM,GAAG,EAAE,EAAE9O,EAAEU,GAAG,SAAS6Q,GAAGvR,EAAEU,GAAG,OAAOmC,EAAEiM,GAAG,EAAE,EAAE9O,EAAEU,IAAIV,EAAE6G,EAAE7G,GAAG+Q,GAAGS,GAAGxR,EAAEU,IAAI,SAAS+Q,GAAGzR,EAAEU,EAAEO,EAAEtG,EAAEyG,EAAEE,GAAG,GAAGuB,EAAEnC,EAAEoO,GAAG,EAAE,EAAE9O,EAAEU,EAAEO,EAAEtG,EAAEyG,EAAEE,QAAQ,GAAGA,IAAI,GAAG,IAAI,GAAG3G,IAAI,GAAGqF,EAAE,MAAMU,GAAG,QAAQ,GAAG,IAAI,GAAG/F,GAAG,CAAC,IAAI6G,EAAE,MAAMkQ,KAAKC,KAAKjR,EAAE,QAAQV,EAAE4R,GAAG,MAAMpQ,IAAIT,IAAI8Q,KAAK,EAAE7R,EAAEA,EAAEwB,GAAGxB,EAAE,EAAEA,GAAG4Q,GAAG5Q,GAAG,CAAC8R,GAAG9R,EAAE+R,GAAGrR,EAAEsR,IAAG,EAAGC,GAAG7Q,EAAE8Q,GAAGjR,EAAEkR,MAAMxX,EAAEyX,OAAO9Q,GAAGZ,EAAEV,GAAGU,GAAG,QAAQA,GAAG,GAAG,OAAOA,EAAE,SAAS2R,GAAGrS,EAAEU,GAAG,GAAGmC,EAAE7C,EAAE8O,GAAG,GAAG,EAAE9O,EAAEU,OAAO,CAAC,IAAIK,EAAE6P,GAAG5Q,GAAG,IAAIU,GAAGK,GAAGL,IAAIK,EAAEgR,KAAKnB,GAAG5Q,GAAG,KAAKe,EAAEiR,IAAItF,GAAG3L,EAAE+Q,KAAK9R,EAAE,GAAGA,GAAG,GAAG,OAAOA,EAAE,SAASsS,GAAGtS,EAAEU,EAAEK,GAAG,GAAG8B,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEU,EAAEK,GAAG,SAASwR,GAAGvS,EAAEU,EAAEK,GAAG,OAAO8B,EAAEiM,GAAG,GAAG,EAAE9O,EAAEU,EAAEK,IAAIf,EAAE6G,EAAE7G,GAAG+Q,GAAGyB,GAAGxS,EAAEU,EAAEK,IAAI,SAAS0R,GAAGzS,GAAG,GAAG6C,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,GAAG,SAAS0S,GAAG1S,EAAEU,GAAG,GAAGmC,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEU,GAAG,SAASiS,GAAG3S,GAAG,GAAG6C,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,GAAG,SAAS4S,KAAK,GAAG/P,EAAE,OAAOiM,GAAG,GAAG,GAAGlL,KAAK,IAAIiP,GAAG,GAAG,SAAS/D,GAAG9O,EAAEU,GAAG,IAAI,IAAIK,EAAE+R,UAAUlY,OAAO,EAAEqG,EAAE8R,KAAKpY,EAAEqY,GAAG,EAAEjS,GAAGK,EAAEzG,GAAG,EAAE6G,EAAE,EAAEA,EAAET,EAAES,IAAI,CAAC,IAAIC,EAAEqR,UAAU,EAAEtR,GAAGF,IAAIF,EAAEI,GAAGC,EAAE,OAAOV,EAAEkS,GAAGjT,EAAEe,EAAEpG,EAAE+F,GAAG8P,GAAGvP,GAAGF,EAAE,IAAImS,GAAG,GAAGC,GAAG,CAAC,EAAE,oBAAoB5S,SAASA,SAAS,EAAE,oBAAoBgC,OAAOA,OAAO,GAAG,SAAS6Q,GAAGpT,GAAG,OAAOA,EAAE,EAAEA,EAAE6G,EAAE7G,GAAGA,EAAEmT,GAAGnT,KAAK,oBAAoBO,SAASA,SAAS8S,cAAcrT,QAAG,GAAQ,SAASsT,GAAGtT,EAAEU,EAAEK,GAAG,IAAIpG,EAAEyY,GAAGpT,GAAG,IAAIrF,EAAE,OAAO,EAAE,GAAGA,EAAE4Y,KAAKtS,IAAItG,EAAE4Y,IAAI,GAAG7S,EAAEO,IAAItG,EAAE4Y,GAAG,GAAG,GAAGxS,IAAIpG,EAAE6Y,IAAI7Y,EAAE8Y,GAAG,CAAC,GAAG9Y,EAAE4Y,GAAG,CAAC5Y,EAAEsG,IAAItG,EAAE4Y,GAAG,GAAG,GAAGvT,EAAEA,EAAE6G,EAAE7G,GAAG,GAAG,IAAIoB,EAAE2R,KAAKzR,EAAE0R,GAAG,IAAIxR,EAAE,EAAE,GAAGxB,EAAE,CAACwB,EAAEyF,EAAEjH,GAAG,EAAE,IAAIyB,EAAE0F,GAAG3F,GAAGwF,EAAEhH,EAAEyB,EAAED,GAAGA,EAAEC,EAAE,OAAOR,IAAIK,GAAG,GAAGE,EAAEP,IAAIK,EAAE,GAAG,GAAGZ,EAAEO,IAAIK,EAAE,GAAG,GAAGP,EAAE2S,GAAG,EAAE/Y,EAAE,UAAU,EAAE6G,EAAEF,GAAGkP,GAAGpP,GAAG,EAAE,OAAO,EAAE,OAAOzG,EAAE6Y,KAAK7Y,EAAEA,EAAE6Y,IAAIxT,GAAE,EAAGrF,EAAEgZ,IAAIhZ,EAAEgZ,GAAGC,KAAK5T,EAAE,KAAKA,EAAErF,EAAEgZ,GAAGC,GAAGC,aAAa,OAAO,IAAI,IAAI7T,EAAE,IAAIA,EAAE,KAAKrF,EAAEmZ,OAAO9T,EAAE,KAAKrF,EAAEoZ,QAAQpZ,EAAEmZ,MAAMpT,EAAE/F,EAAEoZ,OAAOhT,EAAEf,GAAGrF,EAAEgZ,GAAGC,GAAGI,SAAS,EAAE,EAAEtT,EAAEK,GAAG,EAAE,SAASkT,GAAGjU,EAAEU,EAAEK,GAAG,OAAO8B,EAAEiM,GAAG,GAAG,EAAE9O,EAAEU,EAAEK,GAAGuS,GAAGtT,EAAEU,EAAEK,GAAG,IAAImT,GAAG,CAAC,UAAU,YAAY,oBAAoBC,GAAG,CAAC,WAAW,aAAa,cAAcC,GAAG,CAAC,OAAO,OAAO,OAAO,QAAQC,GAAG,CAAC,OAAO,QAAQC,GAAG,CAAC,mBAAmB,UAAUC,GAAG,0CAA0CC,MAAM,KAAK,SAASC,GAAGzU,EAAEU,GAAG,GAAG,IAAIV,GAAG,IAAIU,EAAE,CAAC,IAAI,IAAIK,EAAE,GAAGpG,EAAE,EAAEA,EAAEqF,IAAIrF,EAAE+F,GAAG,EAAEK,EAAEjG,KAAKmG,IAAIP,GAAG,IAAI,OAAOK,GAAG,SAAS2T,GAAG1U,EAAEU,EAAE,WAAW,MAAMU,EAAEH,IAAIjB,GAAG,GAAGrF,IAAIqF,EAAE,GAAG,GAAG,OAAOA,EAAErF,IAAIqF,EAAE,GAAG,GAAGqD,EAAE,YAAY3C,GAAG,IAAI7E,aAAakF,IAAI7B,OAAOkC,EAAEpB,EAAEnE,aAAa8Y,mBAAmB,SAASC,GAAG5U,GAAG,MAAM,CAAC6U,MAAMzT,IAAIpB,GAAG,IAAI,SAAS8U,GAAG9U,GAAG,MAAM,CAACrD,KAAK4X,GAAG5Z,IAAIqF,GAAG,IAAI+U,WAAWN,GAAG9Z,IAAIqF,EAAE,GAAG,GAAGiB,IAAIjB,EAAE,GAAG,KAAK,SAASgV,GAAGhV,GAAG,MAAM,CAACiV,iBAAiBR,GAAG9Z,IAAIqF,GAAG,GAAGiB,IAAIjB,EAAE,GAAG,IAAIkV,QAAQ,aAAaf,GAAGlT,IAAIjB,EAAE,IAAI,IAAIyU,GAAG9Z,IAAIqF,EAAE,GAAG,GAAGiB,IAAIjB,EAAE,IAAI,SAAI,EAAOmV,QAAQV,GAAG9Z,IAAIqF,EAAE,IAAI,GAAGiB,IAAIjB,EAAE,IAAI,IAAIoV,UAAUX,GAAG9Z,IAAIqF,EAAE,IAAI,GAAGiB,IAAIjB,EAAE,IAAI,IAAIqV,QAAQlB,GAAGlT,IAAIjB,EAAE,IAAI,IAAIsV,OAAOjB,GAAGpT,IAAIjB,EAAE,IAAI,KAAK,IAAIuV,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAG,GAAG,SAASC,KAAK,IAAIF,GAAG,CAAC,IAAI/V,EAAEU,EAAE,CAACwV,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAiBC,WAAWA,UAAUC,WAAWD,UAAUC,UAAU,IAAI,KAAKjT,QAAQ,IAAI,KAAK,SAASnB,EAAEN,GAAG,kBAAkB,IAAI/B,KAAKgW,QAAG,IAASA,GAAGhW,UAAUU,EAAEV,GAAGU,EAAEV,GAAGgW,GAAGhW,GAAG,IAAIe,EAAE,GAAG,IAAIf,KAAKU,EAAEK,EAAEjG,KAAKkF,EAAE,IAAIU,EAAEV,IAAI+V,GAAGhV,EAAE,OAAOgV,GAAG,SAASW,GAAG1W,EAAEe,GAAG,GAAG8B,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEe,GAAG,IAAIpG,EAAE,EAAE,OAAOsb,KAAKU,SAAQ,SAAUvV,EAAEE,GAAG,IAAIE,EAAET,EAAEpG,EAAE,IAAI2G,EAAEL,IAAIjB,EAAE,EAAEsB,GAAG,GAAGE,EAAEA,EAAE,EAAEA,EAAEJ,EAAExG,SAAS4G,EAAEd,IAAIY,KAAK,GAAGF,EAAE2F,WAAWvF,GAAGd,IAAIY,GAAG,GAAG,EAAE3G,GAAGyG,EAAExG,OAAO,KAAK,EAAE,SAASgc,GAAG5W,EAAEU,GAAG,GAAGmC,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEU,GAAG,IAAIK,EAAEkV,KAAKhV,IAAIjB,GAAG,GAAGe,EAAEnG,OAAO,IAAID,EAAE,EAAE,OAAOoG,EAAE4V,SAAQ,SAAU3W,GAAGrF,GAAGqF,EAAEpF,OAAO,KAAKqG,IAAIP,GAAG,GAAG/F,EAAE,EAAE,SAASkc,GAAG7W,GAAG,OAAO6C,EAAEiM,GAAG,GAAG,EAAE9O,GAAG,EAAE,SAAS8W,GAAG9W,EAAEe,GAAG,OAAO8B,EAAEiM,GAAG,GAAG,EAAE9O,EAAEe,IAAIf,EAAE,GAAGA,GAAG,GAAGA,EAAE,EAAE4D,KAAKlD,IAAIK,GAAG,GAAGf,EAAE,GAAG,SAAS+W,GAAG/W,EAAEU,EAAEK,EAAEpG,GAAG,OAAOkI,EAAEiM,GAAG,GAAG,EAAE9O,EAAEU,EAAEK,EAAEpG,IAAIqF,EAAE+Q,GAAGiG,GAAGhX,GAAGU,EAAEqQ,GAAGkG,GAAGjX,EAAEU,EAAEK,GAAGE,IAAItG,GAAG,GAAG+F,EAAE,GAAG,SAASwW,GAAGlX,EAAEU,EAAEK,EAAEE,EAAEtG,GAAG,GAAGkI,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEU,EAAEK,EAAEE,EAAEtG,GAAG,SAASwc,GAAGnX,EAAEU,EAAE/F,EAAEyG,GAAG,GAAGyB,EAAE,OAAOiM,GAAG,GAAG,EAAE9O,EAAEU,EAAE/F,EAAEyG,GAAG,IAAI,IAAIE,EAAE,EAAEE,EAAE,EAAEA,EAAE7G,EAAE6G,IAAI,CAAC,IAAI,IAAIC,EAAER,IAAIP,EAAE,EAAEc,GAAG,GAAGE,EAAET,IAAIP,GAAG,EAAEc,EAAE,IAAI,GAAGK,EAAE,EAAEA,EAAEH,EAAEG,IAAIiP,GAAG9Q,EAAEe,IAAIU,EAAEI,IAAIP,GAAGI,EAAE,OAAOT,IAAIG,GAAG,GAAGE,EAAE,EAAE,SAAS8V,KAAK,SAASpX,EAAEA,GAAG,OAAOA,EAAEA,EAAEqX,eAAeC,MAAM,sBAAsBtX,EAAE,GAAG,MAAM,GAAG6C,EAAE,OAAOiM,GAAG,GAAG,GAAG,IAAIsI,GAAGG,GAAG,CAACH,GAAGG,IAAG,EAAG,IAAI7W,GAAE,IAAKiO,MAAM6I,cAAczW,EAAE,IAAI4N,KAAKjO,EAAE,EAAE,GAAG/F,EAAE,IAAIgU,KAAKjO,EAAE,EAAE,GAAGA,EAAEK,EAAE0W,oBAAoB,IAAIrW,EAAEzG,EAAE8c,oBAAoBnW,EAAEoQ,KAAKgG,IAAIhX,EAAEU,GAAGH,IAAI0W,MAAM,GAAG,GAAGrW,EAAEL,IAAI2W,MAAM,GAAGra,OAAOmD,GAAGU,GAAGL,EAAEf,EAAEe,GAAGpG,EAAEqF,EAAErF,GAAGoG,EAAEmG,EAAEnG,GAAGpG,EAAEuM,EAAEvM,GAAGyG,EAAEV,GAAGO,IAAI4W,MAAM,GAAG9W,EAAEE,IAAI4W,KAAK,GAAG,GAAGld,IAAIsG,IAAI4W,MAAM,GAAGld,EAAEsG,IAAI4W,KAAK,GAAG,GAAG9W,IAAI,SAAS+W,GAAG9X,GAAG,OAAO,GAAGA,EAAE,IAAI,GAAGA,EAAE,KAAK,GAAGA,EAAE,KAAK,SAAS+X,GAAG/X,EAAEU,GAAG,IAAI,IAAIK,EAAE,EAAEE,EAAE,EAAEA,GAAGP,EAAEK,GAAGf,EAAEiB,MAAM,OAAOF,EAAE,IAAIiX,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASC,GAAGlY,EAAEU,GAAG,IAAIV,EAAE,IAAI2O,KAAK3O,EAAEmY,WAAW,EAAEzX,GAAG,CAAC,IAAIK,EAAEf,EAAEoY,WAAWnX,GAAG6W,GAAG9X,EAAEwX,eAAeQ,GAAGC,IAAIlX,GAAG,KAAKL,EAAEO,EAAEjB,EAAEqY,WAAW,CAACrY,EAAEsY,QAAQtY,EAAEqY,UAAU3X,GAAG,MAAMA,GAAGO,EAAEjB,EAAEqY,UAAU,EAAErY,EAAEsY,QAAQ,GAAG,GAAGvX,EAAEf,EAAEuY,SAASxX,EAAE,IAAIf,EAAEuY,SAAS,GAAGvY,EAAEwY,YAAYxY,EAAEwX,cAAc,IAAI,OAAOxX,EAAE,SAASyY,GAAGzY,EAAEe,EAAEpG,EAAEyG,GAAG,SAASE,EAAEtB,EAAEU,EAAEK,GAAG,IAAIf,EAAE,iBAAiBA,EAAEA,EAAE0Y,WAAW1Y,GAAG,GAAGA,EAAEpF,OAAO8F,GAAGV,EAAEe,EAAE,GAAGf,EAAE,OAAOA,EAAE,SAASwB,EAAExB,EAAEU,GAAG,OAAOY,EAAEtB,EAAEU,EAAE,KAAK,SAASe,EAAEzB,EAAEU,GAAG,SAASK,EAAEf,GAAG,OAAO,EAAEA,GAAG,EAAE,EAAEA,EAAE,EAAE,EAAE,IAAIiB,EAAE,OAAO,KAAKA,EAAEF,EAAEf,EAAEwX,cAAc9W,EAAE8W,iBAAiB,KAAKvW,EAAEF,EAAEf,EAAEoY,WAAW1X,EAAE0X,eAAenX,EAAEF,EAAEf,EAAEqY,UAAU3X,EAAE2X,YAAYpX,EAAE,SAASS,EAAE1B,GAAG,OAAOA,EAAE2Y,UAAU,KAAK,EAAE,OAAO,IAAIhK,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAOxX,EAAE,KAAK,EAAE,OAAO,IAAI2O,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAI7I,KAAK3O,EAAEwX,cAAc,EAAE,GAAG,KAAK,SAAS3V,EAAE7B,GAAGA,EAAEkY,GAAG,IAAIvJ,KAAK3O,EAAE4Y,GAAG,KAAK,EAAE,GAAG5Y,EAAE6Y,IAAI,IAAInY,EAAE,IAAIiO,KAAK3O,EAAEwX,cAAc,EAAE,EAAE,GAAGzW,EAAEW,EAAE,IAAIiN,KAAK3O,EAAEwX,cAAc,EAAE,IAAI,OAAO9W,EAAEgB,EAAEhB,GAAG,GAAGe,EAAEV,EAAEf,GAAG,GAAGyB,EAAEf,EAAEV,GAAGA,EAAEwX,cAAc,EAAExX,EAAEwX,cAAcxX,EAAEwX,cAAc,EAAE,IAAI1V,EAAEb,IAAIG,EAAE,IAAI,GAAG,IAAI,IAAIW,KAAKX,EAAE,CAAC0X,GAAG7X,IAAIG,GAAG,GAAG2X,GAAG9X,IAAIG,EAAE,GAAG,GAAG4X,GAAG/X,IAAIG,EAAE,GAAG,GAAG6X,GAAGhY,IAAIG,EAAE,IAAI,GAAG8X,GAAGjY,IAAIG,EAAE,IAAI,GAAGwX,GAAG3X,IAAIG,EAAE,IAAI,GAAG+X,GAAGlY,IAAIG,EAAE,IAAI,GAAGyX,GAAG5X,IAAIG,EAAE,IAAI,GAAGgY,GAAGnY,IAAIG,EAAE,IAAI,GAAGiY,GAAGpY,IAAIG,EAAE,IAAI,GAAGkY,GAAGxX,EAAE+E,EAAE/E,GAAG,IAAInH,EAAEkM,EAAElM,GAAGmH,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAMnH,EAAEA,EAAE6I,QAAQ,IAAI+V,OAAOxX,EAAE,KAAKD,EAAEC,IAAI,IAAIC,EAAE,2DAA2DwS,MAAM,KAAKvS,EAAE,wFAAwFuS,MAAM,KAAK,IAAIzS,KAAKD,EAAE,CAAC,KAAK,SAAS9B,GAAG,OAAOgC,EAAEhC,EAAEmZ,IAAIK,UAAU,EAAE,IAAI,KAAK,SAASxZ,GAAG,OAAOgC,EAAEhC,EAAEmZ,KAAK,KAAK,SAASnZ,GAAG,OAAOiC,EAAEjC,EAAEkZ,IAAIM,UAAU,EAAE,IAAI,KAAK,SAASxZ,GAAG,OAAOiC,EAAEjC,EAAEkZ,KAAK,KAAK,SAASlZ,GAAG,OAAOwB,GAAGxB,EAAE4Y,GAAG,MAAM,IAAI,EAAE,IAAI,KAAK,SAAS5Y,GAAG,OAAOwB,EAAExB,EAAEiZ,GAAG,IAAI,KAAK,SAASjZ,GAAG,OAAOsB,EAAEtB,EAAEiZ,GAAG,EAAE,MAAM,KAAK,SAASjZ,GAAG,OAAO6B,EAAE7B,GAAG0Y,WAAWc,UAAU,IAAI,KAAK,SAASxZ,GAAG,OAAO6B,EAAE7B,IAAI,KAAK,SAASA,GAAG,OAAOwB,EAAExB,EAAEgZ,GAAG,IAAI,KAAK,SAAShZ,GAAG,OAAO,IAAIA,EAAEA,EAAEgZ,IAAIhZ,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAIwB,EAAExB,EAAE,IAAI,KAAK,SAASA,GAAG,OAAOwB,EAAExB,EAAEiZ,GAAGlB,GAAGD,GAAG9X,EAAE4Y,GAAG,MAAMZ,GAAGC,GAAGjY,EAAEkZ,GAAG,GAAG,IAAI,KAAK,SAASlZ,GAAG,OAAOwB,EAAExB,EAAEkZ,GAAG,EAAE,IAAI,KAAK,SAASlZ,GAAG,OAAOwB,EAAExB,EAAE+Y,GAAG,IAAI,KAAK,WAAW,MAAM,MAAM,KAAK,SAAS/Y,GAAG,OAAO,GAAGA,EAAEgZ,IAAI,GAAGhZ,EAAEgZ,GAAG,KAAK,MAAM,KAAK,SAAShZ,GAAG,OAAOwB,EAAExB,EAAE8Y,GAAG,IAAI,KAAK,WAAW,MAAM,MAAM,KAAK,SAAS9Y,GAAG,OAAOA,EAAEmZ,IAAI,GAAG,KAAK,SAASnZ,GAAG,IAAIU,EAAE,IAAIiO,KAAK3O,EAAE4Y,GAAG,KAAK,EAAE,GAAG7X,EAAE,IAAIL,EAAEiY,SAASjY,EAAEwX,GAAGxX,EAAE,EAAEA,EAAEiY,UAAU,OAAO,EAAElX,EAAEV,EAAEf,EAAE,IAAI2O,KAAK3O,EAAE4Y,GAAG,KAAK5Y,EAAEkZ,GAAGlZ,EAAEiZ,KAAKzX,EAAEkQ,KAAKC,MAAM,GAAG5Q,EAAEsX,WAAWN,GAAGD,GAAG9X,EAAEwX,eAAeQ,GAAGC,GAAGjY,EAAEoY,WAAW,GAAG,IAAIpY,EAAEqY,WAAW,GAAG,GAAG,IAAI5W,EAAEV,EAAEL,GAAG,KAAK,MAAM,KAAK,SAASV,GAAG,IAAIU,EAAE,IAAIiO,KAAK3O,EAAE4Y,GAAG,KAAK,EAAE,GAAG7X,EAAEW,EAAE,IAAIiN,KAAK3O,EAAE4Y,GAAG,KAAK,EAAE,IAAIlY,EAAEgB,EAAEhB,GAAG,IAAIO,EAAEiX,GAAG,IAAIvJ,KAAK3O,EAAE4Y,GAAG,KAAK,EAAE,GAAG5Y,EAAE6Y,IAAI,OAAO,EAAEpX,EAAER,EAAEF,GAAG,KAAK,GAAGU,EAAEf,EAAEO,GAAG,KAAKO,EAAEkQ,KAAKC,MAAM5Q,EAAEyW,cAAcxX,EAAE4Y,GAAG,KAAK5Y,EAAE6Y,GAAG,GAAG9X,EAAEsX,UAAUrY,EAAE6Y,GAAG,EAAE9X,EAAEsX,WAAW,GAAG,IAAI,KAAK,SAASrY,GAAG,OAAOA,EAAEmZ,IAAI,KAAK,SAASnZ,GAAG,IAAIU,EAAE,IAAIiO,KAAK3O,EAAE4Y,GAAG,EAAE,GAAG7X,EAAE,IAAIL,EAAEiY,SAASjY,EAAEwX,GAAGxX,EAAE,IAAIA,EAAEiY,SAAS,EAAE,EAAEjY,EAAEiY,SAAS,GAAG,OAAO,EAAElX,EAAEV,EAAEf,EAAE,IAAI2O,KAAK3O,EAAE4Y,GAAG,KAAK5Y,EAAEkZ,GAAGlZ,EAAEiZ,KAAKzX,EAAEkQ,KAAKC,MAAM,GAAG5Q,EAAEsX,WAAWN,GAAGD,GAAG9X,EAAEwX,eAAeQ,GAAGC,GAAGjY,EAAEoY,WAAW,GAAG,IAAIpY,EAAEqY,WAAW,GAAG,GAAG,IAAI5W,EAAEV,EAAEL,GAAG,KAAK,MAAM,KAAK,SAASV,GAAG,OAAOA,EAAE4Y,GAAG,MAAMF,WAAWc,UAAU,IAAI,KAAK,SAASxZ,GAAG,OAAOA,EAAE4Y,GAAG,MAAM,KAAK,SAAS5Y,GAAG,IAAIU,EAAE,IAAIV,EAAEA,EAAEqZ,IAAI,OAAOrZ,EAAE0R,KAAK+H,IAAIzZ,GAAG,IAAIU,EAAE,IAAI,KAAKiG,OAAO,QAAQ3G,EAAE,GAAG,IAAIA,EAAE,KAAKyD,OAAO,IAAI,KAAK,SAASzD,GAAG,OAAOA,EAAEsZ,IAAI,KAAK,WAAW,MAAM,MAAM3e,EAAE+e,SAAS3X,KAAKpH,EAAEA,EAAE6I,QAAQ,IAAI+V,OAAOxX,EAAE,KAAKD,EAAEC,GAAGX,KAAK,OAAOW,EAAE,SAAS/B,GAAG,IAAIU,EAAE5D,MAAMmK,EAAEjH,GAAG,GAAG,OAAO8G,EAAE9G,EAAEU,EAAE,EAAEA,EAAE9F,QAAQ8F,EAAzD,CAA4D/F,IAAIC,OAAOmG,EAAE,GAAG,SAASf,EAAEe,GAAGL,IAAIpE,IAAI0D,EAAEe,GAAxB,CAA4BgB,EAAE/B,GAAG+B,EAAEnH,OAAO,GAAG2a,KAAKA,GAAGA,IAAI,CAACoE,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAKwV,GAAGA,IAAI,CAACmE,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAKyV,GAAGA,IAAI,CAACkE,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAK0V,GAAGA,IAAI,CAACiE,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAK2V,GAAGA,IAAI,CAACgE,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAK4V,GAAGA,IAAI,CAAC+D,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAK6V,GAAGA,IAAI,CAAC8D,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,KAAK8V,GAAGA,IAAI,CAAC6D,GAAG,GAAGC,GAAG,EAAEC,OAAO,SAAS7Z,EAAEU,GAAGA,EAAEA,GAAG,GAAG,IAAIK,EAAE/F,KAAK4e,KAAK,OAAOlZ,EAAEoZ,GAAG,EAAEpZ,EAAEqZ,OAAO/Z,EAAEhF,KAAK2e,GAAG5Y,GAAGL,EAAEK,GAAG9D,IAAI,SAAS+C,GAAG,GAAG,IAAIA,EAAE,OAAOhF,KAAK2e,GAAG3Z,GAAG+Z,QAAQC,GAAG,SAASha,GAAGhF,KAAK2e,GAAG3Z,GAAG8Z,MAAMG,QAAQ,SAASja,GAAG,IAAIU,EAAE1F,KAAK2e,GAAG3Z,GAAGU,EAAEoZ,KAAK,GAAGpZ,EAAEoZ,WAAW9e,KAAK2e,GAAG3Z,MAAM,IAAIka,GAAG,CAAC,KAAKrL,GAAGmC,GAAGE,GAAGC,GAAGC,GAAGC,GAAGC,GAAGC,GAAGE,GAAGY,GAAGC,GAAGC,GAAGE,GAAGC,GAAGC,GAAGC,GAAGqB,GAAGyC,GAAGE,GAAGC,GAAGC,GAAGC,GAAGG,GAAGC,GAAGC,IAAI+C,GAAG,CAAClY,EAAE,SAASjC,EAAEU,EAAEK,EAAEE,GAAG2C,GAAG,qBAAqBiD,EAAE7G,GAAG,SAAS,CAACU,EAAEmG,EAAEnG,GAAG,mBAAmBK,EAAEE,EAAE4F,EAAE5F,GAAG,sBAAsBM,EAAE,SAASvB,EAAEU,GAAG,OAAOgO,GAAG1O,EAAEU,IAAIyB,EAAE,SAASnC,GAAG,OAAOmH,GAAGnH,EAAE,IAAI,IAAI+B,EAAE,SAAS/B,EAAEU,GAAG,OAAOmO,GAAG7O,EAAEU,IAAIV,EAAE,SAASA,EAAEU,GAAG0J,GAAGyB,GAAG/Q,MAAK,WAAYqN,GAAElL,IAAI+C,EAANmI,CAASzH,OAAOe,EAAE,SAASzB,EAAEU,EAAEK,GAAG,MAAM,IAAIgO,GAAG/O,GAAGsP,GAAG5O,EAAEK,GAAGf,GAAGgH,EAAE,SAAShH,EAAEU,EAAEK,EAAEK,GAAG,GAAG,oBAAoBnC,kBAAkB,OAAOwG,EAAE,uFAAuF,EAAE,IAAIzF,EAAE,OAAOyF,EAAE,qDAAqD,GAAG,IAAInE,EAAE,GAAG,GAAGuB,GAAG,IAAIvB,EAAE1G,OAAO,OAAOwf,GAAG,UAAUpa,EAAEU,EAAEK,EAAEK,GAAG,IAAII,EAAE,EAAEC,EAAE,EAAE,GAAGf,IAAI,GAAGA,EAAE,CAAC,IAAIgB,EAAET,IAAIP,GAAG,GAAGgB,GAAG,MAAMF,EAAEP,IAAIP,EAAE,GAAG,GAAGe,EAAE,IAAIR,IAAIP,EAAE,IAAI,QAAQgB,EAAE,SAAShB,EAAE,GAAGc,GAAGA,EAAEoQ,GAAG,GAAGlQ,GAAG2B,EAAE,GAAG7B,GAAGE,IAAI,IAAI,IAAIG,EAAEsF,GAAG,KAAKrF,EAAE,EAAE,GAAGA,IAAIA,EAAEnH,KAAKkH,GAAG,GAAGC,GAAG,EAAE,OAAOb,IAAIjB,GAAG,GAAG6B,EAAEZ,IAAIY,EAAE,IAAI,GAAGA,EAAE7B,EAAE6B,EAAE,IAAIZ,IAAIjB,GAAG,GAAGA,EAAEe,EAAE,CAAC6L,GAAGpL,EAAEgO,GAAG9N,EAAEiL,GAAGjM,EAAE+O,SAAShO,EAAEmO,GAAG7O,EAAEwO,GAAG1N,EAAE+H,GAAGxI,EAAE8O,GAAG5O,GAAGuB,GAAG9B,EAAEsZ,GAAG,cAAclO,YAAYpL,EAAEO,GAAG,GAAGgM,GAAGvM,IAAIiC,EAAE,SAAShD,GAAG,MAAM6C,EAAEuH,GAAGsB,GAAG1L,IAAIoK,GAAG0B,KAAK+B,GAAG7N,IAAI,UAAUkB,EAAE,SAASlB,EAAEU,GAAG,OAAO,SAASV,EAAEU,GAAG,IAAIV,EAAE,OAAOyF,EAAE,oDAAoD,GAAG,GAAG5C,GAAGqJ,MAAMlM,EAAE,OAAOyF,EAAE,WAAWzF,EAAE,qCAAqC,GAAG,IAAI6C,GAAGyX,MAAMta,EAAE,OAAOyF,EAAE,eAAezF,EAAE,qCAAqC,GAAG,GAAGiB,IAAIjB,EAAE,IAAI,KAAKA,EAAE,OAAOyF,EAAE,oCAAoCzF,EAAE,wEAAwE,GAAG,GAAG8J,QAAQC,KAAKpP,IAAIqF,EAAE,IAAI,GAAG,OAAOyF,EAAE,4BAA4BzF,EAAE,iCAAiC,GAAG,IAAIsQ,OAAO,CAAC,IAAIvP,EAAE+I,QAAQC,KAAKpP,IAAIqF,EAAE,GAAG,GAAG,GAAG,GAAGe,EAAE,OAAOA,EAAE+I,QAAQC,KAAKpP,IAAIqF,EAAE,GAAG,GAAGU,IAAIO,IAAIP,GAAG,GAAGK,GAAG+I,QAAQiB,MAAMpQ,IAAIqF,EAAE,IAAI,EAAE,GAAG6C,EAAEsJ,YAAY,CAACC,IAAI,gBAAgBmB,OAAOvN,IAAImK,GAAGnK,GAAG,EAAEua,KAAK1X,GAAGwK,KAAK8C,GAAGnQ,EAAE,EAAEe,EAAE8B,EAAE,IAAI,IAA5rB,CAAisB7C,EAAEU,IAAImG,EAAEmK,GAAG/P,EAAEiQ,GAAG/K,EAAEgL,GAAGhJ,EAAEiJ,GAAG5P,EAAE,WAAW,OAAO,IAAI0E,EAAEmL,GAAG5L,EAAE6L,GAAGrK,EAAEsK,GAAGnM,EAAEqM,GAAG9Q,EAAE0R,GAAGlR,EAAEmR,GAAG1K,EAAE2K,GAAG9L,EAAEgM,GAAGnU,EAAEoU,GAAGtM,EAAEuM,GAAG6H,GAAG,SAASxa,EAAEU,GAAG,GAAGV,GAAGU,EAAEyL,YAAY,CAACC,IAAI,qCAAqC,GAAGvJ,EAAEsJ,YAAY,CAACe,aAAalN,EAAEoM,IAAI,2BAA2B,CAAC,KAAKpM,GAAGA,EAAEoK,GAAGC,GAAGrK,KAAKA,EAAEuK,QAAQ,OAAOvK,EAAEmM,YAAY,CAACC,IAAI,uBAAuB,OAAO,GAAGvK,EAAE+Q,GAAGzN,EAAEuJ,GAAG+L,GAAG,SAASza,EAAEU,GAAG,OAAOV,EAAEU,GAAGI,EAAE,WAAW8C,GAAG,gIAAgI1B,EAAE,WAAW0B,GAAG,gIAAgI8W,GAAG,WAAW9W,GAAG,gIAAgIb,EAAE,WAAWa,GAAG,gIAAgI+W,GAAG,SAAS3a,EAAEU,EAAE/F,GAAG,IAAIyG,EAAE,IAAIyR,GAAGjY,OAAO,EAAED,IAAI,EAAEyG,EAAEL,IAAIL,OAAOU,EAAE,IAAIA,IAAI,EAAEzG,GAAGA,IAAIkY,GAAG/X,KAAKsG,EAAEE,IAAI3G,KAAK,GAAGsG,IAAItG,MAAMA,EAAE,OAAO6O,GAAGxJ,GAAG4a,MAAM,KAAK/H,KAAKxR,EAAEiP,GAAGvP,EAAE,aAAasE,EAAE8K,GAAGvP,EAAEiJ,GAAGrD,EAAE,WAAW,OAAO,YAAY7L,EAAE8P,GAAG3D,EAAE,SAAS9G,EAAEU,EAAEO,GAAGF,IAAI8Z,WAAW7a,EAAEU,EAAEA,EAAEO,IAAIG,EAAE,WAAW,OAAO9C,EAAE,eAAqB1D,OAAO4b,UAAUsE,qBAAqBzX,EAAE,SAASrD,EAAEU,EAAEK,GAAGmS,GAAGtY,OAAO8F,EAAEK,IAAI,EAAE,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAEO,IAAIiS,GAAGjS,GAAGK,IAAIP,EAAEE,GAAG,OAAO,EAAEjB,EAAEwJ,IAAIxJ,EAAE,GAAGka,GAAGla,IAAI4a,MAAM,KAAK1H,KAAKrQ,EAAE,SAAS7C,GAAG,IAAIU,EAAEK,IAAInG,OAAO,IAAIoF,KAAK,IAAIU,GAAG,WAAWV,EAAE,OAAM,EAAG,IAAI,IAAIiB,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAItG,EAAE+F,GAAG,EAAE,GAAGO,GAAGtG,EAAE+W,KAAKqJ,IAAIpgB,EAAEqF,EAAE,WAAW,GAAGrF,EAAE+W,KAAKgG,IAAI1X,EAAErF,IAAI,QAAQA,GAAG,MAAMA,EAAE,OAAOqF,EAAE,CAAC,IAAIW,EAAEqa,KAAKtJ,KAAKqJ,IAAI,WAAWpgB,GAAGiG,EAAExB,WAAW,QAAQ,IAAIyB,EAAEF,EAAEzB,QAAQ,IAAIkC,EAAE,EAAE,MAAMpB,EAAE,MAAMA,IAAIoB,OAAE,EAAO,GAAGA,EAAE,OAAM,EAAG,OAAM,GAAIiB,EAAE,SAASrC,EAAEU,EAAEK,GAAG,OAAOqS,GAAGpT,GAAGsT,GAAGtT,EAAEU,EAAEK,GAAGkT,GAAGjU,EAAEU,EAAEK,IAAIyB,EAAE,aAAaxB,EAAE,SAAShB,EAAEU,EAAEK,GAAG,OAAOyH,IAAI,EAAEyS,YAAW,aAAczS,GAAG,SAASxI,GAAG,IAAIoG,EAAE,CAAC,IAAIpG,IAAI,MAAMA,GAAG,GAAGA,aAAa2D,GAAG,OAAO,GAAG,WAAW3D,EAAE,MAAMA,GAAG,iBAAiBA,GAAGA,EAAEkb,OAAOzV,EAAE,qBAAqB,CAACzF,EAAEA,EAAEkb,QAAQlb,EAAE,IAAI6D,KAAK,IAAIhB,EAAEsY,GAAGhV,GAAG0H,GAAG1H,GAAG,MAAMnG,GAAG,KAAKA,aAAa2D,IAAI,MAAM3D,IAA1N,EAA+N,WAAYmI,GAAElL,IAAI+C,EAANmI,CAASpH,QAAQL,IAAIG,EAAE,SAASb,EAAEU,GAAGA,IAAI,EAAE,IAAIK,EAAEE,IAAIP,EAAE,GAAG,OAAOA,EAAE,CAACmU,QAAQ5T,IAAIP,GAAG0a,QAAQna,IAAIP,EAAE,GAAG2a,UAAUpa,IAAIP,EAAE,GAAG4a,YAAYra,IAAIP,EAAE,GAAG6a,qBAAqBta,IAAIP,EAAE,GAAG8a,wBAAwBva,IAAIP,EAAE,GAAG+a,gBAAgBvH,GAAGnT,GAAG2a,+BAA+Bza,IAAIP,EAAE,GAAGib,GAAG1a,IAAIP,EAAE,GAAGkb,GAAG3a,IAAIP,EAAE,GAAGmb,GAAG5a,IAAIP,EAAE,IAAIob,GAAG7a,IAAIP,EAAE,IAAIqb,GAAG9a,IAAIP,EAAE,IAAIsb,GAAG/a,IAAIP,EAAE,OAAOV,EAAEoT,GAAGpT,KAAKU,EAAEob,GAAG,EAAE,SAAS9b,EAAEU,GAAGV,EAAEic,KAAKjc,EAAEic,GAAGjc,EAAEkc,WAAWlc,EAAEkc,WAAW,SAASxb,EAAEK,GAAG,MAAM,SAASL,IAAIK,EAAEf,EAAEic,GAAGvb,EAAEK,cAAcob,sBAAsBpb,EAAE,OAAO,IAAIA,EAAEf,EAAEkc,WAAW,QAAQxb,GAAG,OAAOK,EAAE,SAASf,EAAEU,GAAG,IAAIK,EAAEoG,GAAG,GAAGlG,IAAIF,EAAE,GAAG,GAAGmL,KAAK,IAAIvR,EAAE,CAACyhB,GAAGrb,EAAEsb,WAAW3b,EAAE4b,QAAQ5b,EAAEib,GAAG/H,GAAG5T,GAAG,OAAOA,EAAEuc,SAASvc,EAAEuc,OAAO5I,GAAGhZ,SAAI,IAAS+F,EAAEmb,IAAInb,EAAEmb,KAAK,SAAS7b,GAAG,GAAGA,IAAIA,OAAE,IAASA,EAAEwc,GAAG,CAACxc,EAAEwc,IAAG,EAAG,IAAI9b,EAAEV,EAAE4T,IAAI,SAAS5T,GAAG,IAAIU,EAAEV,EAAEyc,aAAa,0BAA0B/b,IAAIV,EAAE0c,oBAAoB,SAAS1c,EAAEe,GAAGL,EAAEic,yBAAyB3c,EAAEe,IAAIf,EAAE4c,oBAAoB,SAAS5c,EAAEe,EAAEE,EAAEtG,GAAG+F,EAAEmc,yBAAyB7c,EAAEe,EAAEE,EAAEtG,IAAIqF,EAAE8c,sBAAsB,SAAS9c,EAAEe,EAAEE,EAAEtG,EAAEyG,GAAGV,EAAEqc,2BAA2B/c,EAAEe,EAAEE,EAAEtG,EAAEyG,KAAlS,CAAwSV,GAAG,SAASV,GAAG,IAAIU,EAAEV,EAAEyc,aAAa,2BAA2B/b,IAAIV,EAAEgd,kBAAkB,WAAW,OAAOtc,EAAEuc,wBAAwBjd,EAAEkd,kBAAkB,SAASld,GAAGU,EAAEyc,qBAAqBnd,IAAIA,EAAEod,gBAAgB,SAASpd,GAAGU,EAAE2c,mBAAmBrd,IAAIA,EAAEsd,cAAc,SAAStd,GAAG,OAAOU,EAAE6c,iBAAiBvd,KAAxS,CAA8SU,GAAG,SAASV,GAAG,IAAIU,EAAEV,EAAEyc,aAAa,sBAAsB/b,IAAIV,EAAEwd,YAAY,SAASxd,EAAEe,GAAGL,EAAE+c,iBAAiBzd,EAAEe,KAA5G,CAAkHL,GAAGA,EAAEgd,GAAGhd,EAAE+b,aAAa,4BAA4B/b,EAAEid,GAAGjd,EAAE+b,aAAa,qBAAqB/b,EAAEkd,0BAA0B,IAAIjH,SAAQ,SAAU3W,GAAGA,EAAE0Z,SAAS,iBAAiB1Z,EAAE0Z,SAAS,UAAUhZ,EAAE+b,aAAazc,OAAv9B,CAA+9BrF,GAAGoG,EAAjnC,CAAonCA,EAAEL,GAAG,EAA3yC,CAA8yCV,EAAEU,IAAImd,GAAG,SAAS7d,GAAG,IAAIU,EAAE,CAACod,iBAAiB,UAAUrC,gBAAgB,WAAW,OAAO,IAAIzb,IAAIU,EAAE,CAACod,iBAAiB,CAAC,UAAU,MAAM,OAAOnjB,IAAIqF,GAAG,IAAIyb,gBAAgB,CAAC,UAAU,mBAAmB,aAAa9gB,IAAIqF,EAAE,GAAG,MAAMuV,GAAGsE,OAAOrD,UAAUuH,GAAGC,cAActd,KAAKwD,EAAEwS,GAAGrQ,EAAEuQ,GAAG9U,EAAE+U,GAAG9Q,EAAE+Q,GAAGpW,EAAEqW,GAAGkH,GAAG/G,GAAGlV,EAAEmV,GAAG+G,GAAG,SAASle,GAAG,IAAIU,EAAEiO,KAAKF,MAAM,OAAOxN,IAAIjB,GAAG,GAAGU,EAAE,IAAI,EAAEO,IAAIjB,EAAE,GAAG,GAAGU,EAAE,IAAI,IAAI,EAAE,GAAGyd,GAAG,SAASne,EAAEU,EAAEK,GAAG,OAAOL,EAAE,IAAIiO,KAAK,IAAI1N,IAAIP,GAAG,IAAIO,IAAIF,GAAG,GAAGL,EAAE0d,gBAAgBnd,IAAIF,EAAE,GAAG,GAAGL,EAAE2d,gBAAgBpd,IAAIF,EAAE,GAAG,GAAGL,EAAE4d,cAAcrd,IAAIF,EAAE,IAAI,GAAGL,EAAE6d,aAAatd,IAAIF,EAAE,IAAI,GAAGL,EAAE8d,cAAcvd,IAAIF,EAAE,IAAI,GAAGL,EAAE+d,iBAAiB,KAAKxd,IAAIF,EAAE,IAAI,GAAGL,EAAEge,YAAYzd,IAAIF,EAAE,IAAI,GAAG,EAAEE,IAAIF,EAAE,IAAI,GAAG,EAAEL,GAAGA,EAAEyX,UAAUxJ,KAAKgQ,IAAIje,EAAE+d,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,EAAExd,IAAIF,EAAE,IAAI,GAAGL,EAAEV,EAAE4e,KAAK5e,EAAE4e,GAAG1X,EAAE,QAAQjG,IAAIF,EAAE,IAAI,GAAGf,EAAE4e,GAAG7d,GAAGmG,EAAE,WAAWkD,GAAGU,MAAMpJ,EAAE,SAAS1B,EAAEU,GAAG0W,KAAKpX,EAAE,IAAI2O,KAAK,IAAI1N,IAAIjB,GAAG,IAAIiB,IAAIP,GAAG,GAAGV,EAAE6e,aAAa5d,IAAIP,EAAE,GAAG,GAAGV,EAAE8e,aAAa7d,IAAIP,EAAE,GAAG,GAAGV,EAAE+e,WAAW9d,IAAIP,EAAE,IAAI,GAAGV,EAAEqY,UAAUpX,IAAIP,EAAE,IAAI,GAAGV,EAAEoY,WAAWnX,IAAIP,EAAE,IAAI,GAAGV,EAAEwX,cAAc,KAAKvW,IAAIP,EAAE,IAAI,GAAGV,EAAE2Y,SAAS,IAAI5X,EAAE,IAAI4N,KAAK3O,EAAEwX,cAAc,EAAE,GAAG7c,GAAGqF,EAAEmY,UAAUpX,EAAEoX,WAAW,MAAM,EAAE,OAAOlX,IAAIP,EAAE,IAAI,GAAG/F,EAAEsG,IAAIP,EAAE,IAAI,IAAI,GAAGV,EAAEyX,oBAAoB9c,EAAE,IAAIgU,KAAK3O,EAAEwX,cAAc,EAAE,GAAGC,oBAAoBzX,EAAE,GAAGrF,IAAIoG,EAAEA,EAAE0W,sBAAsBzX,EAAEyX,qBAAqB/F,KAAKqJ,IAAIha,EAAEpG,IAAIsG,IAAIP,EAAE,IAAI,GAAGV,EAAEA,EAAEiB,IAAI4W,MAAM7X,EAAE,EAAE,IAAI,GAAGiB,IAAIP,EAAE,IAAI,GAAGV,EAAEU,GAAGY,EAAEX,GAAGa,EAAEsG,WAAWxF,EAAE,SAAStC,GAAGoX,KAAK,IAAI1W,EAAE,IAAIiO,KAAK1N,IAAIjB,EAAE,IAAI,GAAG,KAAKiB,IAAIjB,EAAE,IAAI,GAAGiB,IAAIjB,EAAE,IAAI,GAAGiB,IAAIjB,EAAE,GAAG,GAAGiB,IAAIjB,EAAE,GAAG,GAAGiB,IAAIjB,GAAG,GAAG,GAAGe,EAAEE,IAAIjB,EAAE,IAAI,GAAGrF,EAAE+F,EAAE+W,oBAAoBrW,EAAE,IAAIuN,KAAKjO,EAAE8W,cAAc,EAAE,GAAGlW,EAAE,IAAIqN,KAAKjO,EAAE8W,cAAc,EAAE,GAAGC,oBAAoBjW,EAAEJ,EAAEqW,oBAAoBhW,EAAEiQ,KAAKqJ,IAAIvZ,EAAEF,GAAG,OAAO,EAAEP,EAAEE,IAAIjB,EAAE,IAAI,GAAGzC,OAAO+D,GAAGE,GAAGC,GAAG9G,GAAG,EAAEoG,IAAIU,GAAG9G,KAAK2G,EAAEoQ,KAAKgG,IAAIlW,EAAEF,GAAGZ,EAAEse,QAAQte,EAAEyX,UAAU,MAAM,EAAEpX,EAAEU,EAAEH,GAAG3G,KAAKsG,IAAIjB,EAAE,IAAI,GAAGU,EAAEiY,SAAS5X,GAAGL,EAAEyX,UAAU/W,EAAE+W,WAAW,MAAM,EAAElX,IAAIjB,EAAE,IAAI,GAAGe,EAAEE,IAAIjB,GAAG,GAAGU,EAAEme,aAAa5d,IAAIjB,EAAE,GAAG,GAAGU,EAAEoe,aAAa7d,IAAIjB,EAAE,GAAG,GAAGU,EAAEqe,WAAW9d,IAAIjB,EAAE,IAAI,GAAGU,EAAE2X,UAAUpX,IAAIjB,EAAE,IAAI,GAAGU,EAAE0X,WAAW1X,EAAEyX,UAAU,IAAI,GAAG8G,GAAG,SAASjf,GAAGuV,GAAGyE,GAAGha,IAAIkf,GAAG,SAASlf,GAAGuV,GAAG0E,QAAQja,IAAImf,GAAG,SAASnf,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE8U,GAAG5Y,IAAI8D,GAAGA,EAAEf,EAAEof,IAAI1e,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIse,GAAG,SAASrf,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAEiU,GAAGjU,GAAGA,EAAEf,EAAEsf,cAAc5e,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIwe,GAAG,SAASvf,EAAEU,EAAEK,EAAEpG,EAAE2G,GAAG,OAAOtB,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE8U,GAAG5Y,IAAI8D,GAAGpG,EAAEkb,GAAG5Y,IAAItC,GAAG2G,EAAE,CAACke,MAAM3J,GAAG5Y,IAAIgE,IAAIK,GAAG,IAAIme,KAAK5J,GAAG5Y,IAAIgE,IAAIK,EAAE,GAAG,IAAIoe,KAAKze,IAAIK,EAAE,GAAG,GAAGqe,QAAQve,IAAIE,EAAE,IAAI,GAAGse,WAAW9J,GAAG7Y,IAAIgE,IAAIK,EAAE,IAAI,KAAKA,EAAEtB,EAAE6f,mBAAmBnf,EAAEK,EAAEpG,EAAE2G,GAAGuU,GAAGgE,OAAOvY,IAAIwe,GAAG,SAAS9f,EAAEU,GAAGV,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEkV,GAAG3Y,IAAIyD,GAAG,IAAI,IAAIK,EAAEf,EAAE+f,MAAMrf,GAAG,OAAO8U,GAAGqE,OAAO9Y,GAAG,MAAMf,GAAG,OAAOmE,QAAQoB,IAAI,yBAAyBvF,GAAG,IAAIggB,GAAG,SAAShgB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE,CAACkf,SAAS7e,IAAIL,GAAG,GAAGmf,SAAS9e,IAAIL,EAAE,GAAG,IAAIA,EAAEf,EAAEmgB,MAAMzf,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIqf,GAAG,SAASpgB,EAAEU,EAAEK,EAAEE,GAAGjB,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAE+T,GAAG/T,EAAEK,GAAGA,EAAE,GAAG,IAAI,IAAIpG,EAAE,EAAEA,EAAE+F,EAAE9F,SAASD,EAAEoG,EAAEjG,KAAK+a,GAAG5Y,IAAIyD,EAAE/F,KAAK,OAAOsG,EAAEjB,EAAEqgB,OAAOtf,EAAEE,GAAG4U,GAAGgE,OAAO5Y,IAAIqf,GAAG,SAAStgB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGe,EAAE2T,GAAG3T,GAAGL,EAAEoU,GAAGpU,IAAI/D,MAAMoE,OAAE,IAASL,EAAEqU,WAAW/U,EAAEugB,SAASxf,EAAE,IAAIf,EAAEugB,SAAS7f,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIyf,GAAG,SAASxgB,EAAEU,EAAEK,EAAEK,GAAG,OAAOpB,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE8U,GAAG5Y,IAAI8D,GAAGK,EAAE,CAAC8T,QAAQ,aAAaf,GAAGlT,IAAIG,EAAE,IAAI,IAAIqT,GAAG9Z,IAAIyG,GAAG,GAAGH,IAAIG,EAAE,GAAG,SAAI,EAAO+T,QAAQV,GAAG9Z,IAAIyG,EAAE,GAAG,GAAGH,IAAIG,EAAE,IAAI,IAAIgU,UAAUX,GAAG9Z,IAAIyG,EAAE,IAAI,GAAGH,IAAIG,EAAE,IAAI,IAAIiU,QAAQlB,GAAGlT,IAAIG,EAAE,IAAI,IAAIqf,OAAOxf,IAAIG,EAAE,IAAI,GAAGsf,YAAYrM,GAAGpT,IAAIG,EAAE,IAAI,IAAIuf,aAAavM,GAAGnT,IAAIG,EAAE,IAAI,IAAIqe,KAAK5J,GAAG5Y,IAAIgE,IAAIG,EAAE,IAAI,IAAIwe,WAAW9J,GAAG7Y,IAAIgE,IAAIG,EAAE,IAAI,KAAKA,EAAEpB,EAAE4gB,OAAOlgB,EAAEK,EAAEK,GAAGyU,GAAGgE,OAAOzY,IAAIyf,GAAG,SAAS7gB,EAAEe,EAAEpG,EAAE2G,GAAG,OAAOtB,EAAEyV,GAAGxY,IAAI+C,GAAGe,EAAE8U,GAAG5Y,IAAI8D,GAAGpG,EAAEkb,GAAG5Y,IAAItC,GAAG2G,EAAE,CAACG,EAAEoU,GAAG5Y,IAAIgE,IAAIK,GAAG,IAAIuT,MAAMzT,IAAIE,EAAE,GAAG,GAAGwf,KAAK1f,IAAIE,EAAE,GAAG,GAAGyf,WAAW,IAAIrgB,IAAIY,EAAE,IAAI,GAAG0f,WAAW,IAAItgB,IAAIY,EAAE,IAAI,IAAIA,EAAEtB,EAAEihB,KAAKlgB,EAAEpG,EAAE2G,GAAGuU,GAAGgE,OAAOvY,IAAI4f,GAAG,SAASlhB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmG,EAAEnG,GAAGK,EAAE+T,GAAG/T,GAAGA,EAAEf,EAAEmhB,MAAMzgB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIqgB,GAAG,SAASphB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE6T,GAAG7T,GAAGA,EAAEf,EAAEqhB,UAAU3gB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIugB,GAAG,SAASthB,EAAEU,GAAG,OAAOV,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEkU,GAAGlU,GAAGA,EAAEV,EAAEqhB,UAAU3gB,GAAGoV,GAAG+D,OAAOnZ,IAAI6gB,GAAG,SAASvhB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE8U,GAAG5Y,IAAI8D,GAAGA,EAAEf,EAAEwhB,OAAO9gB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAI0gB,GAAG,SAASzhB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAEiU,GAAGjU,GAAGA,EAAEf,EAAE0hB,UAAUhhB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAI4gB,GAAG,SAAS3hB,GAAGyV,GAAGwE,QAAQja,IAAI4hB,GAAG,SAAS5hB,EAAEU,GAAG,OAAOV,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGA,EAAEV,EAAE6hB,KAAKnhB,GAAGmV,GAAGgE,OAAOnZ,IAAIohB,GAAG,SAAS9hB,GAAG,OAAOA,EAAEyV,GAAGxY,IAAI+C,GAAG6hB,OAAO/L,GAAG+D,OAAO7Z,IAAI+hB,GAAG,SAAS/hB,EAAEU,EAAEK,GAAGf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAG,IAAIY,EAAEgT,GAAGrT,IAAIF,GAAG,IAAIS,EAAE7G,IAAIoG,EAAE,GAAG,GAAGU,EAAER,IAAIF,EAAE,GAAG,GAAG,GAAG,IAAIS,GAAG,IAAIC,EAAE,CAAC,IAAI,IAAIC,EAAE,GAAGG,EAAE,EAAEA,EAAEL,IAAIK,EAAEJ,GAAG,EAAEC,EAAE5G,KAAKsG,IAAIK,GAAG,IAAID,EAAEE,OAAOF,OAAE,EAAO,OAAOT,EAAE,CAACihB,KAAK1gB,EAAE2gB,OAAOzgB,EAAE0gB,MAAMzN,GAAG9Z,IAAIoG,EAAE,IAAI,GAAGE,IAAIF,EAAE,IAAI,KAAKA,EAAEf,EAAEmiB,SAASzhB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIqhB,GAAG,SAASpiB,EAAEU,EAAEK,EAAEE,GAAG,OAAOjB,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE0T,GAAGxT,EAAEF,GAAGA,EAAEf,EAAEqiB,QAAQ3hB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAIuhB,GAAG,SAAStiB,EAAEU,EAAEK,GAAG,OAAOf,EAAEyV,GAAGxY,IAAI+C,GAAGU,EAAEmV,GAAG5Y,IAAIyD,GAAGK,EAAE,CAACwhB,YAAY9N,GAAG9Z,IAAIoG,GAAG,GAAGE,IAAIF,EAAE,GAAG,KAAKA,EAAEf,EAAEwiB,UAAU9hB,EAAEK,GAAG8U,GAAGgE,OAAO9Y,IAAI0hB,GAAG,SAASziB,EAAEU,EAAEK,GAAG,OAAOf,EAAEwV,GAAGvY,IAAI+C,GAAGU,EAAEgV,GAAGzY,IAAIyD,GAAGK,EAAE4U,GAAG1Y,IAAI8D,GAAGf,EAAE0iB,QAAQhiB,EAAEK,IAAI4hB,GAAG,SAAS3iB,GAAGwV,GAAGwE,GAAGha,IAAI4iB,GAAG,SAAS5iB,GAAGwV,GAAGyE,QAAQja,IAAI6iB,GAAG,SAAS7iB,GAAG0V,GAAGuE,QAAQja,IAAI8iB,GAAG,SAAS9iB,EAAEU,EAAEK,GAAGf,EAAE0V,GAAGzY,IAAI+C,GAAGU,EAAEmG,EAAEnG,GAAGK,EAAE,IAAIE,IAAIF,EAAE,IAAI,GAAG2T,GAAG3T,EAAE,GAAG,CAACgiB,SAASrO,GAAG3T,EAAE,GAAGgU,WAAWN,GAAG9Z,IAAIoG,EAAE,IAAI,GAAGE,IAAIF,EAAE,IAAI,KAAKf,EAAEU,GAAGK,GAAGiiB,GAAG,SAAShjB,GAAG4V,GAAGqE,QAAQja,IAAIijB,GAAG,SAASjjB,EAAEU,EAAEK,GAAGf,EAAE4V,GAAG3Y,IAAI+C,GAAGU,EAAEmG,EAAEnG,GAAGK,EAAE8U,GAAG5Y,IAAI8D,GAAGf,EAAEU,GAAGK,GAAGmiB,GAAG,SAASljB,GAAG2V,GAAGsE,QAAQja,IAAImjB,GAAG,SAASnjB,EAAEU,EAAEK,GAAGf,EAAE2V,GAAG1Y,IAAI+C,GAAGU,EAAEmG,EAAEnG,GAAGK,EAAE2T,GAAG3T,GAAGf,EAAEU,GAAGK,GAAGqiB,GAAG,SAASpjB,GAAG6V,GAAGmE,GAAGha,IAAIqjB,GAAG,SAASrjB,GAAG6V,GAAGoE,QAAQja,IAAIsjB,GAAG,SAAStjB,GAAG8V,GAAGkE,GAAGha,IAAIujB,GAAG,SAASvjB,GAAG8V,GAAGmE,QAAQja,IAAIwjB,GAAG/K,GAAGrW,EAAE,SAASpC,EAAEU,EAAEK,EAAEE,GAAG,OAAOwX,GAAGzY,EAAEU,EAAEK,EAAEE,IAAIwiB,GAAG,SAASzjB,GAAG,OAAOA,EAAEuV,GAAGtY,IAAI+C,GAAGA,EAAE,IAAI0jB,eAAe1jB,GAAGyV,GAAGoE,OAAO7Z,IAAI2jB,GAAG,WAAW,OAAOjO,GAAGmE,OAAO,KAAK+J,GAAG,WAAW,OAAOhO,GAAGiE,OAAO,KAAKgK,GAAG,WAAW,OAAOlO,GAAGkE,OAAO,OAAO,WAAW,SAAS7Z,EAAEA,EAAEU,GAAGc,EAAEsiB,IAAI9jB,EAAEtG,QAAQyO,GAAE3G,EAAEsiB,IAAIC,GAAG1b,GAAGO,QAAQpH,EAAEsiB,IAAIE,IAAI5Z,GAAGQ,GAAG9P,KAAK0G,EAAEsiB,IAAIG,IAAI/d,EAAExF,EAAEmC,IAAIiG,KAAKtH,EAAE0iB,wBAAwB1iB,EAAE0iB,uBAAuBpb,IAAI,GAAGA,KAAK,OAAOC,KAAKob,cAAcpb,IAAIA,GAAG,MAAMC,KAAKhJ,EAAEgJ,GAAGA,GAAG,KAAKhJ,OAAO,SAASU,EAAEA,GAAGV,EAAEU,EAAE0jB,SAAS1jB,EAAE/G,QAAQ,SAASoH,EAAEf,GAAG,OAAO,WAAW,IAAIoF,IAAI9C,GAAGE,GAAG,CAAC,GAAG,mBAAmB6hB,QAAQxb,GAAGO,WAAW,WAAW,OAAOib,MAAMxb,GAAG,CAACyb,YAAY,gBAAgBC,MAAK,SAAUvkB,GAAG,IAAIA,EAAEwkB,GAAG,KAAK,uCAAuC3b,GAAG,IAAI,OAAO7I,EAAEykB,iBAAiBC,OAAM,WAAY,OAAOrb,QAAQ,GAAGnH,EAAE,OAAO,IAAIN,SAAQ,SAAU5B,EAAEU,GAAGwB,EAAE2G,IAAG,SAAUnI,GAAGV,EAAE,IAAIlE,WAAW4E,MAAMA,MAAM,OAAOkB,QAAQ+iB,UAAUJ,MAAK,WAAY,OAAOlb,QAA9Y,GAAyZkb,MAAK,SAAUvkB,GAAG,OAAOiG,YAAY2e,YAAY5kB,EAAEiB,MAAMsjB,KAAKvkB,GAAE,SAAUA,GAAGyF,EAAE,0CAA0CzF,GAAG4D,GAAG5D,MAAM,IAAIiB,EAAE,CAACK,EAAE6Y,IAAI,GAAGtX,IAAIiG,KAAKtH,EAAE0iB,wBAAwB1iB,EAAE0iB,uBAAuBpb,KAAKtH,EAAEqjB,gBAAgB,IAAI,OAAOrjB,EAAEqjB,gBAAgB5jB,EAAEjB,GAAG,MAAMA,GAAG,OAAOyF,EAAE,sDAAsDzF,IAAG,GAAIoF,GAAG,mBAAmBa,YAAY6e,sBAAsB3b,MAAMN,GAAGO,WAAW,YAAY,mBAAmBib,MAAMtjB,EAAEL,GAAG2jB,MAAMxb,GAAG,CAACyb,YAAY,gBAAgBC,MAAK,SAAUvkB,GAAG,OAAOiG,YAAY6e,qBAAqB9kB,EAAEiB,GAAGsjB,KAAK7jB,GAAE,SAAUV,GAAG,OAAOyF,EAAE,kCAAkCzF,GAAGyF,EAAE,6CAA6C1E,EAAEL,UAAUgkB,MAAMhjB,GAAt3C,GAA43CF,EAAEujB,mBAAmB,WAAW,OAAOvjB,EAAEujB,mBAAmBvjB,EAAEsiB,IAAIE,IAAIpJ,MAAM,KAAK9H,YAAYtR,EAAEwjB,SAAS,WAAW,OAAOxjB,EAAEwjB,SAASxjB,EAAEsiB,IAAImB,IAAIrK,MAAM,KAAK9H,YAAYtR,EAAE0jB,yBAAyB,WAAW,OAAO1jB,EAAE0jB,yBAAyB1jB,EAAEsiB,IAAIqB,IAAIvK,MAAM,KAAK9H,YAAYtR,EAAE4jB,+CAA+C,WAAW,OAAO5jB,EAAE4jB,+CAA+C5jB,EAAEsiB,IAAIuB,IAAIzK,MAAM,KAAK9H,YAAYtR,EAAE8jB,0BAA0B,WAAW,OAAO9jB,EAAE8jB,0BAA0B9jB,EAAEsiB,IAAIyB,IAAI3K,MAAM,KAAK9H,YAAYtR,EAAEgkB,0BAA0B,WAAW,OAAOhkB,EAAEgkB,0BAA0BhkB,EAAEsiB,IAAI2B,IAAI7K,MAAM,KAAK9H,YAAYtR,EAAEkkB,kBAAkB,WAAW,OAAOlkB,EAAEkkB,kBAAkBlkB,EAAEsiB,IAAI6B,IAAI/K,MAAM,KAAK9H,YAAYtR,EAAEokB,mBAAmB,WAAW,OAAOpkB,EAAEokB,mBAAmBpkB,EAAEsiB,IAAI+B,IAAIjL,MAAM,KAAK9H,YAAYtR,EAAEskB,kBAAkB,WAAW,OAAOtkB,EAAEskB,kBAAkBtkB,EAAEsiB,IAAIiC,IAAInL,MAAM,KAAK9H,YAAYtR,EAAEwkB,mBAAmB,WAAW,OAAOxkB,EAAEwkB,mBAAmBxkB,EAAEsiB,IAAImC,IAAIrL,MAAM,KAAK9H,YAAYtR,EAAE0kB,iBAAiB,WAAW,OAAO1kB,EAAE0kB,iBAAiB1kB,EAAEsiB,IAAIqC,IAAIvL,MAAM,KAAK9H,YAAYtR,EAAE4kB,kBAAkB,WAAW,OAAO5kB,EAAE4kB,kBAAkB5kB,EAAEsiB,IAAIuC,IAAIzL,MAAM,KAAK9H,YAAYtR,EAAE8kB,SAAS,WAAW,OAAO9kB,EAAE8kB,SAAS9kB,EAAEsiB,IAAIyC,IAAI3L,MAAM,KAAK9H,YAAYtR,EAAEglB,iBAAiB,WAAW,OAAOhlB,EAAEglB,iBAAiBhlB,EAAEsiB,IAAI2C,IAAI7L,MAAM,KAAK9H,YAAYtR,EAAEklB,kBAAkB,WAAW,OAAOllB,EAAEklB,kBAAkBllB,EAAEsiB,IAAI6C,IAAI/L,MAAM,KAAK9H,YAAYtR,EAAEolB,kBAAkB,WAAW,OAAOplB,EAAEolB,kBAAkBplB,EAAEsiB,IAAI+C,IAAIjM,MAAM,KAAK9H,YAAYtR,EAAEslB,qBAAqB,WAAW,OAAOtlB,EAAEslB,qBAAqBtlB,EAAEsiB,IAAIiD,IAAInM,MAAM,KAAK9H,YAAYtR,EAAEwlB,sBAAsB,WAAW,OAAOxlB,EAAEwlB,sBAAsBxlB,EAAEsiB,IAAImD,IAAIrM,MAAM,KAAK9H,YAAYtR,EAAE0lB,sBAAsB,WAAW,OAAO1lB,EAAE0lB,sBAAsB1lB,EAAEsiB,IAAIqD,IAAIvM,MAAM,KAAK9H,YAAYtR,EAAE4lB,QAAQ,WAAW,OAAO5lB,EAAE4lB,QAAQ5lB,EAAEsiB,IAAIuD,IAAIzM,MAAM,KAAK9H,YAAYtR,EAAE8lB,iBAAiB,WAAW,OAAO9lB,EAAE8lB,iBAAiB9lB,EAAEsiB,IAAIyD,IAAI3M,MAAM,KAAK9H,YAAY,IAAI3L,GAAG3F,EAAEgmB,QAAQ,WAAW,OAAOrgB,GAAG3F,EAAEgmB,QAAQhmB,EAAEsiB,IAAI2D,IAAI7M,MAAM,KAAK9H,YAAYlE,GAAGpN,EAAEkmB,kBAAkB,WAAW,OAAO9Y,GAAGpN,EAAEkmB,kBAAkBlmB,EAAEsiB,IAAI6D,IAAI/M,MAAM,KAAK9H,YAAYpG,GAAGlL,EAAEomB,MAAM,WAAW,OAAOlb,GAAGlL,EAAEomB,MAAMpmB,EAAEsiB,IAAI+D,IAAIjN,MAAM,KAAK9H,YAAY5G,GAAG1K,EAAEsmB,cAAc,WAAW,OAAO5b,GAAG1K,EAAEsmB,cAActmB,EAAEsiB,IAAIiE,IAAInN,MAAM,KAAK9H,YAAYtR,EAAEwmB,qBAAqB,WAAW,OAAOxmB,EAAEwmB,qBAAqBxmB,EAAEsiB,IAAIG,IAAIrJ,MAAM,KAAK9H,YAAYtR,EAAEymB,gDAAgD,WAAW,OAAOzmB,EAAEymB,gDAAgDzmB,EAAEsiB,IAAIoE,IAAItN,MAAM,KAAK9H,YAAY,IAAIqV,GAAGld,GAAGzJ,EAAE4mB,4CAA4C,WAAW,OAAOnd,GAAGzJ,EAAE4mB,4CAA4C5mB,EAAEsiB,IAAIuE,IAAIzN,MAAM,KAAK9H,YAAYwH,GAAG9Y,EAAE8mB,mCAAmC,WAAW,OAAOhO,GAAG9Y,EAAE8mB,mCAAmC9mB,EAAEsiB,IAAIyE,IAAI3N,MAAM,KAAK9H,YAAYsH,GAAG5Y,EAAEgnB,sCAAsC,WAAW,OAAOpO,GAAG5Y,EAAEgnB,sCAAsChnB,EAAEsiB,IAAI2E,IAAI7N,MAAM,KAAK9H,YAAYzF,GAAG7L,EAAEknB,6CAA6C,WAAW,OAAOrb,GAAG7L,EAAEknB,6CAA6ClnB,EAAEsiB,IAAI6E,IAAI/N,MAAM,KAAK9H,YAAYG,GAAGzR,EAAEonB,0CAA0C,WAAW,OAAO3V,GAAGzR,EAAEonB,0CAA0CpnB,EAAEsiB,IAAI+E,IAAIjO,MAAM,KAAK9H,YAAYY,GAAGlS,EAAEsnB,4BAA4B,WAAW,OAAOpV,GAAGlS,EAAEsnB,4BAA4BtnB,EAAEsiB,IAAIiF,IAAInO,MAAM,KAAK9H,YAAYyH,GAAG/Y,EAAEwnB,oBAAoB,WAAW,OAAOzO,GAAG/Y,EAAEwnB,oBAAoBxnB,EAAEsiB,IAAImF,IAAIrO,MAAM,KAAK9H,YAAYqI,GAAG3Z,EAAE0nB,cAAc,WAAW,OAAO/N,GAAG3Z,EAAE0nB,cAAc1nB,EAAEsiB,IAAIqF,IAAIvO,MAAM,KAAK9H,YAAY9H,GAAGxJ,EAAE4nB,yBAAyB,WAAW,OAAOpe,GAAGxJ,EAAE4nB,yBAAyB5nB,EAAEsiB,IAAIuF,IAAIzO,MAAM,KAAK9H,YAAYpD,GAAGlO,EAAE8nB,4BAA4B,WAAW,OAAO5Z,GAAGlO,EAAE8nB,4BAA4B9nB,EAAEsiB,IAAIyF,IAAI3O,MAAM,KAAK9H,YAAY9G,GAAGxK,EAAEgoB,yBAAyB,WAAW,OAAOxd,GAAGxK,EAAEgoB,yBAAyBhoB,EAAEsiB,IAAI2F,IAAI7O,MAAM,KAAK9H,YAAY+E,GAAGrW,EAAEkoB,aAAa,WAAW,OAAO7R,GAAGrW,EAAEkoB,aAAaloB,EAAEsiB,IAAI6F,IAAI/O,MAAM,KAAK9H,YAAY8E,GAAGpW,EAAEooB,eAAe,WAAW,OAAOhS,GAAGpW,EAAEooB,eAAepoB,EAAEsiB,IAAI+F,IAAIjP,MAAM,KAAK9H,YAAY6E,GAAGnW,EAAEsoB,eAAe,WAAW,OAAOnS,GAAGnW,EAAEsoB,eAAetoB,EAAEsiB,IAAIiG,IAAInP,MAAM,KAAK9H,YAAYC,GAAGvR,EAAEwoB,UAAU,WAAW,OAAOjX,GAAGvR,EAAEwoB,UAAUxoB,EAAEsiB,IAAImG,IAAIrP,MAAM,KAAK9H,YAAYtC,GAAGhP,EAAE0oB,aAAa,WAAW,OAAO1Z,GAAGhP,EAAE0oB,aAAa1oB,EAAEsiB,IAAIqG,IAAIvP,MAAM,KAAK9H,YAAYE,GAAGxR,EAAE4oB,WAAW,WAAW,OAAOpX,GAAGxR,EAAE4oB,WAAW5oB,EAAEsiB,IAAIuG,IAAIzP,MAAM,KAAK9H,YAAYpP,GAAGlC,EAAE8oB,6BAA6B,WAAW,OAAO5mB,GAAGlC,EAAE8oB,6BAA6B9oB,EAAEsiB,IAAIyG,IAAI3P,MAAM,KAAK9H,YAAYlB,GAAGpQ,EAAEgpB,UAAU,WAAW,OAAO5Y,GAAGpQ,EAAEgpB,UAAUhpB,EAAEsiB,IAAI2G,IAAI7P,MAAM,KAAK9H,YAAYhG,GAAGtL,EAAEkpB,6CAA6C,OAAO1gB,GAAGxI,EAAEmpB,+BAA+B,OAAO,SAAShnB,GAAG3D,GAAGhF,KAAKd,KAAK,aAAac,KAAKkT,QAAQ,gCAAgClO,EAAE,IAAIhF,KAAKgK,OAAOhF,EAAE,SAAS4qB,KAAK,SAAS5qB,IAAI,IAAImoB,KAAKA,IAAG,EAAG3mB,EAAEqpB,WAAU,GAAIzkB,KAAKvD,GAAG6G,GAAGrB,IAAI5G,EAAED,GAAGA,EAAEspB,sBAAsBtpB,EAAEspB,wBAAwBjoB,GAAG,CAAC,GAAGrB,EAAEupB,QAAQ,IAAI,mBAAmBvpB,EAAEupB,UAAUvpB,EAAEupB,QAAQ,CAACvpB,EAAEupB,UAAUvpB,EAAEupB,QAAQnwB,QAAQ,CAAC,IAAIoF,EAAEwB,EAAEupB,QAAQpiB,QAAQJ,GAAGK,QAAQ5I,GAAG0J,GAAGnB,KAAK,KAAK,EAAEO,IAAI,GAAGjG,EAAEpB,EAAED,GAAGqB,GAAG6G,GAAGrB,IAAI8D,YAAY,CAACC,IAAI,eAAe,CAAC,IAAIvJ,EAAE,CAAC,GAAGrB,EAAEkH,OAAO,IAAI,mBAAmBlH,EAAEkH,SAASlH,EAAEkH,OAAO,CAAClH,EAAEkH,SAASlH,EAAEkH,OAAO9N,QAAQ6N,KAAKiB,GAAGtB,IAAI,EAAEU,KAAKtH,EAAEwpB,WAAWxpB,EAAEwpB,UAAU,cAAc/P,YAAW,WAAYA,YAAW,WAAYzZ,EAAEwpB,UAAU,MAAM,GAAGhrB,MAAM,IAAIA,MAAM,SAAS6N,GAAG7N,GAAG,GAAGmG,EAAEnG,EAAE6C,EAAE,MAAMsJ,YAAY,CAACC,IAAI,cAAc0B,WAAW9N,IAAI,IAAI2D,GAAG3D,GAAG6D,OAAOuG,GAAGiC,KAAKxJ,IAAI6G,GAAGpB,IAAI,oBAAoB2iB,SAASA,QAAQ,GAAGpa,GAAG,GAAGjW,QAAQkW,GAAG,EAAE,IAAID,GAAG,GAAGjW,QAAQkW,GAAG,EAAE,MAAM3K,EAAEnG,EAAE6D,OAAOuG,GAAGiC,KAAK7K,EAAE0pB,QAAQ1pB,EAAE0pB,OAAOlrB,GAAGoG,GAAE,GAAIpE,EAAEhC,EAAE,IAAI2D,GAAG3D,IAAI,GAAGwB,EAAE2pB,aAAatkB,EAAErF,EAAE4pB,aAAapkB,EAAExF,EAAE6pB,gBAAgBpkB,EAAEzF,EAAE8pB,iBAAiBznB,GAAGrC,EAAE+pB,QAAQnhB,GAAG5I,EAAEwoB,UAAUjX,GAAGvR,EAAE0oB,aAAa1Z,GAAGhP,EAAE4oB,WAAWpX,GAAGxR,EAAE+pB,QAAQnhB,GAAG5I,EAAEsG,WAAWnH,EAAEa,EAAEgqB,WAAW7nB,GAAGqF,GAAG,SAAShJ,IAAImoB,IAAIyC,KAAKzC,KAAKnf,GAAGhJ,IAAIwB,EAAE/C,IAAImsB,GAAGppB,EAAEiqB,QAAQ,IAAI,mBAAmBjqB,EAAEiqB,UAAUjqB,EAAEiqB,QAAQ,CAACjqB,EAAEiqB,UAAU,EAAEjqB,EAAEiqB,QAAQ7wB,QAAQ4G,EAAEiqB,QAAQ1f,KAAVvK,GAAkB,OAAOqB,IAAIkD,GAAE,EAAGqE,GAAGc,MAAM0f,KAAK5qB,EAAE2B,QAA0DhI,EAAOD,QAAQsG,G,+2ECEnhzCM,WADForB,GAEqCprB,YADnCA,WAAiC,oBAAbC,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAMhG,I,YAEnG,SACAixB,GAIT,IAAI3pB,EAA2DyY,EAAGE,EAHhEgR,EAAUA,GAAW,GAGjB3pB,IAAIA,OAAqB,IAAZ2pB,EAA0BA,EAAU,IAAc3pB,EAAEJ,MAAM,IAAIC,SAAQ,SAASN,EAAEa,GAAGqY,EAAGlZ,EAAEoZ,EAAGvY,KAAI,IAASL,EAALM,EAAE,GAAK,IAAIN,KAAKC,EAAEA,EAAEnD,eAAekD,KAAKM,EAAEN,GAAGC,EAAED,IAAI,IAAuM6hB,EAAGrlB,EAAEkE,EAAE2C,EAAE7C,EAA5MqY,EAAG,iBAAiBkJ,EAAG,iBAAkBthB,OAAOP,EAAE,mBAAoBS,cAAcmhB,EAAG,iBAAkBlhB,SAAS,iBAAkBA,QAAQC,UAAU,iBAAkBD,QAAQC,SAASC,KAAK3B,EAAE,GAC3W2iB,GAAG3iB,EAAEe,EAAE,eAAwBf,GAAG,IAAIiC,KAAcygB,EAAG,SAASriB,EAAEa,GAAgE,OAA7DgD,IAAIA,EAAE,EAAQ,OAAO7C,IAAIA,EAAE,EAAQ,MAAShB,EAAEgB,EAAEa,UAAU7B,GAAU6D,EAAE/B,aAAa9B,EAAEa,EAAE,KAAK,SAASK,EAAE,SAASlB,GAAyF,OAAtFA,EAAEqiB,EAAGriB,GAAE,IAAMpC,SAASoC,EAAE,IAAIxF,WAAWwF,IAAIA,EAAEpC,QAAQ2D,EAAE,+BAAsCvB,GAAGhD,EAAE,SAASgD,EAAEa,EAAEV,GAAG0D,IAAIA,EAAE,EAAQ,OAAO7C,IAAIA,EAAE,EAAQ,MAAShB,EAAEgB,EAAEa,UAAU7B,GAAG6D,EAAE7B,SAAShC,GAAE,SAAStB,EAAEiC,GAAGjC,EAAEyB,EAAEzB,GAAGmC,EAAEF,EAAE/C,YAAW,EAAEwD,QAAQa,KAAK3I,SAAS+f,EAAGjY,QAAQa,KAAK,GAAGC,QAAQ,MAAM,MAAMd,QAAQa,KAAKE,MAAM,GAAGf,QAAQgB,GAAG,qBAC3f,SAASpC,GAAG,MAAMA,KAAKoB,QAAQgB,GAAG,qBAAqBb,GAAGd,EAAEiC,QAAQ,WAAW,MAAM,gCAAsC6f,GAAI7hB,KAAEA,EAAEf,EAAEnH,KAAKuK,SAASC,KAAK,oBAAqB/D,UAAUA,SAASC,gBAAgBS,EAAEV,SAASC,cAAcC,KAAKH,aAAaW,EAAEX,YAAmCW,EAAvB,IAAIA,EAAE5F,QAAQ,SAAW4F,EAAEsD,OAAO,EAAEtD,EAAEuD,YAAY,KAAK,GAAK,GAAGmf,EAAG,SAASriB,GAAG,IAAIa,EAAE,IAAIsC,eAA+C,OAAhCtC,EAAEuC,KAAK,MAAMpD,GAAE,GAAIa,EAAEwC,KAAK,MAAaxC,EAAEyC,cAAc5C,IAAIQ,EAAE,SAASlB,GAAG,IAAIa,EAAE,IAAIsC,eACtb,OADqctC,EAAEuC,KAAK,MAAMpD,GAAE,GAAIa,EAAE0C,aAAa,cACpf1C,EAAEwC,KAAK,MAAa,IAAI7I,WAAWqG,EAAE2C,YAAYxG,EAAE,SAASgD,EAAEa,EAAEV,GAAG,IAAIzB,EAAE,IAAIyE,eAAezE,EAAE0E,KAAK,MAAMpD,GAAE,GAAItB,EAAE6E,aAAa,cAAc7E,EAAE+E,OAAO,WAAW,KAAK/E,EAAEgF,QAAQ,GAAGhF,EAAEgF,QAAQhF,EAAE8E,SAAS3C,EAAEnC,EAAE8E,UAAUrD,KAAKzB,EAAEiF,QAAQxD,EAAEzB,EAAE2E,KAAK,QAAO,IAA4KuB,EAAxKqd,EAAGxhB,EAAEuD,OAAOnB,QAAQoB,IAAIC,KAAKrB,SAAS9C,EAAEU,EAAE2D,UAAUvB,QAAQwB,KAAKH,KAAKrB,SAAS,IAAIrC,KAAKM,EAAEA,EAAExD,eAAekD,KAAKC,EAAED,GAAGM,EAAEN,IAAIM,EAAE,KAAKL,EAAE6D,cAAc+U,EAAG5Y,EAAE6D,aAAmB7D,EAAE+D,aAAaI,EAAEnE,EAAE+D,YAA8B/D,EAAEiE,cACrd,iBAAkBC,aAAapD,EAAE,mCAAmC,IAAIygB,EAGqLR,EAAGzc,EAAEnC,EAAE3C,EAAEkF,EAAEmB,EAH7Lyb,GAAG,EAAGD,EAAG,oBAAqB9c,YAAY,IAAIA,YAAY,aAAQ,EAC7I,SAAS4c,EAAG5hB,EAAEa,EAAEV,GAAG,IAAIzB,EAAEmC,EAAEV,EAAE,IAAIA,EAAEU,EAAEb,EAAEG,MAAMA,GAAGzB,MAAMyB,EAAE,GAAG,GAAGA,EAAEU,GAAGb,EAAEoF,UAAU0c,EAAG,OAAOA,EAAG7c,OAAOjF,EAAEoF,SAASvE,EAAEV,IAAI,IAAIzB,EAAE,GAAGmC,EAAEV,GAAG,CAAC,IAAIQ,EAAEX,EAAEa,KAAK,GAAK,IAAFF,EAAM,CAAC,IAAIoD,EAAS,GAAP/D,EAAEa,KAAQ,GAAG,MAAQ,IAAFF,GAAOjC,GAAG2G,OAAOC,cAAgB,GAAF3E,IAAO,EAAEoD,OAAO,CAAC,IAAInD,EAAS,GAAPZ,EAAEa,KAAwE,OAAhEF,EAAE,MAAQ,IAAFA,IAAU,GAAFA,IAAO,GAAGoD,GAAG,EAAEnD,GAAK,EAAFD,IAAM,GAAGoD,GAAG,GAAGnD,GAAG,EAAS,GAAPZ,EAAEa,MAAgBnC,GAAG2G,OAAOC,aAAa3E,IAAIA,GAAG,MAAMjC,GAAG2G,OAAOC,aAAa,MAAM3E,GAAG,GAAG,MAAQ,KAAFA,UAAejC,GAAG2G,OAAOC,aAAa3E,GAAG,OAAOjC,EAAE,SAAS+F,EAAEzE,EAAEa,GAAG,OAAOb,EAAE4hB,EAAGhf,EAAE5C,EAAEa,GAAG,GAC7d,SAASghB,EAAG7hB,EAAEa,EAAEV,EAAEzB,GAAG,KAAK,EAAEA,GAAG,OAAO,EAAE,IAAIiC,EAAER,EAAEzB,EAAEyB,EAAEzB,EAAE,EAAE,IAAI,IAAIqF,EAAE,EAAEA,EAAE/D,EAAE1G,SAASyK,EAAE,CAAC,IAAInD,EAAEZ,EAAEyF,WAAW1B,GAAgF,GAA1E,OAAOnD,GAAG,OAAOA,IAA2BA,EAAE,QAAU,KAAFA,IAAS,IAAM,KAA3CZ,EAAEyF,aAAa1B,IAAoC,KAAKnD,EAAE,CAAC,GAAGT,GAAGzB,EAAE,MAAMmC,EAAEV,KAAKS,MAAM,CAAC,GAAG,MAAMA,EAAE,CAAC,GAAGT,EAAE,GAAGzB,EAAE,MAAMmC,EAAEV,KAAK,IAAIS,GAAG,MAAM,CAAC,GAAG,OAAOA,EAAE,CAAC,GAAGT,EAAE,GAAGzB,EAAE,MAAMmC,EAAEV,KAAK,IAAIS,GAAG,OAAO,CAAC,GAAGT,EAAE,GAAGzB,EAAE,MAAMmC,EAAEV,KAAK,IAAIS,GAAG,GAAGC,EAAEV,KAAK,IAAIS,GAAG,GAAG,GAAGC,EAAEV,KAAK,IAAIS,GAAG,EAAE,GAAGC,EAAEV,KAAK,IAAM,GAAFS,GAAa,OAAPC,EAAEV,GAAG,EAASA,EAAEQ,EAC3a,SAAS+gB,EAAG1hB,GAAG,IAAI,IAAIa,EAAE,EAAEV,EAAE,EAAEA,EAAEH,EAAE1G,SAAS6G,EAAE,CAAC,IAAIzB,EAAEsB,EAAEyF,WAAWtF,GAAG,OAAOzB,GAAG,OAAOA,IAAIA,EAAE,QAAU,KAAFA,IAAS,IAAsB,KAAlBsB,EAAEyF,aAAatF,IAAS,KAAKzB,IAAImC,EAAEA,EAAE,MAAMnC,EAAEmC,EAAE,EAAE,OAAOnC,EAAEmC,EAAE,EAAEA,EAAE,EAAE,OAAOA,EAAE,SAAS8gB,EAAG3hB,GAAG,IAAIa,EAAE6gB,EAAG1hB,GAAG,EAAEG,EAAEohB,GAAG1gB,GAAkB,OAAfV,GAAG0hB,EAAG7hB,EAAE+E,EAAE5E,EAAEU,GAAUV,EACvP,SAASkgB,IAAK,IAAIrgB,EAAEgiB,EAAGpkB,OAAO4jB,EAAGxhB,EAAES,EAAEqF,MAAMf,EAAE,IAAItK,UAAUuF,GAAGS,EAAEsF,OAAO,IAAIpL,WAAWqF,GAAGS,EAAEuF,OAAO/F,EAAE,IAAIrF,WAAWoF,GAAGS,EAAEwF,OAAOrD,EAAE,IAAIpI,WAAWwF,GAAGS,EAAEyF,QAAQ,IAAIxL,YAAYsF,GAAGS,EAAE0F,QAAQhB,EAAE,IAAIrK,YAAYkF,GAAGS,EAAE2F,QAAQE,EAAE,IAAI/L,aAAayF,GAAGS,EAAE4F,QAAQ,IAAIxL,aAAamF,GAAG,IAAIghB,EAAGF,EAAG,GAAGlE,EAAG,GAAG6D,EAAG,GAAGD,EAAG,GAAG,SAASF,IAAK,IAAItgB,EAAES,EAAE2G,OAAOC,QAAQyZ,EAAGxZ,QAAQtH,GAAG,IACpHmE,EADwH0C,EAAE,EAAEsZ,EAAG,KAAK5a,EAAE,KACjX,SAAShE,EAAEvB,GAAwI,MAAlIS,EAAEkH,SAAQlH,EAAEkH,QAAQ3H,GAAGD,EAAEC,GAAG+hB,GAAG,EAAG/hB,EAAE,IAAI2E,YAAYiD,aAAa,SAAS5H,EAAE,gDAAgDoZ,EAAGpZ,GAASA,EAAG,SAASigB,IAAK,OAAO9b,EAAE2D,WAAW,yCAAiE,GADuHrH,EAAEuH,gBAAgB,GAAGvH,EAAEwH,gBAAgB,GAChL9D,EAAE,iBAAoB8b,IAAK,CAAC,IAAID,EAAG7b,EAAEA,EAAE1D,EAAEkB,WAAWlB,EAAEkB,WAAWqe,EAAGrgB,GAAGA,EAAEqgB,EAAG,SAASF,IAAK,IAAI9f,EAAEmE,EAAE,IAAI,GAAGnE,GAAGmE,GAAGS,EAAE,OAAO,IAAIpK,WAAWoK,GAAG,GAAG1D,EAAE,OAAOA,EAAElB,GAAG,KAAK,kDAAmD,MAAMa,GAAGU,EAAEV,IAE3c,SAAS0e,EAAGvf,GAAG,KAAK,EAAEA,EAAE1G,QAAQ,CAAC,IAAIuH,EAAEb,EAAEqH,QAAQ,GAAG,mBAAmBxG,EAAEA,EAAEJ,OAAO,CAAC,IAAIN,EAAEU,EAAE8hB,GAAG,iBAAkBxiB,OAAE,IAASU,EAAE4kB,GAAGzE,EAAGrlB,IAAIwE,EAAP6gB,GAAYA,EAAGrlB,IAAIwE,EAAP6gB,CAAUngB,EAAE4kB,IAAItlB,OAAE,IAASU,EAAE4kB,GAAG,KAAK5kB,EAAE4kB,MAAM,SAASvG,EAAGlf,GAAGtG,KAAKmsB,GAAG7lB,EAAE,GAAGtG,KAAKquB,GAAG,SAASlnB,GAAGZ,EAAEvG,KAAKmsB,GAAG,GAAG,GAAGhlB,GAAGnH,KAAK+tB,GAAG,SAAS5mB,GAAGZ,EAAEvG,KAAKmsB,GAAG,GAAG,GAAGhlB,GAAGnH,KAAKiuB,GAAG,WAAW1nB,EAAEvG,KAAKmsB,IAAI,GAAG,GAAGnsB,KAAK6tB,GAAG,WAAWxiB,EAAErL,KAAKmsB,GAAG,IAAI,GAAG,GAAGnsB,KAAKmuB,GAAG,WAAW9iB,EAAErL,KAAKmsB,GAAG,IAAI,GAAG,GAAGnsB,KAAKqtB,GAAG,SAASlmB,EAAEV,GAAGzG,KAAKquB,GAAGlnB,GAAGnH,KAAK+tB,GAAGtnB,GAAGzG,KAAKiuB,KAAKjuB,KAAK6tB,KAAK7tB,KAAKmuB,MAC1d,IAAoCpmB,EAA3Bqd,EAAG,GAAGJ,EAAG,CAAC,KAAK,GAAG,IAAIxZ,GAAE,GAAKzD,EAAE6gB,EAAG,WAAW,IAAItiB,EAAEoB,QAAQgO,SAAS,OAAO,IAAIpP,EAAE,GAAGA,EAAE,GAAG,KAAK,WAAW,OAAO4D,YAAYuJ,OAAO,IAAIqR,GAAG,CAAC,WAAW,aAAa,cAAcP,GAAG,CAAC,OAAO,OAAO,OAAO,QAAQF,GAAG,CAAC,OAAO,QAAQF,GAAG,CAAC,mBAAmB,UAAUyD,GAAG,0CAA0CpO,MAAM,KAAK,SAASrO,GAAE7E,EAAEa,GAAG,GAAG,IAAIb,GAAG,IAAIa,EAAE,CAAC,IAAI,IAAIV,EAAE,GAAGzB,EAAE,EAAEA,EAAEsB,IAAItB,EAAEmC,GAAG,EAAEV,EAAE3G,KAAKyG,EAAEY,GAAG,IAAI,OAAOV,GAC7Z,SAASkhB,GAAGrhB,EAAEa,EAAE,WAAW,MAAMV,EAAEF,EAAED,GAAG,GAAGmF,EAAEnF,EAAE,GAAG,GAA+D,OAA5DA,EAAEmF,EAAEnF,EAAE,GAAG,GAAG,YAAYa,GAAGU,EAAE,+BAAsC,IAAIhH,aAAaqI,EAAEhF,OAAOuC,EAAEH,EAAEzF,aAAa8Y,mBAAmB,SAAS8N,GAAGnhB,GAAG,MAAM,CAAC3E,KAAKimB,GAAGnc,EAAEnF,GAAG,IAAIyT,WAAW5O,GAAEM,EAAEnF,EAAE,GAAG,GAAGC,EAAED,EAAE,GAAG,KAAK,SAAS4d,GAAG5d,GAAG,MAAM,CAAC2T,iBAAiB9O,GAAEM,EAAEnF,GAAG,GAAGC,EAAED,EAAE,GAAG,IAAI4T,QAAQ,aAAa4K,GAAGve,EAAED,EAAE,IAAI,IAAI6E,GAAEM,EAAEnF,EAAE,GAAG,GAAGC,EAAED,EAAE,IAAI,SAAI,EAAO6T,QAAQhP,GAAEM,EAAEnF,EAAE,IAAI,GAAGC,EAAED,EAAE,IAAI,IAAI8T,UAAUjP,GAAEM,EAAEnF,EAAE,IAAI,GAAGC,EAAED,EAAE,IAAI,IAAI+T,QAAQyK,GAAGve,EAAED,EAAE,IAAI,IAAIgU,OAAO+J,GAAG9d,EAAED,EAAE,IAAI,KAC5e,IAAI2F,GAAE7B,GAAEpC,GAAE9B,GAAE8F,GAAElG,GAAEoG,GAAElG,GAAoWwiB,GAEGrF,GAFrWc,GAAG,GAAG,SAASpB,KAAK,IAAI2F,GAAG,CAAC,IAAwNrhB,EAApNb,EAAE,CAAC4U,KAAK,WAAWC,QAAQ,WAAWC,KAAK,IAAIC,IAAI,IAAIC,KAAK,iBAAiBC,MAAM,iBAAkBC,WAAWA,UAAUC,WAAWD,UAAUC,UAAU,IAAI,KAAKjT,QAAQ,IAAI,KAAK,SAASnB,EAAEsY,GAAI,kBAAoB,IAAIxY,KAAK8c,QAAG,IAASA,GAAG9c,UAAUb,EAAEa,GAAGb,EAAEa,GAAG8c,GAAG9c,GAAG,IAAIV,EAAE,GAAG,IAAIU,KAAKb,EAAEG,EAAE3G,KAAKqH,EAAE,IAAIb,EAAEa,IAAIqhB,GAAG/hB,EAAE,OAAO+hB,GAE/W,SAASvF,KAAK,SAAS3c,EAAEY,GAAG,OAAOA,EAAEA,EAAEmV,eAAeC,MAAM,sBAAsBpV,EAAE,GAAG,MAAM,IAAIic,GAAG,CAACA,IAAG,EAAG,IAAIhc,GAAE,IAAKwM,MAAM6I,cAAc/V,EAAE,IAAIkN,KAAKxM,EAAE,EAAE,GAAGnC,EAAE,IAAI2O,KAAKxM,EAAE,EAAE,GAAGA,EAAEV,EAAEgW,oBAAoB,IAAIxV,EAAEjC,EAAEyX,oBAAoBpS,EAAEqM,KAAKgG,IAAIvV,EAAEF,GAAGV,EAAEyiB,MAAM,GAAG,GAAG3e,EAAE9D,EAAEkkB,MAAM,GAAGloB,OAAO4E,GAAGF,GAAGR,EAAEH,EAAEG,GAAGzB,EAAEsB,EAAEtB,GAAGyB,EAAEwhB,EAAGxhB,GAAGzB,EAAEijB,EAAGjjB,GAAGiC,EAAEE,GAAGZ,EAAE8B,MAAK,GAAG5B,EAAEF,EAAE8B,KAAI,GAAG,GAAGrD,IAAIuB,EAAE8B,MAAK,GAAGrD,EAAEuB,EAAE8B,KAAI,GAAG,GAAG5B,IAAW,SAASkkB,GAAGrkB,GAAG,OAAO,GAAIA,EAAE,IAAI,GAAIA,EAAE,KAAK,GAAIA,EAAE,KAAK,SAASukB,GAAGvkB,EAAEa,GAAG,IAAI,IAAIV,EAAE,EAAEzB,EAAE,EAAEA,GAAGmC,EAAEV,GAAGH,EAAEtB,MAAM,OAAOyB,EAC1e,IAAIskB,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,SAASE,GAAG7kB,EAAEa,GAAG,IAAIb,EAAE,IAAIqN,KAAKrN,EAAE6W,WAAW,EAAEhW,GAAG,CAAC,IAAIV,EAAEH,EAAE8W,WAAWpY,GAAG2lB,GAAGrkB,EAAEkW,eAAeuO,GAAGE,IAAIxkB,GAAG,KAAGU,EAAEnC,EAAEsB,EAAE+W,WAAoH,CAAC/W,EAAEgX,QAAQhX,EAAE+W,UAAUlW,GAAG,MAApIA,GAAGnC,EAAEsB,EAAE+W,UAAU,EAAE/W,EAAEgX,QAAQ,GAAG,GAAG7W,EAAEH,EAAEiX,SAAS9W,EAAE,IAAIH,EAAEiX,SAAS,GAAGjX,EAAEkX,YAAYlX,EAAEkW,cAAc,IAAyC,OAAOlW,EAClW,SAAS+kB,GAAG/kB,EAAEa,EAAEV,EAAEzB,GAAG,SAASiC,EAAEJ,EAAEd,EAAEI,GAAG,IAAIU,EAAE,iBAAkBA,EAAEA,EAAE6W,WAAW7W,GAAG,GAAGA,EAAEjH,OAAOmG,GAAGc,EAAEV,EAAE,GAAGU,EAAE,OAAOA,EAAE,SAASwD,EAAExD,EAAEd,GAAG,OAAOkB,EAAEJ,EAAEd,EAAE,KAAK,SAASmB,EAAEL,EAAEd,GAAG,SAASI,EAAE8jB,GAAI,OAAO,EAAEA,GAAI,EAAE,EAAEA,EAAG,EAAE,EAAE,IAAI7e,EAAmH,OAAjH,KAAKA,EAAEjF,EAAEU,EAAE2V,cAAczW,EAAEyW,iBAAiB,KAAKpR,EAAEjF,EAAEU,EAAEuW,WAAWrX,EAAEqX,eAAehS,EAAEjF,EAAEU,EAAEwW,UAAUtX,EAAEsX,YAAmBjS,EAAE,SAAS1F,EAAEmB,GAAG,OAAOA,EAAE8W,UAAU,KAAK,EAAE,OAAO,IAAIhK,KAAK9M,EAAE2V,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO3V,EAAE,KAAK,EAAE,OAAO,IAAI8M,KAAK9M,EAAE2V,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK9M,EAAE2V,cACjf,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK9M,EAAE2V,cAAc,EAAE,GAAG,KAAK,EAAE,OAAO,IAAI7I,KAAK9M,EAAE2V,cAAc,EAAE,GAAG,IAAI,KAAK,EAAE,OAAO,IAAI7I,KAAK9M,EAAE2V,cAAc,EAAE,GAAG,KAAK,SAAS7W,EAAEkB,GAAGA,EAAEskB,GAAG,IAAIxX,KAAK9M,EAAE8kB,GAAG,KAAK,EAAE,GAAG9kB,EAAE8lB,IAAI,IAAI5mB,EAAE,IAAI4N,KAAK9M,EAAE2V,cAAc,EAAE,EAAE,GAAGrW,EAAET,EAAE,IAAIiO,KAAK9M,EAAE2V,cAAc,EAAE,IAAW,OAAPzW,EAAEL,EAAEK,GAAU,GAAGmB,EAAEf,EAAEU,GAAG,GAAGK,EAAEnB,EAAEc,GAAGA,EAAE2V,cAAc,EAAE3V,EAAE2V,cAAc3V,EAAE2V,cAAc,EAAE,IAAI1Q,EAAEvF,EAAEvB,EAAE,IAAI,GACmC,IAAI,IAAIwB,KADxCxB,EAAE,CAAC2pB,GAAGpoB,EAAEvB,GAAG,GAAGypB,GAAGloB,EAAEvB,EAAE,GAAG,GAAG+jB,GAAGxiB,EAAEvB,EAAE,GAAG,GAAGqnB,GAAG9lB,EAAEvB,EAAE,IAAI,GAAG6mB,GAAGtlB,EAAEvB,EAAE,IAAI,GAAG2mB,GAAGplB,EAAEvB,EAAE,IAAI,GAAGynB,GAAGlmB,EAAEvB,EAAE,IAAI,GAAG2nB,GAAGpmB,EAAEvB,EAAE,IAAI,GAAG4Y,GAAGrX,EAAEvB,EAAE,IAAI,GAAGupB,GAAGhoB,EAAEvB,EACpf,IAAI,GAAG6pB,GAAG/iB,EAAEf,EAAEe,GAAG,IAAIrF,EAAEsE,EAAEtE,GAAGqF,EAAE,CAAC,KAAK,uBAAuB,KAAK,WAAW,KAAK,WAAW,KAAK,KAAK,KAAK,cAAc,KAAK,QAAQ,KAAK,WAAW,KAAK,WAAW,KAAK,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,WAAW,MAAM,WAAW,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,MAAqBrF,EAAEA,EAAE+B,QAAQ,IAAI+V,OAAO/X,EAAE,KAAKsF,EAAEtF,IAAI,IAAI2jB,EAAG,2DAA2D3Q,MAAM,KAC9gB6Q,EAAG,wFAAwF7Q,MAAM,KAG6U,IAAIhT,KAH5UsF,EAAE,CAAC,KAAK,SAASjF,GAAG,OAAOsjB,EAAGtjB,EAAE4lB,IAAIjO,UAAU,EAAE,IAAI,KAAK,SAAS3X,GAAG,OAAOsjB,EAAGtjB,EAAE4lB,KAAK,KAAK,SAAS5lB,GAAG,OAAOwjB,EAAGxjB,EAAEglB,IAAIrN,UAAU,EAAE,IAAI,KAAK,SAAS3X,GAAG,OAAOwjB,EAAGxjB,EAAEglB,KAAK,KAAK,SAAShlB,GAAG,OAAOwD,GAAGxD,EAAE8kB,GAAG,MAAM,IAAI,EAAE,IAAI,KAAK,SAAS9kB,GAAG,OAAOwD,EAAExD,EAAEwlB,GAAG,IAAI,KAAK,SAASxlB,GAAG,OAAOI,EAAEJ,EAAEwlB,GAAG,EAAE,MAAM,KAAK,SAASxlB,GAAG,OAAOlB,EAAEkB,GAAG6W,WAAWc,UAAU,IAAI,KAAK,SAAS3X,GAAG,OAAOlB,EAAEkB,IAAI,KAAK,SAASA,GAAG,OAAOwD,EAAExD,EAAEkiB,GACzf,IAAI,KAAK,SAASliB,GAAkC,OAAxB,IAAPA,EAAEA,EAAEkiB,IAAQliB,EAAE,GAAG,GAAGA,IAAIA,GAAG,IAAWwD,EAAExD,EAAE,IAAI,KAAK,SAASA,GAAG,OAAOwD,EAAExD,EAAEwlB,GAAGxB,GAAGF,GAAG9jB,EAAE8kB,GAAG,MAAMZ,GAAGE,GAAGpkB,EAAEglB,GAAG,GAAG,IAAI,KAAK,SAAShlB,GAAG,OAAOwD,EAAExD,EAAEglB,GAAG,EAAE,IAAI,KAAK,SAAShlB,GAAG,OAAOwD,EAAExD,EAAE4nB,GAAG,IAAI,KAAK,WAAW,MAAM,MAAM,KAAK,SAAS5nB,GAAG,OAAO,GAAGA,EAAEkiB,IAAI,GAAGliB,EAAEkiB,GAAG,KAAK,MAAM,KAAK,SAASliB,GAAG,OAAOwD,EAAExD,EAAE8nB,GAAG,IAAI,KAAK,WAAW,MAAM,MAAM,KAAK,SAAS9nB,GAAG,OAAOA,EAAE4lB,IAAI,GAAG,KAAK,SAAS5lB,GAAG,IAAId,EAAE,IAAI4N,KAAK9M,EAAE8kB,GAAG,KAAK,EAAE,GAAGxlB,EAAE,IAAIJ,EAAE4X,SAAS5X,EAAEolB,GAAGplB,EAAE,EAAEA,EAAE4X,UAA0C,OAAO,EACzfzW,EAAEf,EADgdU,EAAE,IAAI8M,KAAK9M,EAAE8kB,GAAG,KAAK9kB,EAAEglB,GAAGhlB,EAAEwlB,KACvehiB,EAAEqM,KAAKC,MAAM,GAAGxQ,EAAEkX,WAAWwN,GAAGF,GAAG9jB,EAAE2V,eAAeuO,GAAGE,GAAGpkB,EAAEuW,WAAW,GAAG,IAAIvW,EAAEwW,WAAW,GAAG,GAAG,IAAInW,EAAEf,EAAEJ,GAAG,KAAK,MAAM,KAAK,SAASc,GAAG,IAAId,EAAE,IAAI4N,KAAK9M,EAAE8kB,GAAG,KAAK,EAAE,GAAGxlB,EAAET,EAAE,IAAIiO,KAAK9M,EAAE8kB,GAAG,KAAK,EAAE,IAAI5lB,EAAEL,EAAEK,GAAG,IAAIqF,EAAE+f,GAAG,IAAIxX,KAAK9M,EAAE8kB,GAAG,KAAK,EAAE,GAAG9kB,EAAE8lB,IAAI,OAAO,EAAEzlB,EAAEkE,EAAEjF,GAAG,KAAK,GAAGe,EAAEnB,EAAEqF,GAAG,KAAKf,EAAEqM,KAAKC,MAAMxQ,EAAEqW,cAAc3V,EAAE8kB,GAAG,KAAK9kB,EAAE8lB,GAAG,GAAGxmB,EAAEkX,UAAUxW,EAAE8lB,GAAG,EAAExmB,EAAEkX,WAAW,GAAG,IAAI,KAAK,SAASxW,GAAG,OAAOA,EAAE4lB,IAAI,KAAK,SAAS5lB,GAAG,IAAId,EAAE,IAAI4N,KAAK9M,EAAE8kB,GAAG,EAAE,GAAGxlB,EAAE,IAAIJ,EAAE4X,SAAS5X,EAAEolB,GAAGplB,EAAE,IAAIA,EAAE4X,SAAS,EAAE,EAAE5X,EAAE4X,SAAS,GACld,OAAO,EAAEzW,EAAEf,EAD0cU,EACnf,IAAI8M,KAAK9M,EAAE8kB,GAAG,KAAK9kB,EAAEglB,GAAGhlB,EAAEwlB,KAAoBhiB,EAAEqM,KAAKC,MAAM,GAAGxQ,EAAEkX,WAAWwN,GAAGF,GAAG9jB,EAAE2V,eAAeuO,GAAGE,GAAGpkB,EAAEuW,WAAW,GAAG,IAAIvW,EAAEwW,WAAW,GAAG,GAAG,IAAInW,EAAEf,EAAEJ,GAAG,KAAK,MAAM,KAAK,SAASc,GAAG,OAAOA,EAAE8kB,GAAG,MAAMjO,WAAWc,UAAU,IAAI,KAAK,SAAS3X,GAAG,OAAOA,EAAE8kB,GAAG,MAAM,KAAK,SAAS9kB,GAAU,IAAId,EAAE,IAAbc,EAAEA,EAAE0nB,IAA+B,OAAjB1nB,EAAE6P,KAAK+H,IAAI5X,GAAG,IAAUd,EAAE,IAAI,KAAK4F,OAAO,QAAQ9E,EAAE,GAAG,IAAIA,EAAE,KAAK4B,OAAO,IAAI,KAAK,SAAS5B,GAAG,OAAOA,EAAEgoB,IAAI,KAAK,WAAW,MAAM,MAAiBpoB,EAAEiY,SAASlY,KAAKC,EAAEA,EAAE+B,QAAQ,IAAI+V,OAAO/X,EAAE,KAAKsF,EAAEtF,GAAGxB,KAC5e,OADifwB,EAC/E,SAAYF,GAAG,IAAIa,EAAErF,MAAMkmB,EAAG1hB,GAAG,GAAsB,OAAnB6hB,EAAG7hB,EAAEa,EAAE,EAAEA,EAAEvH,QAAeuH,EADmBokB,CAAG9kB,IACjf7G,OAAOuH,EAAS,GAAEkE,EAAE/J,IAAIkF,EAAEF,GAAUE,EAAE5G,OAAO,GAA+RqM,KAAIA,GAAEA,IAApQ,CAACggB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAAkBiD,GAAEA,IAA7Q,CAAC6hB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAA2Ba,GAAEA,IAAtR,CAACikB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAAoCjB,GAAEA,IAA/R,CAAC+lB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAA6C6E,GAAEA,IAAxS,CAACigB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAAsDrB,GAAEA,IAAjT,CAACmmB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAA+D+E,GAAEA,IAA1T,CAAC+f,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,KAAwEnB,GAAEA,IAAnU,CAACimB,GAAG,GAAG0B,GAAG,EAAE9O,OAAO,SAAS1X,EAAEV,GAAGA,EAAEA,GAAG,GAAG,IAAIzB,EAAEhF,KAAK2tB,KAAoC,OAA/BlnB,EAAEomB,GAAG,EAAEpmB,EAAEsY,OAAO5X,EAAEnH,KAAKisB,GAAGjnB,GAAGyB,EAASzB,GAAG/C,IAAI,SAASkF,GAAG,GAAG,IAAIA,EAAE,OAAOnH,KAAKisB,GAAG9kB,GAAG4X,QAAQwN,GAAG,SAASplB,GAAGnH,KAAKisB,GAAG9kB,GAAG0lB,MAAM5N,QAAQ,SAAS9X,GAAG,IAAIV,EAAEzG,KAAKisB,GAAG9kB,GAAGV,EAAEomB,KAAK,GAAGpmB,EAAEomB,WAAW7sB,KAAKisB,GAAG9kB,MAC5U,IAAI4kB,GAAG,CAACzlB,EAAE,SAASA,GAAG,OAAOuhB,GAAGvhB,EAAE,IAAI,IAAIG,EAAE,SAASH,EAAEa,GAAG4f,EAAGnZ,QAAQ,CAACqb,GAAG3iB,EAAEylB,GAAG5kB,KAAKN,EAAE,SAASP,EAAEa,GAAG4f,EAAGnZ,QAAQ,CAACqb,GAAG3iB,EAAEylB,GAAG5kB,KAAKA,EAAE,SAASb,EAAEa,EAAEV,GAA4B,MAAzB,IAAK+e,EAAGlf,GAAI+mB,GAAGlmB,EAAEV,GAAcH,GAAIuF,EAAE,SAASvF,EAAEa,GAAU,OAAPb,EAAEyE,EAAEzE,GAAUkF,GAAEujB,GAAGzoB,EAAEa,IAAIf,EAAE,WAAW,OAAO,GAAG2B,EAAE,aAAaoF,EAAE,aAAalH,EAAE,WAAW,OAAO,IAAII,EAAE,WAAW,OAAO,GAAGoE,EAAE,aAAawB,EAAE,SAAS3F,EAAEa,GAAU,OAAPb,EAAEyE,EAAEzE,GAAUkF,GAAEyjB,GAAG3oB,EAAEa,IAAIiD,EAAE,SAAS9D,EAAEa,EAAEV,EAAEzB,EAAEiC,EAAEoD,GAAU,GAAPA,IAAI,GAAM,IAAO,GAAFrF,IAAO,GAAIsB,EAAE,MAAMa,GAAG,QAAQ,GAAG,IAAO,GAAFnC,GAAM,CAACsB,EAAE,MAAMoQ,KAAKC,KAAKxP,EAAE,OAAO,IAAID,EAAEukB,GAAG,MAAMnlB,GACpfY,GAAGgC,EAAE2N,KAAK,EAAE3P,EAAEA,EAAEZ,GAAGA,EAAEY,GAAGZ,EAAE,EAAEA,GAAG8e,EAAG9e,GAAG,CAACmnB,GAAGnnB,EAAEinB,GAAGpmB,EAAE+lB,IAAG,EAAGjW,GAAGhQ,EAAEwoB,GAAGhpB,EAAE0Q,MAAMnS,EAAEoS,OAAO/M,GAAGlD,EAAEb,GAAGa,GAAG,QAAQA,GAAG,GAAG,OAAOA,GAAGxB,EAAE,SAASW,EAAEa,GAAG,IAAIV,EAAE2e,EAAG9e,GAA8D,OAA3D,IAAIa,GAAGV,GAAGU,IAAIV,EAAE8mB,KAAKnI,EAAG9e,GAAG,KAAKG,EAAEymB,IAAIvB,GAAGllB,EAAEgnB,KAAKnnB,EAAE,GAAGA,GAAG,GAAUA,GAAGY,EAAE,aAAakE,EAAE,SAAS9E,EAAEa,EAAEV,GAAU,OAAPH,EAAEyE,EAAEzE,GAAUkF,GAAE2jB,GAAG7oB,EAAEa,EAAEV,IAAIF,EAAE,aAAaG,EAAE,aAAa+E,EAAE,aAAapB,EAAE,WAAWxC,KAAKvE,EAAE,SAASgD,EAAEa,GAAG,GAAG,IAAIb,EAAEA,EAAEqN,KAAKF,UAAW,IAAG,IAAInN,GAAG,IAAIA,EAAa,OAAOC,EAAEslB,MAAM,GAAG,IAAI,EAAjCvlB,EAAEyB,IAAuE,OAAtCxB,EAAEY,GAAG,GAAGb,EAAE,IAAI,EAAEC,EAAEY,EAAE,GAAG,GAAGb,EAAE,IAAI,IAAI,EAAS,GAAGsG,EAAE,SAAStG,EAAEa,GAAG,OAAOb,EACnfa,GAAGif,GAAG,WAAWve,EAAE,gIAAgIjC,EAAE,WAAWiC,EAAE,gIAAgIqe,GAAG,WAAWre,EAAE,gIAAgIye,GAAG,WAAWze,EAAE,gIAClc2D,EAAE,WAAW,OAAO,YAAY3D,EAAE,SAASvB,EAAEa,EAAEV,GAAGyC,EAAE2W,WAAWvZ,EAAEa,EAAEA,EAAEV,IAAIK,EAAE,SAASR,GAAG,IAAIa,EAAE+B,EAAEtJ,OAAc,GAAG,YAAV0G,KAAK,GAAkB,OAAM,EAAG,IAAI,IAAIG,EAAE,EAAE,GAAGA,EAAEA,GAAG,EAAE,CAAC,IAAIzB,EAAEmC,GAAG,EAAE,GAAGV,GAAGzB,EAAE0R,KAAKqJ,IAAI/a,EAAEsB,EAAE,WAA2B,GAAhBtB,EAAE0R,KAAKgG,IAAIpW,EAAEtB,IAAO,QAAQA,GAAG,MAAMA,EAAE,OAAOsB,EAAE,CAAC,IAAIgiB,EAAGtI,KAAKtJ,KAAKqJ,IAAI,WAAW/a,GAAG8iB,EAAG1jB,WAAW,QAAQ,IAAIuiB,IAAK,IAAI1f,EAAE,EAAE,MAAMX,EAAE,MAAM+D,IAAIpD,OAAE,EAAO,GAAGA,EAAE,OAAM,EAAG,OAAM,GAAIoE,EAAE,SAAS/E,GAAG,IAAI,IAAIa,EAAEY,IAAIA,IAAIZ,EAAEb,MAAMmgB,GAAG,SAASngB,GAAG,IAAIa,EAAE,CAAC2b,iBAAiB,UAAUrC,gBAAgB,WAC/V,OAAtE,IAAIna,IAAIa,EAAE,CAAC2b,iBADua,CAAC,UAC7e,MAAM,OAAkFrX,EAAEnF,GAAG,IAAIma,gBAAlF,CAAC,UAAU,mBAAmB,aAAsEhV,EAAEnF,EAAE,GAAG,MAAa2F,GAAE4S,OAAOrD,UAAUuH,GAAGC,cAAc7b,KAAK4D,EAAE,SAASzE,EAAEa,GAAG,IAAIV,EAAE,EAAkI,OAAhIoc,KAAKlH,SAAQ,SAAS3W,EAAEiC,GAAG,IAAIoD,EAAElD,EAAEV,EAAkB,IAAhBQ,EAAEV,EAAED,EAAE,EAAEW,GAAG,GAAGoD,EAAMA,EAAE,EAAEA,EAAErF,EAAEpF,SAASyK,EAAEgB,EAAEpE,KAAK,GAAGjC,EAAE+G,WAAW1B,GAAGgB,EAAEpE,GAAG,GAAG,EAAER,GAAGzB,EAAEpF,OAAO,KAAW,GAAGsJ,EAAE,SAAS5C,EAAEa,GAAG,IAAIV,EAAEoc,KAAKtc,EAAED,GAAG,GAAGG,EAAE7G,OAAO,IAAIoF,EAAE,EAAkD,OAAhDyB,EAAEkV,SAAQ,SAAS1U,GAAGjC,GAAGiC,EAAErH,OAAO,KAAI2G,EAAEY,GAAG,GAAGnC,EAAS,GAAGrF,EAAE,WAAW,OAAO,GAAGuL,EAAE,SAAS5E,EAAEa,GACtd,OADydb,EAAE,GAAGA,GAAG,GAAGA,EAAE,EACpfuB,IAAIwD,EAAElE,GAAG,GAAGb,EAAS,GAAGU,EAAE,SAASV,EAAEa,EAAEV,EAAEzB,GAAqC,OAAlCsB,EAAEkF,GAAE+jB,GAAGjpB,GAAGa,EAAEqE,GAAE6jB,GAAG/oB,EAAEa,EAAEV,GAAGF,EAAEvB,GAAG,GAAGmC,EAAS,GAAG2E,EAAE,aAAa3F,EAAE,SAASG,EAAEa,EAAEV,EAAEzB,GAAG,IAAI,IAAIiC,EAAE,EAAEoD,EAAE,EAAEA,EAAE5D,EAAE4D,IAAI,CAAC,IAAI,IAAInD,EAAEX,EAAEY,EAAE,EAAEkD,GAAG,GAAG3E,EAAEa,EAAEY,GAAG,EAAEkD,EAAE,IAAI,GAAG1E,EAAE,EAAEA,EAAED,EAAEC,IAAI,CAAC,IAAImG,EAAE5C,EAAEhC,EAAEvB,GAAGa,EAAEwe,EAAG1e,GAAG,IAAIwF,GAAG,KAAKA,IAAI,IAAIxF,EAAEiiB,EAAGliB,GAAG6hB,EAAG1hB,EAAE,IAAIA,EAAE5G,OAAO,GAAG4G,EAAE1G,KAAKgM,GAAG7E,GAAGvB,EAAY,OAAVa,EAAEvB,GAAG,GAAGiC,EAAS,GAAG4hB,GAAG,SAASviB,GAAG,IAAIa,EAAEwM,KAAKF,MAA4C,OAAtClN,EAAED,GAAG,GAAGa,EAAE,IAAI,EAAEZ,EAAED,EAAE,GAAG,GAAGa,EAAE,IAAI,IAAI,EAAS,GAAGgE,EAhBlY,SAASsU,EAAGnZ,EAAEa,GAA0W,OAAvWb,EAAE,IAAIqN,KAAK,IAAIpN,EAAED,GAAG,IAAIC,EAAEY,GAAG,GAAGb,EAAE8c,gBAAgB7c,EAAEY,EAAE,GAAG,GAAGb,EAAE+c,gBAAgB9c,EAAEY,EAAE,GAAG,GAAGb,EAAEgd,cAAc/c,EAAEY,EAAE,IAAI,GAAGb,EAAEid,aAAahd,EAAEY,EAAE,IAAI,GAAGb,EAAEkd,cAAcjd,EAAEY,EAAE,IAAI,GAAGb,EAAEmd,iBAAiB,KAAKld,EAAEY,EAAE,IAAI,GAAGb,EAAEod,YAAYnd,EAAEY,EAAE,IAAI,GAAG,EAAEZ,EAAEY,EAAE,IAAI,GAAG,EAAEZ,EAAEY,EAAE,IAAI,IAAIb,EAAE6W,UAAUxJ,KAAKgQ,IAAIrd,EAAEmd,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,MAAM,EAAEhE,EAAGsN,KAAKtN,EAAGsN,GAAG9E,EAAG,QAAQ1hB,EAAEY,EAAE,IAAI,GAAGsY,EAAGsN,GAAU5lB,GAgBQzB,EAAE,SAASY,EAAEa,GAAG8b,KAAK3c,EAAE,IAAIqN,KAAK,IAAIpN,EAAED,GAAG,IAAIC,EAAEY,GAAG,GAAGb,EAAEud,aAAatd,EAAEY,EAAE,GAAG,GAAGb,EAAEwd,aAAavd,EAAEY,EAAE,GAAG,GAAGb,EAAEyd,WAChfxd,EAAEY,EAAE,IAAI,GAAGb,EAAE+W,UAAU9W,EAAEY,EAAE,IAAI,GAAGb,EAAE8W,WAAW7W,EAAEY,EAAE,IAAI,GAAGb,EAAEkW,cAAc,KAAKjW,EAAEY,EAAE,IAAI,GAAGb,EAAEqX,SAAS,IAAIlX,EAAE,IAAIkN,KAAKrN,EAAEkW,cAAc,EAAE,GAAGjW,EAAEY,EAAE,IAAI,IAAIb,EAAE6W,UAAU1W,EAAE0W,WAAW,MAAM,EAAE5W,EAAEY,EAAE,IAAI,IAAK,GAAGb,EAAEmW,oBAAqB,IAAIzX,EAAE,IAAK2O,KAAKrN,EAAEkW,cAAc,EAAE,GAAIC,oBAA2I,OAA/FnW,EAA+C,GAA5CtB,IAA3ByB,EAAEA,EAAEgW,sBAA6BnW,EAAEmW,qBAAqB/F,KAAKqJ,IAAItZ,EAAEzB,IAAMuB,EAAEY,EAAE,IAAI,GAAGb,EAAEA,EAAEC,EAAE8B,MAAK/B,EAAE,EAAE,IAAI,GAAGC,EAAEY,EAAE,IAAI,GAAGb,EAASa,GAAGpB,EAAE,SAASO,GAAG2c,KAAK,IAAI9b,EAAE,IAAIwM,KAAKpN,EAAED,EAAE,IAAI,GAAG,KAAKC,EAAED,EAAE,IAAI,GAAGC,EAAED,EAAE,IAAI,GAAGC,EAAED,EAAE,GAAG,GAAGC,EAAED,EAAE,GAAG,GAAGC,EAAED,GACtf,GAAG,GAAGG,EAAEF,EAAED,EAAE,IAAI,GAAGtB,EAAEmC,EAAEsV,oBAAoBxV,EAAE,IAAI0M,KAAKxM,EAAEqV,cAAc,EAAE,GAAGnS,EAAE,IAAKsJ,KAAKxM,EAAEqV,cAAc,EAAE,GAAIC,oBAAoBvV,EAAED,EAAEwV,oBAAoB/W,EAAEgR,KAAKqJ,IAAI7Y,EAAEmD,GAAsS,OAAnS,EAAE5D,EAAEF,EAAED,EAAE,IAAI,GAAG/D,OAAO8H,GAAGnD,GAAGxB,GAAGV,GAAG,EAAEyB,IAAIf,GAAGV,KAAKqF,EAAEqM,KAAKgG,IAAIxV,EAAEmD,GAAGlD,EAAE6c,QAAQ7c,EAAEgW,UAAU,MAAM,EAAE1W,EAAEf,EAAE2E,GAAGrF,KAAKuB,EAAED,EAAE,IAAI,GAAGa,EAAEwW,SAASpX,EAAED,EAAE,IAAI,IAAIa,EAAEgW,UAAUlW,EAAEkW,WAAW,MAAM,EAAE5W,EAAED,GAAG,GAAGa,EAAE0c,aAAatd,EAAED,EAAE,GAAG,GAAGa,EAAE2c,aAAavd,EAAED,EAAE,GAAG,GAAGa,EAAE4c,WAAWxd,EAAED,EAAE,IAAI,GAAGa,EAAEkW,UAAU9W,EAAED,EAAE,IAAI,GAAGa,EAAEiW,WAAkBjW,EAAEgW,UAAU,IAAI,GAAG7V,EAAE,SAAShB,GAAG2F,GAAEsgB,GAAGjmB,IACzf6D,EAAE,SAAS7D,GAAG2F,GAAEgT,QAAQ3Y,IAAIygB,GAAG,SAASzgB,EAAEa,EAAEV,GAAiD,OAA9CH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGA,EAAEH,EAAE8d,IAAIjd,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAIyc,GAAG,SAAS5c,EAAEa,EAAEV,GAAwD,OAArDH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyd,GAAGzd,GAAGA,EAAEH,EAAEge,cAAcnd,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAI2gB,GAAG,SAAS9gB,EAAEa,EAAEV,EAAEzB,EAAEiC,GAA6L,OAA1LX,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGzB,EAAEkH,GAAEjK,IAAI+C,GAAGiC,EAAE,CAACud,MAAMtY,GAAEjK,IAAIsE,EAAEU,GAAG,IAAIwd,KAAKvY,GAAEjK,IAAIsE,EAAEU,EAAE,GAAG,IAAIyd,KAAKne,EAAEU,EAAE,GAAG,GAAG0d,QAAQ/X,EAAE3F,EAAE,IAAI,GAAG2d,WAAW5e,GAAE/D,IAAIsE,EAAEU,EAAE,IAAI,KAAKA,EAAEX,EAAEue,mBAAmB1d,EAAEV,EAAEzB,EAAEiC,GAAUiF,GAAE2S,OAAO5X,IAAIqgB,GAAG,SAAShhB,EAAEa,GAAGb,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAErB,GAAE7D,IAAIkF,GAAG,IAAI,IAAIV,EAAEH,EAAEye,MAAM5d,GAAG,OAAOiD,GAAEyU,OAAOpY,GAAG,MAAMzB,GAAG,OAAOmE,QAAQoB,IAAI,yBAC7hBvF,GAAG,IAAI2hB,GAAG,SAASrgB,EAAEa,EAAEV,GAA4E,OAAzEH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEH,EAAE6e,MAAMhe,EAAE,CAAC8d,SAASrY,EAAEnG,GAAG,GAAGye,SAAStY,EAAEnG,EAAE,GAAG,KAAYyF,GAAE2S,OAAOpY,IAAIqhB,GAAG,SAASxhB,EAAEa,EAAEV,EAAEzB,GAAGsB,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAEgE,GAAEhE,EAAEV,GAAGA,EAAE,GAAG,IAAI,IAAIQ,EAAE,EAAEA,EAAEE,EAAEvH,SAASqH,EAAER,EAAE3G,KAAKoM,GAAEjK,IAAIkF,EAAEF,KAAqB,OAAhBjC,EAAEsB,EAAE+e,OAAO5e,EAAEzB,GAAUkH,GAAE2S,OAAO7Z,IAAI6iB,GAAG,SAASvhB,EAAEa,EAAEV,GAA8F,OAA3FH,EAAE0B,GAAE/F,IAAIqE,GAAWG,EAAEkhB,GAAGlhB,GAAbU,EAAEsgB,GAAGtgB,IAAYxF,MAAM8E,OAAE,IAASU,EAAE4S,WAAWzT,EAAEif,SAAS9e,EAAE,IAAIH,EAAEif,SAASpe,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAIwhB,GAAG,SAAS3hB,EAAEa,EAAEV,EAAEzB,GAChL,OADmLsB,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGzB,EAAE,CAACkV,QAAQ,aAAa4K,GAAGve,EAAEvB,EAAE,IAAI,IAAImG,GAAEM,EAAEzG,GAAG,GAAGuB,EAAEvB,EAAE,GAAG,SAAI,EAAOmV,QAAQhP,GAAEM,EAAEzG,EAC/f,GAAG,GAAGuB,EAAEvB,EAAE,IAAI,IAAIoV,UAAUjP,GAAEM,EAAEzG,EAAE,IAAI,GAAGuB,EAAEvB,EAAE,IAAI,IAAIqV,QAAQyK,GAAGve,EAAEvB,EAAE,IAAI,IAAIygB,OAAOlf,EAAEvB,EAAE,IAAI,GAAG0gB,YAAYrB,GAAG9d,EAAEvB,EAAE,IAAI,IAAI2gB,aAAapB,GAAGhe,EAAEvB,EAAE,IAAI,IAAIyf,KAAKvY,GAAEjK,IAAIsE,EAAEvB,EAAE,IAAI,IAAI4f,WAAW5e,GAAE/D,IAAIsE,EAAEvB,EAAE,IAAI,KAAKA,EAAEsB,EAAEsf,OAAOze,EAAEV,EAAEzB,GAAUkH,GAAE2S,OAAO7Z,IAAIgjB,GAAG,SAAS1hB,EAAEa,EAAEV,EAAEzB,GAA4J,OAAzJsB,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGzB,EAAE,CAACyB,EAAEyF,GAAEjK,IAAIsE,EAAEvB,GAAG,IAAI6U,MAAMjN,EAAE5H,EAAE,GAAG,GAAG8gB,KAAKlZ,EAAE5H,EAAE,GAAG,GAAG+gB,WAAW,IAAI1a,EAAErG,EAAE,IAAI,GAAGghB,WAAW,IAAI3a,EAAErG,EAAE,IAAI,IAAIA,EAAEsB,EAAE2f,KAAK9e,EAAEV,EAAEzB,GAAUkH,GAAE2S,OAAO7Z,IAAImjB,GAAG,SAAS7hB,EAAEa,EAAEV,GAA4C,OAAzCH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE4D,EAAE5D,GAAGV,EAAEghB,GAAGhhB,GAAGA,EAAEH,EAAE6f,MAAMhf,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAC9fyhB,GAAG,SAAS5hB,EAAEa,EAAEV,GAA0D,OAAvDH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEH,EAAE+f,UAAUlf,EAAE,CAAC0S,MAAMjN,EAAEnG,GAAG,KAAYyF,GAAE2S,OAAOpY,IAAI2hB,GAAG,SAAS9hB,EAAEa,GAAyC,OAAtCb,EAAE0B,GAAE/F,IAAIqE,GAAG+f,UAAU,CAACxM,MAAMjN,EAAEzF,GAAG,KAAYnB,GAAE6Y,OAAOvY,IAAI+hB,GAAG,SAAS/hB,EAAEa,EAAEV,GAAoD,OAAjDH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGA,EAAEH,EAAEkgB,OAAOrf,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAI6hB,GAAG,SAAShiB,EAAEa,EAAEV,GAAoD,OAAjDH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAEyd,GAAGzd,GAAGA,EAAEH,EAAEogB,UAAUvf,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAID,EAAE,SAASF,GAAG0B,GAAEiX,QAAQ3Y,IAAIiiB,GAAG,SAASjiB,EAAEa,GAAqC,OAAlCb,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGA,EAAEb,EAAEugB,KAAK1f,GAAU+E,GAAE2S,OAAO1X,IAAIshB,GAAG,SAASniB,GAAqB,OAAlBA,EAAE0B,GAAE/F,IAAIqE,GAAGugB,OAAc7gB,GAAE6Y,OAAOvY,IAAIqiB,GAAG,SAASriB,EAC7fa,EAAEV,GAAGH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAG,IAAInC,EAAEmf,GAAG5d,EAAEE,GAAG,IAAQQ,EAAEwE,EAAEhF,EAAE,GAAG,GAAO4D,EAAE9D,EAAEE,EAAE,GAAG,GAAG,GAAG,IAAIQ,GAAG,IAAIoD,EAAE,CAAC,IAAI,IAAInD,EAAE,GAAGxB,EAAE,EAAEA,EAAEuB,IAAIvB,EAAE2E,GAAG,EAAEnD,EAAEpH,KAAK8M,EAAEvC,GAAG,IAAIpD,EAAEC,OAAOD,OAAE,EAA4E,OAArER,EAAE,CAACugB,KAAKhiB,EAAEiiB,OAAOhgB,EAAEigB,MAAM/b,GAAEM,EAAEhF,EAAE,IAAI,GAAGF,EAAEE,EAAE,IAAI,KAAKA,EAAEH,EAAE6gB,SAAShgB,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAImiB,GAAG,SAAStiB,EAAEa,EAAEV,EAAEzB,GAAmD,OAAhDsB,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAE0E,GAAEnG,EAAEyB,GAAGA,EAAEH,EAAE+gB,QAAQlgB,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAIkZ,GAAG,SAASrZ,EAAEa,EAAEV,GAAiF,OAA9EH,EAAE0B,GAAE/F,IAAIqE,GAAGa,EAAE+E,GAAEjK,IAAIkF,GAAGV,EAAE,CAAC8gB,YAAYpc,GAAEM,EAAEhF,GAAG,GAAGF,EAAEE,EAAE,GAAG,KAAKA,EAAEH,EAAEkhB,UAAUrgB,EAAEV,GAAUyF,GAAE2S,OAAOpY,IAAImgB,GAAG,SAAStgB,EAAEa,EAAEV,GACrd,OADwdH,EAAE8D,GAAEnI,IAAIqE,GAAGa,EAAEjB,GAAEjE,IAAIkF,GAAGV,EAAEuF,GAAE/J,IAAIwE,GAC/eH,EAAEohB,QAAQvgB,EAAEV,IAAIqgB,GAAG,SAASxgB,GAAG8D,GAAEmiB,GAAGjmB,IAAIkB,EAAE,SAASlB,GAAG8D,GAAE6U,QAAQ3Y,IAAIkZ,GAAG,SAASlZ,GAAGJ,GAAE+Y,QAAQ3Y,IAAIoZ,GAAG,SAASpZ,EAAEa,EAAEV,GAAGH,EAAEJ,GAAEjE,IAAIqE,GAAGa,EAAE4D,EAAE5D,GAAGV,EAAE,IAAIF,EAAEE,EAAE,IAAI,GAAGkhB,GAAGlhB,EAAE,GAAG,CAACshB,SAASJ,GAAGlhB,EAAE,GAAGsT,WAAW5O,GAAEM,EAAEhF,EAAE,IAAI,GAAGF,EAAEE,EAAE,IAAI,KAAKH,EAAEa,GAAGV,GAAGY,EAAE,SAASf,GAAGR,GAAEmZ,QAAQ3Y,IAAIT,EAAE,SAASS,EAAEa,EAAEV,GAAGH,EAAER,GAAE7D,IAAIqE,GAAGa,EAAE4D,EAAE5D,GAAGV,EAAEyF,GAAEjK,IAAIwE,GAAGH,EAAEa,GAAGV,GAAGT,EAAE,SAASM,GAAG0F,GAAEiT,QAAQ3Y,IAAI+B,EAAE,SAAS/B,EAAEa,EAAEV,GAAGH,EAAE0F,GAAE/J,IAAIqE,GAAGa,EAAE4D,EAAE5D,GAAGV,EAAEkhB,GAAGlhB,GAAGH,EAAEa,GAAGV,GAAGzB,EAAE,SAASsB,GAAG4F,GAAEqgB,GAAGjmB,IAAIS,EAAE,SAAST,GAAG4F,GAAE+S,QAAQ3Y,IAAI4F,EAAE,SAAS5F,GAAGN,GAAEumB,GAAGjmB,IAAIW,EAAE,SAASX,GAAGN,GAAEiZ,QAAQ3Y,IAAIigB,GAAG8E,GAAGjkB,EAAE,SAASd,EAC/fa,EAAEV,EAAEzB,GAAG,OAAOqmB,GAAG/kB,EAAEa,EAAEV,EAAEzB,IAAIc,EAAE,SAASQ,GAAsC,OAAnCA,EAAE2F,GAAEhK,IAAIqE,GAAGA,EAAE,IAAIoiB,eAAepiB,GAAU0B,GAAE6W,OAAOvY,IAAI0F,EAAE,WAAW,OAAO9F,GAAE2Y,OAAO,KAAK3Y,EAAE,WAAW,OAAOJ,GAAE+Y,OAAO,KAAK7W,EAAE,WAAW,OAAOgE,GAAE6S,OAAO,OACjM,WAAY,SAASvY,EAAEW,GAAGF,EAAE+hB,IAAI7hB,EAAEvI,QAAQ4pB,EAAGvhB,EAAE+hB,IAAIjD,GAAGc,IAAKW,EAAGvgB,EAAE+hB,IAAI2C,GAAGvI,EAAGtV,QAAQ7G,EAAE+hB,IAAItD,IAAIrY,IAAIpG,EAAEmiB,wBAAwBniB,EAAEmiB,uBAAuB/b,GAAG,GAAGA,IAAI,OAAOsZ,IAAK0C,cAAc1C,GAAIA,EAAG,MAAM5a,IAAI5E,EAAE4E,EAAEA,EAAE,KAAK5E,MAAM,SAASE,EAAEF,GAAGX,EAAEW,EAAEmiB,UAAU,SAAS3iB,EAAEQ,GAAG,OA/BnQ,WAAc,IAAIiE,IAAI2d,GAAI7hB,GAAG,CAAC,GAAG,mBAAoBqiB,QAAQ5e,EAAE2D,WAAW,WAAW,OAAOib,MAAM5e,EAAE,CAAC6e,YAAY,gBAAgBC,MAAK,SAASjjB,GAAG,IAAIA,EAAEkjB,GAAG,KAAK,uCAAuC/e,EAAE,IAAI,OAAOnE,EAAEmjB,iBAAgBC,OAAM,WAAW,OAAOtD,OAAO,GAAG9iB,EAAE,OAAO,IAAIsD,SAAQ,SAASN,EAAEa,GAAG7D,EAAEmH,GAAE,SAAShE,GAAGH,EAAE,IAAIxF,WAAW2F,MAAKU,MAAK,OAAOP,QAAQ+iB,UAAUJ,MAAK,WAAW,OAAOnD,OA+B5HF,GAAKqD,MAAK,SAASlf,GAAG,OAAOY,YAAY2e,YAAYvf,EAAErF,MAAKukB,KAAKtiB,GAAE,SAASoD,GAAGhE,EAAE,0CAA0CgE,GAAGxC,EAAEwC,MAAK,IAAIrF,EAAE,CAACsB,EAAEylB,IAA8D,GAA1D5e,IAAIpG,EAAEmiB,wBAAwBniB,EAAEmiB,uBAAuB/b,GAAMpG,EAAE8iB,gBAAgB,IAAI,OAAO9iB,EAAE8iB,gBAAgB7kB,EACxgBsB,GAAG,MAAMW,GAAG,OAAOZ,EAAE,sDAAsDY,IAAG,GAAsBiE,GAAG,mBAAoBD,YAAY6e,sBAAsBvD,KAAM9b,EAAE2D,WAAW,YAAY,mBAAoBib,MAAM5iB,EAAEU,GAAGkiB,MAAM5e,EAAE,CAAC6e,YAAY,gBAAgBC,MAAK,SAAStiB,GAAG,OAAOgE,YAAY6e,qBAAqB7iB,EAAEjC,GAAGukB,KAAKpiB,GAAE,SAASkD,GAAyF,OAAtFhE,EAAE,kCAAkCgE,GAAGhE,EAAE,6CAAoDI,EAAEU,UAAWuiB,MAAMhK,GADjc,GAEA3Y,EAAEgjB,mBAAmB,WAAW,OAAOhjB,EAAEgjB,mBAAmBhjB,EAAE+hB,IAAItD,IAAI5F,MAAM,KAAK9H,YAAY/Q,EAAEijB,SAAS,WAAW,OAAOjjB,EAAEijB,SAASjjB,EAAE+hB,IAAIxD,IAAI1F,MAAM,KAAK9H,YAAY/Q,EAAEmjB,yBAAyB,WAAW,OAAOnjB,EAAEmjB,yBAAyBnjB,EAAE+hB,IAAI1D,IAAIxF,MAAM,KAAK9H,YAAY/Q,EAAEqjB,+CAA+C,WAAW,OAAOrjB,EAAEqjB,+CAA+CrjB,EAAE+hB,IAAI9D,IAAIpF,MAAM,KAAK9H,YACxZ/Q,EAAEujB,0BAA0B,WAAW,OAAOvjB,EAAEujB,0BAA0BvjB,EAAE+hB,IAAIhE,IAAIlF,MAAM,KAAK9H,YAAY/Q,EAAEyjB,0BAA0B,WAAW,OAAOzjB,EAAEyjB,0BAA0BzjB,EAAE+hB,IAAIvE,IAAI3E,MAAM,KAAK9H,YAAY/Q,EAAE2jB,kBAAkB,WAAW,OAAO3jB,EAAE2jB,kBAAkB3jB,EAAE+hB,IAAIzE,IAAIzE,MAAM,KAAK9H,YAAY/Q,EAAE6jB,mBAAmB,WAAW,OAAO7jB,EAAE6jB,mBAAmB7jB,EAAE+hB,IAAI3E,IAAIvE,MAAM,KAAK9H,YAAY/Q,EAAE+jB,kBAAkB,WAAW,OAAO/jB,EAAE+jB,kBAAkB/jB,EAAE+hB,IAAIlB,IAAIhI,MAAM,KAAK9H,YAC7d/Q,EAAEikB,mBAAmB,WAAW,OAAOjkB,EAAEikB,mBAAmBjkB,EAAE+hB,IAAInB,IAAI/H,MAAM,KAAK9H,YAAY/Q,EAAEmkB,iBAAiB,WAAW,OAAOnkB,EAAEmkB,iBAAiBnkB,EAAE+hB,IAAIrB,IAAI7H,MAAM,KAAK9H,YAAY/Q,EAAEqkB,kBAAkB,WAAW,OAAOrkB,EAAEqkB,kBAAkBrkB,EAAE+hB,IAAI5E,IAAItE,MAAM,KAAK9H,YAAY/Q,EAAEukB,SAAS,WAAW,OAAOvkB,EAAEukB,SAASvkB,EAAE+hB,IAAI7E,IAAIrE,MAAM,KAAK9H,YAAY/Q,EAAEykB,iBAAiB,WAAW,OAAOzkB,EAAEykB,iBAAiBzkB,EAAE+hB,IAAIjG,IAAIjD,MAAM,KAAK9H,YACva/Q,EAAE2kB,kBAAkB,WAAW,OAAO3kB,EAAE2kB,kBAAkB3kB,EAAE+hB,IAAIN,IAAI5I,MAAM,KAAK9H,YAAY/Q,EAAE6kB,kBAAkB,WAAW,OAAO7kB,EAAE6kB,kBAAkB7kB,EAAE+hB,IAAIrJ,IAAIG,MAAM,KAAK9H,YAAY/Q,EAAE+kB,qBAAqB,WAAW,OAAO/kB,EAAE+kB,qBAAqB/kB,EAAE+hB,IAAI7F,IAAIrD,MAAM,KAAK9H,YAAY/Q,EAAEilB,sBAAsB,WAAW,OAAOjlB,EAAEilB,sBAAsBjlB,EAAE+hB,IAAI3F,IAAIvD,MAAM,KAAK9H,YAAY/Q,EAAEmlB,sBAAsB,WAAW,OAAOnlB,EAAEmlB,sBAAsBnlB,EAAE+hB,IAAIE,IAAIpJ,MAAM,KAAK9H,YACjd/Q,EAAEqlB,QAAQ,WAAW,OAAOrlB,EAAEqlB,QAAQrlB,EAAE+hB,IAAImB,IAAIrK,MAAM,KAAK9H,YAAY/Q,EAAEulB,iBAAiB,WAAW,OAAOvlB,EAAEulB,iBAAiBvlB,EAAE+hB,IAAIqB,IAAIvK,MAAM,KAAK9H,YACpJ,IACseyU,GADle1E,GAAG9gB,EAAEylB,QAAQ,WAAW,OAAO3E,GAAG9gB,EAAEylB,QAAQzlB,EAAE+hB,IAAIuB,IAAIzK,MAAM,KAAK9H,YAAY+T,GAAG9kB,EAAE2lB,kBAAkB,WAAW,OAAOb,GAAG9kB,EAAE2lB,kBAAkB3lB,EAAE+hB,IAAIyB,IAAI3K,MAAM,KAAK9H,YAAY6T,GAAG5kB,EAAE6lB,MAAM,WAAW,OAAOjB,GAAG5kB,EAAE6lB,MAAM7lB,EAAE+hB,IAAI2B,IAAI7K,MAAM,KAAK9H,YAAYzP,GAAEtB,EAAE2nB,aAAa,WAAW,OAAOrmB,GAAEtB,EAAE2nB,aAAa3nB,EAAE+hB,IAAI6B,IAAI/K,MAAM,KAAK9H,YAAY2S,GAAG1jB,EAAE6nB,eAAe,WAAW,OAAOnE,GAAG1jB,EAAE6nB,eAAe7nB,EAAE+hB,IAAI+B,IAAIjL,MAAM,KAAK9H,YAAYkR,GAAGjiB,EAAE+nB,eAAe,WAAW,OAAO9F,GAAGjiB,EAAE+nB,eAAe/nB,EAAE+hB,IAAIiC,IAAInL,MAAM,KACrf9H,YAAYmU,GAAGllB,EAAEioB,UAAU,WAAW,OAAO/C,GAAGllB,EAAEioB,UAAUjoB,EAAE+hB,IAAImC,IAAIrL,MAAM,KAAK9H,YAAYqU,GAAGplB,EAAEmoB,aAAa,WAAW,OAAO/C,GAAGplB,EAAEmoB,aAAanoB,EAAE+hB,IAAIqC,IAAIvL,MAAM,KAAK9H,YAAYuU,GAAGtlB,EAAEqoB,WAAW,WAAW,OAAO/C,GAAGtlB,EAAEqoB,WAAWroB,EAAE+hB,IAAIuC,IAAIzL,MAAM,KAAK9H,YAAY2T,GAAG1kB,EAAEyoB,UAAU,WAAW,OAAO/D,GAAG1kB,EAAEyoB,UAAUzoB,EAAE+hB,IAAIyC,IAAI3L,MAAM,KAAK9H,YAE5U,SAAS2U,KAAK,SAASnmB,IAAI,IAAIimB,KAAKA,IAAG,EAAGxlB,EAAE8oB,WAAU,GAAIxH,GAAI,CAAiE,GAAhExC,EAAG3C,GAAI1D,EAAGzY,GAAMA,EAAE+oB,sBAAqB/oB,EAAE+oB,uBAA0B/oB,EAAEgpB,QAAQ,IAAI,mBAAmBhpB,EAAEgpB,UAAUhpB,EAAEgpB,QAAQ,CAAChpB,EAAEgpB,UAAUhpB,EAAEgpB,QAAQnwB,QAAQ,CAAC,IAAIuH,EAAEJ,EAAEgpB,QAAQpiB,QAAQmZ,EAAGlZ,QAAQzG,GAAG0e,EAAGiB,IAAK,KAAK,EAAE3Z,GAAG,CAAC,GAAGpG,EAAE2G,OAAO,IAAI,mBAAmB3G,EAAE2G,SAAS3G,EAAE2G,OAAO,CAAC3G,EAAE2G,SAAS3G,EAAE2G,OAAO9N,QAAQgnB,IAAKf,EAAGuB,GAAI,EAAEja,IAAIpG,EAAEipB,WAAWjpB,EAAEipB,UAAU,cAAc/P,YAAW,WAAWA,YAAW,WAAWlZ,EAAEipB,UAAU,MAAK,GAAG1pB,MAAK,IAAIA,MACxe,GAHwVS,EAAEopB,aAAaplB,EAAEhE,EAAEqpB,aAAa,SAAS9pB,EAAEa,EAAEV,GAAG,OAAO0hB,EAAG7hB,EAAE4C,EAAE/B,EAAEV,IAAIM,EAAEspB,gBAAgBrI,EAAGjhB,EAAEioB,UAAU/C,GAAGllB,EAAEmoB,aAAa/C,GAAGplB,EAAEqoB,WAAW/C,GAC/dxgB,EAAE,SAASkd,IAAKwD,IAAIE,KAAKF,KAAK1gB,EAAEkd,IAC8chiB,EAAEtD,IAAIgpB,GACjf1lB,EAAE0pB,QAAQ,IAAI,mBAAmB1pB,EAAE0pB,UAAU1pB,EAAE0pB,QAAQ,CAAC1pB,EAAE0pB,UAAU,EAAE1pB,EAAE0pB,QAAQ7wB,QAAQmH,EAAE0pB,QAAQ1f,KAAVhK,GAGzF,OAH2G0lB,KAGpGiE,EAAQ/pB,QAKfhI,EAAOD,QAAUgyB,G,8BCpEnB/xB,EAAOD,QAmBP,SAAmBkxB,EAAIe,GAKnB,IAJA,IAAIC,EAAU,IAAI9uB,MAAMgW,UAAUlY,OAAS,GACvCwX,EAAU,EACVyZ,EAAU,EACVC,GAAU,EACPD,EAAQ/Y,UAAUlY,QACrBgxB,EAAOxZ,KAAYU,UAAU+Y,KACjC,OAAO,IAAIjqB,SAAQ,SAAkB+iB,EAASoH,GAC1CH,EAAOxZ,GAAU,SAAkBnS,GAC/B,GAAI6rB,EAEA,GADAA,GAAU,EACN7rB,EACA8rB,EAAO9rB,OACN,CAGD,IAFA,IAAI2rB,EAAS,IAAI9uB,MAAMgW,UAAUlY,OAAS,GACtCwX,EAAS,EACNA,EAASwZ,EAAOhxB,QACnBgxB,EAAOxZ,KAAYU,UAAUV,GACjCuS,EAAQ/J,MAAM,KAAMgR,KAIhC,IACIhB,EAAGhQ,MAAM+Q,GAAO,KAAMC,GACxB,MAAO3rB,GACD6rB,IACAA,GAAU,EACVC,EAAO9rB,U,gCCxCvB,IAAI+rB,EAAStyB,EAObsyB,EAAOpxB,OAAS,SAAgBqxB,GAC5B,IAAIjqB,EAAIiqB,EAAOrxB,OACf,IAAKoH,EACD,OAAO,EAEX,IADA,IAAIjB,EAAI,IACCiB,EAAI,EAAI,GAA0B,MAArBiqB,EAAOC,OAAOlqB,MAC9BjB,EACN,OAAO2Q,KAAKC,KAAqB,EAAhBsa,EAAOrxB,QAAc,EAAImG,GAU9C,IANA,IAAIorB,EAAM,IAAIrvB,MAAM,IAGhBsvB,EAAM,IAAItvB,MAAM,KAGXnC,EAAI,EAAGA,EAAI,IAChByxB,EAAID,EAAIxxB,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrFqxB,EAAOK,OAAS,SAAgBntB,EAAQotB,EAAOC,GAM3C,IALA,IAII7rB,EAJA8rB,EAAQ,KACRC,EAAQ,GACR9xB,EAAI,EACJiG,EAAI,EAED0rB,EAAQC,GAAK,CAChB,IAAIpqB,EAAIjD,EAAOotB,KACf,OAAQ1rB,GACJ,KAAK,EACD6rB,EAAM9xB,KAAOwxB,EAAIhqB,GAAK,GACtBzB,GAAS,EAAJyB,IAAU,EACfvB,EAAI,EACJ,MACJ,KAAK,EACD6rB,EAAM9xB,KAAOwxB,EAAIzrB,EAAIyB,GAAK,GAC1BzB,GAAS,GAAJyB,IAAW,EAChBvB,EAAI,EACJ,MACJ,KAAK,EACD6rB,EAAM9xB,KAAOwxB,EAAIzrB,EAAIyB,GAAK,GAC1BsqB,EAAM9xB,KAAOwxB,EAAQ,GAAJhqB,GACjBvB,EAAI,EAGRjG,EAAI,QACH6xB,IAAUA,EAAQ,KAAK1xB,KAAK6L,OAAOC,aAAagU,MAAMjU,OAAQ8lB,IAC/D9xB,EAAI,GASZ,OANIiG,IACA6rB,EAAM9xB,KAAOwxB,EAAIzrB,GACjB+rB,EAAM9xB,KAAO,GACH,IAANiG,IACA6rB,EAAM9xB,KAAO,KAEjB6xB,GACI7xB,GACA6xB,EAAM1xB,KAAK6L,OAAOC,aAAagU,MAAMjU,OAAQ8lB,EAAMhpB,MAAM,EAAG9I,KACzD6xB,EAAMtsB,KAAK,KAEfyG,OAAOC,aAAagU,MAAMjU,OAAQ8lB,EAAMhpB,MAAM,EAAG9I,KAG5D,IAAI+xB,EAAkB,mBAUtBV,EAAOzlB,OAAS,SAAgB0lB,EAAQ/sB,EAAQkT,GAI5C,IAHA,IAEI1R,EAFA4rB,EAAQla,EACRxR,EAAI,EAECjG,EAAI,EAAGA,EAAIsxB,EAAOrxB,QAAS,CAChC,IAAI6G,EAAIwqB,EAAOllB,WAAWpM,KAC1B,GAAU,KAAN8G,GAAYb,EAAI,EAChB,MACJ,QAAqBnG,KAAhBgH,EAAI2qB,EAAI3qB,IACT,MAAM/G,MAAMgyB,GAChB,OAAQ9rB,GACJ,KAAK,EACDF,EAAIe,EACJb,EAAI,EACJ,MACJ,KAAK,EACD1B,EAAOkT,KAAY1R,GAAK,GAAS,GAAJe,IAAW,EACxCf,EAAIe,EACJb,EAAI,EACJ,MACJ,KAAK,EACD1B,EAAOkT,MAAiB,GAAJ1R,IAAW,GAAS,GAAJe,IAAW,EAC/Cf,EAAIe,EACJb,EAAI,EACJ,MACJ,KAAK,EACD1B,EAAOkT,MAAiB,EAAJ1R,IAAU,EAAIe,EAClCb,EAAI,GAIhB,GAAU,IAANA,EACA,MAAMlG,MAAMgyB,GAChB,OAAOta,EAASka,GAQpBN,EAAOW,KAAO,SAAcV,GACxB,MAAO,mEAAmEU,KAAKV,K,8BChInF,SAASW,IAOL5xB,KAAK6xB,WAAa,GAftBlzB,EAAOD,QAAUkzB,EAyBjBA,EAAaE,UAAUppB,GAAK,SAAYqpB,EAAKnC,EAAIe,GAK7C,OAJC3wB,KAAK6xB,WAAWE,KAAS/xB,KAAK6xB,WAAWE,GAAO,KAAKjyB,KAAK,CACvD8vB,GAAMA,EACNe,IAAMA,GAAO3wB,OAEVA,MASX4xB,EAAaE,UAAUE,IAAM,SAAaD,EAAKnC,GAC3C,QAAYnwB,IAARsyB,EACA/xB,KAAK6xB,WAAa,QAElB,QAAWpyB,IAAPmwB,EACA5vB,KAAK6xB,WAAWE,GAAO,QAGvB,IADA,IAAIE,EAAYjyB,KAAK6xB,WAAWE,GACvBpyB,EAAI,EAAGA,EAAIsyB,EAAUryB,QACtBqyB,EAAUtyB,GAAGiwB,KAAOA,EACpBqC,EAAUpyB,OAAOF,EAAG,KAElBA,EAGlB,OAAOK,MASX4xB,EAAaE,UAAUI,KAAO,SAAcH,GACxC,IAAIE,EAAYjyB,KAAK6xB,WAAWE,GAChC,GAAIE,EAAW,CAGX,IAFA,IAAIE,EAAO,GACPxyB,EAAI,EACDA,EAAImY,UAAUlY,QACjBuyB,EAAKryB,KAAKgY,UAAUnY,MACxB,IAAKA,EAAI,EAAGA,EAAIsyB,EAAUryB,QACtBqyB,EAAUtyB,GAAGiwB,GAAGhQ,MAAMqS,EAAUtyB,KAAKgxB,IAAKwB,GAElD,OAAOnyB,O,6BCaX,SAASvB,EAAQC,GAwNb,MArN4B,oBAAjBmC,aAA8B,WAErC,IAAIuxB,EAAM,IAAIvxB,aAAa,EAAG,IAC1BwxB,EAAM,IAAIvxB,WAAWsxB,EAAIluB,QACzB0E,EAAiB,MAAXypB,EAAI,GAEd,SAASC,EAAmBC,EAAKC,EAAKC,GAClCL,EAAI,GAAKG,EACTC,EAAIC,GAAWJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GAGvB,SAASK,EAAmBH,EAAKC,EAAKC,GAClCL,EAAI,GAAKG,EACTC,EAAIC,GAAWJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GAQvB,SAASM,EAAkBH,EAAKC,GAK5B,OAJAJ,EAAI,GAAKG,EAAIC,GACbJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACZL,EAAI,GAGf,SAASQ,EAAkBJ,EAAKC,GAK5B,OAJAJ,EAAI,GAAKG,EAAIC,GACbJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACZL,EAAI,GAjBf1zB,EAAQm0B,aAAejqB,EAAK0pB,EAAqBI,EAEjDh0B,EAAQo0B,aAAelqB,EAAK8pB,EAAqBJ,EAmBjD5zB,EAAQq0B,YAAcnqB,EAAK+pB,EAAoBC,EAE/Cl0B,EAAQs0B,YAAcpqB,EAAKgqB,EAAoBD,EA9CV,GAiD9B,WAEP,SAASM,EAAmBC,EAAWX,EAAKC,EAAKC,GAC7C,IAAIU,EAAOZ,EAAM,EAAI,EAAI,EAGzB,GAFIY,IACAZ,GAAOA,GACC,IAARA,EACAW,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,QAC5E,GAAIW,MAAMb,GACXW,EAAU,WAAYV,EAAKC,QAC1B,GAAIF,EAAM,qBACXW,GAAWC,GAAQ,GAAK,cAAgB,EAAGX,EAAKC,QAC/C,GAAIF,EAAM,sBACXW,GAAWC,GAAQ,GAAKzc,KAAK2c,MAAMd,EAAM,yBAA4B,EAAGC,EAAKC,OAC5E,CACD,IAAIa,EAAW5c,KAAK6c,MAAM7c,KAAKnM,IAAIgoB,GAAO7b,KAAK8c,KAE/CN,GAAWC,GAAQ,GAAKG,EAAW,KAAO,GAD0B,QAArD5c,KAAK2c,MAAMd,EAAM7b,KAAK+c,IAAI,GAAIH,GAAY,YACI,EAAGd,EAAKC,IAO7E,SAASiB,EAAkBC,EAAUnB,EAAKC,GACtC,IAAImB,EAAOD,EAASnB,EAAKC,GACrBU,EAAsB,GAAdS,GAAQ,IAAU,EAC1BN,EAAWM,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbN,EACDO,EACAC,IACAX,GAAOY,KACM,IAAbT,EACO,qBAAPH,EAA+BU,EAC/BV,EAAOzc,KAAK+c,IAAI,EAAGH,EAAW,MAAQO,EAAW,SAd3Dn1B,EAAQm0B,aAAeI,EAAmBzoB,KAAK,KAAMwpB,GACrDt1B,EAAQo0B,aAAeG,EAAmBzoB,KAAK,KAAMypB,GAgBrDv1B,EAAQq0B,YAAcW,EAAkBlpB,KAAK,KAAM0pB,GACnDx1B,EAAQs0B,YAAcU,EAAkBlpB,KAAK,KAAM2pB,GAvC5C,GA4CiB,oBAAjBhzB,aAA8B,WAErC,IAAIizB,EAAM,IAAIjzB,aAAa,EAAE,IACzBkxB,EAAM,IAAIvxB,WAAWszB,EAAIlwB,QACzB0E,EAAiB,MAAXypB,EAAI,GAEd,SAASgC,EAAoB9B,EAAKC,EAAKC,GACnC2B,EAAI,GAAK7B,EACTC,EAAIC,GAAWJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GAGvB,SAASiC,EAAoB/B,EAAKC,EAAKC,GACnC2B,EAAI,GAAK7B,EACTC,EAAIC,GAAWJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GACnBG,EAAIC,EAAM,GAAKJ,EAAI,GAQvB,SAASkC,EAAmB/B,EAAKC,GAS7B,OARAJ,EAAI,GAAKG,EAAIC,GACbJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACZ2B,EAAI,GAGf,SAASI,EAAmBhC,EAAKC,GAS7B,OARAJ,EAAI,GAAKG,EAAIC,GACbJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACnBJ,EAAI,GAAKG,EAAIC,EAAM,GACZ2B,EAAI,GAzBf11B,EAAQ+1B,cAAgB7rB,EAAKyrB,EAAsBC,EAEnD51B,EAAQg2B,cAAgB9rB,EAAK0rB,EAAsBD,EA2BnD31B,EAAQi2B,aAAe/rB,EAAK2rB,EAAqBC,EAEjD91B,EAAQk2B,aAAehsB,EAAK4rB,EAAqBD,EA9DZ,GAiE9B,WAEP,SAASM,EAAoB3B,EAAW4B,EAAMC,EAAMxC,EAAKC,EAAKC,GAC1D,IAAIU,EAAOZ,EAAM,EAAI,EAAI,EAGzB,GAFIY,IACAZ,GAAOA,GACC,IAARA,EACAW,EAAU,EAAGV,EAAKC,EAAMqC,GACxB5B,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,EAAMsC,QAChF,GAAI3B,MAAMb,GACbW,EAAU,EAAGV,EAAKC,EAAMqC,GACxB5B,EAAU,WAAYV,EAAKC,EAAMsC,QAC9B,GAAIxC,EAAM,sBACbW,EAAU,EAAGV,EAAKC,EAAMqC,GACxB5B,GAAWC,GAAQ,GAAK,cAAgB,EAAGX,EAAKC,EAAMsC,OACnD,CACH,IAAIlB,EACJ,GAAItB,EAAM,uBAENW,GADAW,EAAWtB,EAAM,UACM,EAAGC,EAAKC,EAAMqC,GACrC5B,GAAWC,GAAQ,GAAKU,EAAW,cAAgB,EAAGrB,EAAKC,EAAMsC,OAC9D,CACH,IAAIzB,EAAW5c,KAAK6c,MAAM7c,KAAKnM,IAAIgoB,GAAO7b,KAAK8c,KAC9B,OAAbF,IACAA,EAAW,MAEfJ,EAAqB,kBADrBW,EAAWtB,EAAM7b,KAAK+c,IAAI,GAAIH,MACY,EAAGd,EAAKC,EAAMqC,GACxD5B,GAAWC,GAAQ,GAAKG,EAAW,MAAQ,GAAgB,QAAXO,EAAqB,WAAa,EAAGrB,EAAKC,EAAMsC,KAQ5G,SAASC,EAAmBrB,EAAUmB,EAAMC,EAAMvC,EAAKC,GACnD,IAAIwC,EAAKtB,EAASnB,EAAKC,EAAMqC,GACzBI,EAAKvB,EAASnB,EAAKC,EAAMsC,GACzB5B,EAAoB,GAAZ+B,GAAM,IAAU,EACxB5B,EAAW4B,IAAO,GAAK,KACvBrB,EAAW,YAAmB,QAALqB,GAAgBD,EAC7C,OAAoB,OAAb3B,EACDO,EACAC,IACAX,GAAOY,KACM,IAAbT,EACO,OAAPH,EAAgBU,EAChBV,EAAOzc,KAAK+c,IAAI,EAAGH,EAAW,OAASO,EAAW,kBAf5Dn1B,EAAQ+1B,cAAgBI,EAAoBrqB,KAAK,KAAMwpB,EAAa,EAAG,GACvEt1B,EAAQg2B,cAAgBG,EAAoBrqB,KAAK,KAAMypB,EAAa,EAAG,GAiBvEv1B,EAAQi2B,aAAeK,EAAmBxqB,KAAK,KAAM0pB,EAAY,EAAG,GACpEx1B,EAAQk2B,aAAeI,EAAmBxqB,KAAK,KAAM2pB,EAAY,EAAG,GAnD7D,GAuDJz1B,EAKX,SAASs1B,EAAYzB,EAAKC,EAAKC,GAC3BD,EAAIC,GAAyB,IAAbF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,GAG5B,SAAS0B,EAAY1B,EAAKC,EAAKC,GAC3BD,EAAIC,GAAYF,IAAQ,GACxBC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAmB,IAAbF,EAGpB,SAAS2B,EAAW1B,EAAKC,GACrB,OAAQD,EAAIC,GACJD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,MAAQ,EAGpC,SAAS0B,EAAW3B,EAAKC,GACrB,OAAQD,EAAIC,IAAY,GAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,MAAQ,EA3U9B9zB,EAAOD,QAAUD,EAAQA,I,mCCOzB,SAAS02B,QAAQC,YACb,IACI,IAAIC,IAAMC,KAAK,QAAQ9sB,QAAQ,IAAI,MAAzB8sB,CAAgCF,YAC1C,GAAIC,MAAQA,IAAIz1B,QAAUwD,OAAOmyB,KAAKF,KAAKz1B,QACvC,OAAOy1B,IACb,MAAOrwB,IACT,OAAO,KAdXrG,OAAOD,QAAUy2B,S,8BCAjBx2B,EAAOD,QA6BP,SAAc82B,EAAO/sB,EAAOpG,GACxB,IAAIozB,EAASpzB,GAAQ,KACjBqzB,EAASD,IAAS,EAClBE,EAAS,KACTve,EAASqe,EACb,OAAO,SAAoBpzB,GACvB,GAAIA,EAAO,GAAKA,EAAOqzB,EACnB,OAAOF,EAAMnzB,GACb+U,EAAS/U,EAAOozB,IAChBE,EAAOH,EAAMC,GACbre,EAAS,GAEb,IAAIob,EAAM/pB,EAAM5E,KAAK8xB,EAAMve,EAAQA,GAAU/U,GAG7C,OAFa,EAAT+U,IACAA,EAAwB,GAAL,EAATA,IACPob,K,gCCtCf,IAAIoD,EAAOl3B,EAOXk3B,EAAKh2B,OAAS,SAAqBqxB,GAG/B,IAFA,IAAI4E,EAAM,EACNpvB,EAAI,EACC9G,EAAI,EAAGA,EAAIsxB,EAAOrxB,SAAUD,GACjC8G,EAAIwqB,EAAOllB,WAAWpM,IACd,IACJk2B,GAAO,EACFpvB,EAAI,KACTovB,GAAO,EACe,QAAZ,MAAJpvB,IAAkE,QAAZ,MAA3BwqB,EAAOllB,WAAWpM,EAAI,OACrDA,EACFk2B,GAAO,GAEPA,GAAO,EAEf,OAAOA,GAUXD,EAAKE,KAAO,SAAmB5xB,EAAQotB,EAAOC,GAE1C,GADUA,EAAMD,EACN,EACN,MAAO,GAKX,IAJA,IAGI5rB,EAHA8rB,EAAQ,KACRC,EAAQ,GACR9xB,EAAI,EAED2xB,EAAQC,IACX7rB,EAAIxB,EAAOotB,MACH,IACJG,EAAM9xB,KAAO+F,EACRA,EAAI,KAAOA,EAAI,IACpB+rB,EAAM9xB,MAAY,GAAJ+F,IAAW,EAAsB,GAAlBxB,EAAOotB,KAC/B5rB,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlBxB,EAAOotB,OAAkB,IAAwB,GAAlBptB,EAAOotB,OAAkB,EAAsB,GAAlBptB,EAAOotB,MAAiB,MAC1GG,EAAM9xB,KAAO,OAAU+F,GAAK,IAC5B+rB,EAAM9xB,KAAO,OAAc,KAAJ+F,IAEvB+rB,EAAM9xB,MAAY,GAAJ+F,IAAW,IAAwB,GAAlBxB,EAAOotB,OAAkB,EAAsB,GAAlBptB,EAAOotB,KACnE3xB,EAAI,QACH6xB,IAAUA,EAAQ,KAAK1xB,KAAK6L,OAAOC,aAAagU,MAAMjU,OAAQ8lB,IAC/D9xB,EAAI,GAGZ,OAAI6xB,GACI7xB,GACA6xB,EAAM1xB,KAAK6L,OAAOC,aAAagU,MAAMjU,OAAQ8lB,EAAMhpB,MAAM,EAAG9I,KACzD6xB,EAAMtsB,KAAK,KAEfyG,OAAOC,aAAagU,MAAMjU,OAAQ8lB,EAAMhpB,MAAM,EAAG9I,KAU5Di2B,EAAKG,MAAQ,SAAoB9E,EAAQ/sB,EAAQkT,GAI7C,IAHA,IACI4e,EACAC,EAFA3E,EAAQla,EAGHzX,EAAI,EAAGA,EAAIsxB,EAAOrxB,SAAUD,GACjCq2B,EAAK/E,EAAOllB,WAAWpM,IACd,IACLuE,EAAOkT,KAAY4e,EACZA,EAAK,MACZ9xB,EAAOkT,KAAY4e,GAAM,EAAU,IACnC9xB,EAAOkT,KAAuB,GAAX4e,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCC,EAAKhF,EAAOllB,WAAWpM,EAAI,MAChEq2B,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALC,KACtCt2B,EACFuE,EAAOkT,KAAY4e,GAAM,GAAU,IACnC9xB,EAAOkT,KAAY4e,GAAM,GAAK,GAAK,IACnC9xB,EAAOkT,KAAY4e,GAAM,EAAK,GAAK,IACnC9xB,EAAOkT,KAAuB,GAAX4e,EAAgB,MAEnC9xB,EAAOkT,KAAY4e,GAAM,GAAU,IACnC9xB,EAAOkT,KAAY4e,GAAM,EAAK,GAAK,IACnC9xB,EAAOkT,KAAuB,GAAX4e,EAAgB,KAG3C,OAAO5e,EAASka,I,mFCtFpB,IAAI4E,EAAc,GAKlBA,EAAYC,OAQZD,EAAYE,MAMZF,EAAYG,aAAe,EAM3BH,EAAYI,WAAa,EAMzBJ,EAAYK,uBAAyB,EAMrCL,EAAYM,mBAAqB,EAKjCN,EAAYO,SAAW,CACrBC,WAAY,EACZC,aAAc,GAOhBT,EAAYU,MAAQ,IAAI11B,WAAW,GAMnCg1B,EAAYW,QAAU,IAAIh2B,aAAaq1B,EAAYU,MAAM1yB,QAMzDgyB,EAAYY,QAAU,IAAI31B,aAAa+0B,EAAYU,MAAM1yB,QAMzDgyB,EAAYa,eAAuE,IAAtD,IAAI/1B,YAAY,IAAIF,WAAW,CAAC,EAAG,IAAIoD,QAAQ,GAS5EgyB,EAAYc,KAAO,SAASC,EAAKC,GAK/Bl3B,KAAKi3B,IAAY,EAANA,EAMXj3B,KAAKk3B,KAAc,EAAPA,GAQdhB,EAAYc,KAAKnY,OAAS,SAASoY,EAAKC,GAEtC,OAAc,GAAPD,GAAoB,GAARC,EAAYhB,EAAYc,KAAKG,KAAO,IAAIjB,EAAYc,KAAKC,EAAKC,IAMnFhB,EAAYc,KAAKlF,UAAUsF,UAAY,WACrC,OAAQp3B,KAAKi3B,MAAQ,GAAiB,WAAZj3B,KAAKk3B,MAOjChB,EAAYc,KAAKlF,UAAUuF,OAAS,SAASC,GAC3C,OAAOt3B,KAAKi3B,KAAOK,EAAML,KAAOj3B,KAAKk3B,MAAQI,EAAMJ,MAOrDhB,EAAYc,KAAKG,KAAO,IAAIjB,EAAYc,KAAK,EAAG,GAUhDd,EAAYqB,QAAU,SAASC,GAC7B,GAAKA,EAGCC,EAAeD,OAFnB,IAAIC,EAAe,KASrBz3B,KAAK6qB,GAAKqL,EAAYwB,WAAWC,SAASF,GAQ1Cz3B,KAAK43B,MAAQH,EAQbz3B,KAAK63B,SAAW,EAQhB73B,KAAK83B,OAAS,KAQd93B,KAAK+3B,cAAgB,EAQrB/3B,KAAKg4B,UAAW,EAQhBh4B,KAAKi4B,aAAe,EAQpBj4B,KAAKk4B,QAAU,GAQfl4B,KAAKm4B,iBAAmB,EAQxBn4B,KAAKo4B,gBAAiB,GAGxBlC,EAAYqB,QAAQzF,UAAUuG,MAAQ,WACpCr4B,KAAK6qB,GAAGwN,QACRr4B,KAAK43B,MAAQ53B,KAAK6qB,GAAGyN,WACrBt4B,KAAK63B,SAAW,EAChB73B,KAAK83B,OAAS,KACd93B,KAAK+3B,cAAgB,EACrB/3B,KAAKg4B,UAAW,EAChBh4B,KAAKi4B,aAAe,EACpBj4B,KAAKk4B,QAAU,GACfl4B,KAAKm4B,iBAAmB,EACxBn4B,KAAKo4B,gBAAiB,GAUxBlC,EAAYqB,QAAQzF,UAAUyG,cAAgB,SAASA,GACrDv4B,KAAKo4B,eAAiBG,GAUxBrC,EAAYqB,QAAQzF,UAAU0G,WAAa,WACzC,OAAOx4B,KAAK6qB,IASdqL,EAAYqB,QAAQzF,UAAU2G,aAAe,WAC3C,OAAOz4B,KAAK6qB,GAAG6N,QAAQhtB,SAAS1L,KAAK6qB,GAAG8N,WAAY34B,KAAK6qB,GAAG8N,WAAa34B,KAAKoX,WAahF8e,EAAYqB,QAAQzF,UAAU8G,KAAO,SAASv2B,EAAMw2B,GAE9Cx2B,EAAOrC,KAAK63B,WACd73B,KAAK63B,SAAWx1B,GAQlB,IAHA,IAAIy2B,EAAwE,IAAvD94B,KAAK6qB,GAAGyN,WAAat4B,KAAK43B,MAAQiB,GAA2Bx2B,EAAO,EAGlFrC,KAAK43B,MAAQkB,EAAaz2B,EAAOw2B,GAAkB,CACxD,IAAIE,EAAe/4B,KAAK6qB,GAAGyN,WAC3Bt4B,KAAK6qB,GAAKqL,EAAYqB,QAAQyB,eAAeh5B,KAAK6qB,IAClD7qB,KAAK43B,OAAS53B,KAAK6qB,GAAGyN,WAAaS,EAGrC/4B,KAAKi5B,IAAIH,IAMX5C,EAAYqB,QAAQzF,UAAUmH,IAAM,SAASC,GAC3C,IAAK,IAAIv5B,EAAI,EAAGA,EAAIu5B,EAAWv5B,IAC7BK,KAAK6qB,GAAGsO,YAAYn5B,KAAK43B,MAAO,IAOpC1B,EAAYqB,QAAQzF,UAAUqH,UAAY,SAAS/4B,GACjDJ,KAAK6qB,GAAGsO,UAAUn5B,KAAK43B,OAAS,EAAGx3B,IAMrC81B,EAAYqB,QAAQzF,UAAUsH,WAAa,SAASh5B,GAClDJ,KAAK6qB,GAAGuO,WAAWp5B,KAAK43B,OAAS,EAAGx3B,IAMtC81B,EAAYqB,QAAQzF,UAAUuH,WAAa,SAASj5B,GAClDJ,KAAK6qB,GAAGwO,WAAWr5B,KAAK43B,OAAS,EAAGx3B,IAMtC81B,EAAYqB,QAAQzF,UAAUwH,WAAa,SAASl5B,GAClDJ,KAAK6qB,GAAGyO,WAAWt5B,KAAK43B,OAAS,EAAGx3B,IAMtC81B,EAAYqB,QAAQzF,UAAUyH,aAAe,SAASn5B,GACpDJ,KAAK6qB,GAAG0O,aAAav5B,KAAK43B,OAAS,EAAGx3B,IAMxC81B,EAAYqB,QAAQzF,UAAU0H,aAAe,SAASp5B,GACpDJ,KAAK6qB,GAAG2O,aAAax5B,KAAK43B,OAAS,EAAGx3B,IAQxC81B,EAAYqB,QAAQzF,UAAU2H,QAAU,SAASr5B,GAC/CJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKm5B,UAAU/4B,IAOjB81B,EAAYqB,QAAQzF,UAAU4H,SAAW,SAASt5B,GAChDJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKo5B,WAAWh5B,IAOlB81B,EAAYqB,QAAQzF,UAAU6H,SAAW,SAASv5B,GAChDJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKq5B,WAAWj5B,IAOlB81B,EAAYqB,QAAQzF,UAAU8H,SAAW,SAASx5B,GAChDJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKs5B,WAAWl5B,IAOlB81B,EAAYqB,QAAQzF,UAAU+H,WAAa,SAASz5B,GAClDJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKu5B,aAAan5B,IAOpB81B,EAAYqB,QAAQzF,UAAUgI,WAAa,SAAS15B,GAClDJ,KAAK44B,KAAK,EAAG,GACb54B,KAAKw5B,aAAap5B,IASpB81B,EAAYqB,QAAQzF,UAAUiI,aAAe,SAASC,EAAS55B,EAAO65B,IAChEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAKy5B,QAAQr5B,GACbJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAUqI,cAAgB,SAASH,EAAS55B,EAAO65B,IACjEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAK05B,SAASt5B,GACdJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAUsI,cAAgB,SAASJ,EAAS55B,EAAO65B,IACjEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAK25B,SAASv5B,GACdJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAUuI,cAAgB,SAASL,EAAS55B,EAAO65B,IACjEj6B,KAAKo4B,gBAAmBh4B,EAAMi3B,OAAO4C,KACvCj6B,KAAK45B,SAASx5B,GACdJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAUwI,gBAAkB,SAASN,EAAS55B,EAAO65B,IACnEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAK65B,WAAWz5B,GAChBJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAUyI,gBAAkB,SAASP,EAAS55B,EAAO65B,IACnEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAK85B,WAAW15B,GAChBJ,KAAKk6B,KAAKF,KASd9D,EAAYqB,QAAQzF,UAAU0I,eAAiB,SAASR,EAAS55B,EAAO65B,IAClEj6B,KAAKo4B,gBAAkBh4B,GAAS65B,KAClCj6B,KAAKy6B,UAAUr6B,GACfJ,KAAKk6B,KAAKF,KAWd9D,EAAYqB,QAAQzF,UAAU4I,eAAiB,SAASV,EAAS55B,EAAO65B,GAClE75B,GAAS65B,IACXj6B,KAAK26B,OAAOv6B,GACZJ,KAAKk6B,KAAKF,KAWd9D,EAAYqB,QAAQzF,UAAU6I,OAAS,SAASC,GAC9C,GAAIA,GAAO56B,KAAKoX,SACd,MAAM,IAAI1X,MAAM,mDAQpBw2B,EAAYqB,QAAQzF,UAAU+I,UAAY,WACxC,GAAI76B,KAAKg4B,SACP,MAAM,IAAIt4B,MAAM,0DASpBw2B,EAAYqB,QAAQzF,UAAUoI,KAAO,SAASF,GAC5Ch6B,KAAK83B,OAAOkC,GAAWh6B,KAAKoX,UAM9B8e,EAAYqB,QAAQzF,UAAU1a,OAAS,WACrC,OAAOpX,KAAK6qB,GAAGyN,WAAat4B,KAAK43B,OAenC1B,EAAYqB,QAAQyB,eAAiB,SAASnO,GAC5C,IAAIkO,EAAelO,EAAGyN,WAGtB,GAAmB,WAAfS,EACF,MAAM,IAAIr5B,MAAM,uDAGlB,IAAIo7B,EAAe/B,GAAgB,EAC/BgC,EAAM7E,EAAYwB,WAAWC,SAASmD,GAG1C,OAFAC,EAAIC,YAAYF,EAAe/B,GAC/BgC,EAAIrC,QAAQp3B,IAAIupB,EAAG6N,QAASoC,EAAe/B,GACpCgC,GAST7E,EAAYqB,QAAQzF,UAAU2I,UAAY,SAASrjB,GACjDpX,KAAK44B,KAAK1C,EAAYI,WAAY,GAClCt2B,KAAKq5B,WAAWr5B,KAAKoX,SAAWA,EAAS8e,EAAYI,aAWvDJ,EAAYqB,QAAQzF,UAAUmJ,YAAc,SAASC,GACnDl7B,KAAK66B,YACc,MAAf76B,KAAK83B,SACP93B,KAAK83B,OAAS,IAEhB93B,KAAK+3B,cAAgBmD,EACrB,IAAK,IAAIv7B,EAAI,EAAGA,EAAIu7B,EAAWv7B,IAC7BK,KAAK83B,OAAOn4B,GAAK,EAEnBK,KAAKg4B,UAAW,EAChBh4B,KAAKi4B,aAAej4B,KAAKoX,UAQ3B8e,EAAYqB,QAAQzF,UAAUqJ,UAAY,WACxC,GAAmB,MAAfn7B,KAAK83B,SAAmB93B,KAAKg4B,SAC/B,MAAM,IAAIt4B,MAAM,qDAGlBM,KAAK25B,SAAS,GAKd,IAJA,IAAIyB,EAAYp7B,KAAKoX,SAGjBzX,EAAIK,KAAK+3B,cAAgB,EACtBp4B,GAAK,GAAuB,GAAlBK,KAAK83B,OAAOn4B,GAASA,KAItC,IAHA,IAAI07B,EAAe17B,EAAI,EAGhBA,GAAK,EAAGA,IAEbK,KAAK05B,SAA2B,GAAlB15B,KAAK83B,OAAOn4B,GAAUy7B,EAAYp7B,KAAK83B,OAAOn4B,GAAK,GAInEK,KAAK05B,SAAS0B,EAAYp7B,KAAKi4B,cAC/B,IAAIpC,GAAOwF,EAFW,GAEuBnF,EAAYG,aACzDr2B,KAAK05B,SAAS7D,GAGd,IAAIyF,EAAkB,EAClBC,EAAMv7B,KAAK43B,MACjB4D,EACE,IAAK77B,EAAI,EAAGA,EAAIK,KAAKk4B,QAAQt4B,OAAQD,IAAK,CACxC,IAAI87B,EAAMz7B,KAAK6qB,GAAGyN,WAAat4B,KAAKk4B,QAAQv4B,GAC5C,GAAIk2B,GAAO71B,KAAK6qB,GAAG6Q,UAAUD,GAAM,CACjC,IAAK,IAAI71B,EAAIswB,EAAYG,aAAczwB,EAAIiwB,EAAKjwB,GAAKswB,EAAYG,aAC/D,GAAIr2B,KAAK6qB,GAAG6Q,UAAUH,EAAM31B,IAAM5F,KAAK6qB,GAAG6Q,UAAUD,EAAM71B,GACxD,SAAS41B,EAGbF,EAAkBt7B,KAAKk4B,QAAQv4B,GAC/B,OAqBJ,OAjBI27B,GAGFt7B,KAAK43B,MAAQ53B,KAAK6qB,GAAGyN,WAAa8C,EAGlCp7B,KAAK6qB,GAAGwO,WAAWr5B,KAAK43B,MAAO0D,EAAkBF,KAIjDp7B,KAAKk4B,QAAQp4B,KAAKE,KAAKoX,UAGvBpX,KAAK6qB,GAAGwO,WAAWr5B,KAAK6qB,GAAGyN,WAAa8C,EAAWp7B,KAAKoX,SAAWgkB,IAGrEp7B,KAAKg4B,UAAW,EACToD,GAWTlF,EAAYqB,QAAQzF,UAAU6J,OAAS,SAASC,EAAYC,EAAqBC,GAC/E,IAAIC,EAAcD,EAAkB5F,EAAYM,mBAAqB,EACrE,GAAIqF,EAAqB,CACvB,IAAIG,EAAkBH,EAGtB,GAFA77B,KAAK44B,KAAK54B,KAAK63B,SAAU3B,EAAYI,WACnCJ,EAAYK,uBAAyBwF,GACnCC,EAAgBp8B,QAAUs2B,EAAYK,uBACxC,MAAM,IAAI72B,MAAM,+CACdw2B,EAAYK,wBAEhB,IAAK,IAAI52B,EAAIu2B,EAAYK,uBAAyB,EAAG52B,GAAK,EAAGA,IAC3DK,KAAKm5B,UAAU6C,EAAgBjwB,WAAWpM,IAG9CK,KAAK44B,KAAK54B,KAAK63B,SAAU3B,EAAYI,WAAayF,GAClD/7B,KAAKy6B,UAAUmB,GACXG,GACF/7B,KAAK25B,SAAS35B,KAAK6qB,GAAGyN,WAAat4B,KAAK43B,OAE1C53B,KAAK6qB,GAAGmQ,YAAYh7B,KAAK43B,QAS3B1B,EAAYqB,QAAQzF,UAAUmK,mBAAqB,SAAUL,EAAYC,GACvE77B,KAAK27B,OAAOC,EAAYC,GAAqB,IAW/C3F,EAAYqB,QAAQzF,UAAUoK,cAAgB,SAASC,EAAOC,GAC5D,IAAIC,EAAcr8B,KAAK6qB,GAAGyN,WAAa6D,EACnCG,EAAeD,EAAcr8B,KAAK6qB,GAAG0R,UAAUF,GAInD,GAHoD,GAA3Cr8B,KAAK6qB,GAAG6Q,UAAUY,EAAeF,GAIxC,MAAM,IAAI18B,MAAM,sBAAwB08B,EAAQ,iBAapDlG,EAAYqB,QAAQzF,UAAU0K,YAAc,SAASC,EAAWC,EAAWC,GACzE38B,KAAK66B,YACL76B,KAAKm4B,iBAAmBuE,EACxB18B,KAAK44B,KAAK1C,EAAYI,WAAYmG,EAAYC,GAC9C18B,KAAK44B,KAAK+D,EAAWF,EAAYC,IAUnCxG,EAAYqB,QAAQzF,UAAU8K,UAAY,WAExC,OADA58B,KAAKq5B,WAAWr5B,KAAKm4B,kBACdn4B,KAAKoX,UAWd8e,EAAYqB,QAAQzF,UAAU+K,aAAe,SAASn2B,GACpD,GAAIA,aAAa5F,WACf,IAAI80B,EAAOlvB,MAEX,CAAIkvB,EAAO,GAGX,IAHA,IACIj2B,EAAI,EAEDA,EAAI+G,EAAE9G,QAAQ,CACnB,IAAIk9B,EAGAx2B,EAAII,EAAEqF,WAAWpM,MAEnBm9B,EADEx2B,EAAI,OAAUA,GAAK,MACTA,GAGCA,GAAK,IADVI,EAAEqF,WAAWpM,MACO,UAId,IACdi2B,EAAK91B,KAAKg9B,IAENA,EAAY,KACdlH,EAAK91B,KAAOg9B,GAAa,EAAK,GAAQ,MAElCA,EAAY,MACdlH,EAAK91B,KAAOg9B,GAAa,GAAM,GAAQ,KAEvClH,EAAK91B,KACDg9B,GAAa,GAAM,EAAQ,IAC3BA,GAAa,GAAM,GAAQ,KAEjClH,EAAK91B,KAAOg9B,GAAa,EAAK,GAAQ,MAExClH,EAAK91B,KAAkB,GAAZg9B,EAAoB,OAKrC98B,KAAKy5B,QAAQ,GACbz5B,KAAKw8B,YAAY,EAAG5G,EAAKh2B,OAAQ,GACjCI,KAAK6qB,GAAGmQ,YAAYh7B,KAAK43B,OAAShC,EAAKh2B,QAC9BD,EAAI,EAAb,IAAK,IAAWyX,EAASpX,KAAK43B,MAAOc,EAAQ14B,KAAK6qB,GAAG6N,QAAS/4B,EAAIi2B,EAAKh2B,OAAQD,IAC7E+4B,EAAMthB,KAAYwe,EAAKj2B,GAEzB,OAAOK,KAAK48B,aAUd1G,EAAYqB,QAAQzF,UAAUiL,WAAa,SAAS9F,EAAKC,GACvD,OAAOhB,EAAYc,KAAKnY,OAAOoY,EAAKC,IAUtChB,EAAYwB,WAAa,SAASgB,GAKhC14B,KAAKg9B,OAAStE,EAMd14B,KAAKi9B,UAAY,GASnB/G,EAAYwB,WAAWC,SAAW,SAASuB,GACzC,OAAO,IAAIhD,EAAYwB,WAAW,IAAI52B,WAAWo4B,KAGnDhD,EAAYwB,WAAW5F,UAAUuG,MAAQ,WACvCr4B,KAAKi9B,UAAY,GAQnB/G,EAAYwB,WAAW5F,UAAU4G,MAAQ,WACvC,OAAO14B,KAAKg9B,QAQd9G,EAAYwB,WAAW5F,UAAU6G,SAAW,WAC1C,OAAO34B,KAAKi9B,WAQd/G,EAAYwB,WAAW5F,UAAUkJ,YAAc,SAASrC,GACtD34B,KAAKi9B,UAAYtE,GAQnBzC,EAAYwB,WAAW5F,UAAUwG,SAAW,WAC1C,OAAOt4B,KAAKg9B,OAAOp9B,QAOrBs2B,EAAYwB,WAAW5F,UAAUoL,SAAW,SAAS9lB,GACnD,OAAOpX,KAAKm9B,UAAU/lB,IAAW,IAAM,IAOzC8e,EAAYwB,WAAW5F,UAAUqL,UAAY,SAAS/lB,GACpD,OAAOpX,KAAKg9B,OAAO5lB,IAOrB8e,EAAYwB,WAAW5F,UAAU4J,UAAY,SAAStkB,GACpD,OAAOpX,KAAKo9B,WAAWhmB,IAAW,IAAM,IAO1C8e,EAAYwB,WAAW5F,UAAUsL,WAAa,SAAShmB,GACrD,OAAOpX,KAAKg9B,OAAO5lB,GAAUpX,KAAKg9B,OAAO5lB,EAAS,IAAM,GAO1D8e,EAAYwB,WAAW5F,UAAUyK,UAAY,SAASnlB,GACpD,OAAOpX,KAAKg9B,OAAO5lB,GAAUpX,KAAKg9B,OAAO5lB,EAAS,IAAM,EAAIpX,KAAKg9B,OAAO5lB,EAAS,IAAM,GAAKpX,KAAKg9B,OAAO5lB,EAAS,IAAM,IAOzH8e,EAAYwB,WAAW5F,UAAUuL,WAAa,SAASjmB,GACrD,OAAOpX,KAAKu8B,UAAUnlB,KAAY,GAOpC8e,EAAYwB,WAAW5F,UAAUwL,UAAY,SAASlmB,GACpD,OAAO,IAAI8e,EAAYc,KAAKh3B,KAAKu8B,UAAUnlB,GAASpX,KAAKu8B,UAAUnlB,EAAS,KAO9E8e,EAAYwB,WAAW5F,UAAUyL,WAAa,SAASnmB,GACrD,OAAO,IAAI8e,EAAYc,KAAKh3B,KAAKq9B,WAAWjmB,GAASpX,KAAKq9B,WAAWjmB,EAAS,KAOhF8e,EAAYwB,WAAW5F,UAAU0L,YAAc,SAASpmB,GAEtD,OADA8e,EAAYU,MAAM,GAAK52B,KAAKu8B,UAAUnlB,GAC/B8e,EAAYW,QAAQ,IAO7BX,EAAYwB,WAAW5F,UAAU2L,YAAc,SAASrmB,GAGtD,OAFA8e,EAAYU,MAAMV,EAAYa,eAAiB,EAAI,GAAK/2B,KAAKu8B,UAAUnlB,GACvE8e,EAAYU,MAAMV,EAAYa,eAAiB,EAAI,GAAK/2B,KAAKu8B,UAAUnlB,EAAS,GACzE8e,EAAYY,QAAQ,IAO7BZ,EAAYwB,WAAW5F,UAAUqH,UAAY,SAAS/hB,EAAQhX,GAC5DJ,KAAKg9B,OAAO5lB,GAA+B,GAO7C8e,EAAYwB,WAAW5F,UAAU4L,WAAa,SAAStmB,EAAQhX,GAC7DJ,KAAKg9B,OAAO5lB,GAAUhX,GAOxB81B,EAAYwB,WAAW5F,UAAUsH,WAAa,SAAShiB,EAAQhX,GAC7DJ,KAAKg9B,OAAO5lB,GAAUhX,EACtBJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,GAOrC81B,EAAYwB,WAAW5F,UAAU6L,YAAc,SAASvmB,EAAQhX,GAC5DJ,KAAKg9B,OAAO5lB,GAAUhX,EACtBJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,GAOvC81B,EAAYwB,WAAW5F,UAAUuH,WAAa,SAASjiB,EAAQhX,GAC7DJ,KAAKg9B,OAAO5lB,GAAUhX,EACtBJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,EACnCJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,GACnCJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,IAOrC81B,EAAYwB,WAAW5F,UAAU8L,YAAc,SAASxmB,EAAQhX,GAC5DJ,KAAKg9B,OAAO5lB,GAAUhX,EACtBJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,EACnCJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,GACnCJ,KAAKg9B,OAAO5lB,EAAS,GAAKhX,GAAS,IAOvC81B,EAAYwB,WAAW5F,UAAUwH,WAAa,SAASliB,EAAQhX,GAC7DJ,KAAKq5B,WAAWjiB,EAAQhX,EAAM62B,KAC9Bj3B,KAAKq5B,WAAWjiB,EAAS,EAAGhX,EAAM82B,OAOpChB,EAAYwB,WAAW5F,UAAU+L,YAAc,SAASzmB,EAAQhX,GAC5DJ,KAAK49B,YAAYxmB,EAAQhX,EAAM62B,KAC/Bj3B,KAAK49B,YAAYxmB,EAAS,EAAGhX,EAAM82B,OAOvChB,EAAYwB,WAAW5F,UAAUyH,aAAe,SAASniB,EAAQhX,GAC/D81B,EAAYW,QAAQ,GAAKz2B,EACzBJ,KAAKq5B,WAAWjiB,EAAQ8e,EAAYU,MAAM,KAO5CV,EAAYwB,WAAW5F,UAAU0H,aAAe,SAASpiB,EAAQhX,GAC/D81B,EAAYY,QAAQ,GAAK12B,EACzBJ,KAAKq5B,WAAWjiB,EAAQ8e,EAAYU,MAAMV,EAAYa,eAAiB,EAAI,IAC3E/2B,KAAKq5B,WAAWjiB,EAAS,EAAG8e,EAAYU,MAAMV,EAAYa,eAAiB,EAAI,KASjFb,EAAYwB,WAAW5F,UAAUgM,oBAAsB,WACrD,GAAI99B,KAAKg9B,OAAOp9B,OAASI,KAAKi9B,UAAY/G,EAAYI,WAClDJ,EAAYK,uBACd,MAAM,IAAI72B,MACN,kEAGN,IADA,IAAIq+B,EAAS,GACJp+B,EAAI,EAAGA,EAAIu2B,EAAYK,uBAAwB52B,IACtDo+B,GAAUpyB,OAAOC,aACb5L,KAAKk9B,SAASl9B,KAAKi9B,UAAY/G,EAAYI,WAAa32B,IAE9D,OAAOo+B,GAWT7H,EAAYwB,WAAW5F,UAAUkM,SAAW,SAASC,EAAQC,GAC3D,IAAIpG,EAASmG,EAASj+B,KAAKu8B,UAAU0B,GACrC,OAAOC,EAAgBl+B,KAAK07B,UAAU5D,GAAU93B,KAAK07B,UAAU5D,EAASoG,GAAiB,GAU3FhI,EAAYwB,WAAW5F,UAAUqM,QAAU,SAASz4B,EAAG0R,GAGrD,OAFA1R,EAAEu4B,OAAS7mB,EAASpX,KAAKu8B,UAAUnlB,GACnC1R,EAAEmlB,GAAK7qB,KACA0F,GAgBTwwB,EAAYwB,WAAW5F,UAAUsM,SAAW,SAAShnB,EAAQinB,GAC3DjnB,GAAUpX,KAAKu8B,UAAUnlB,GAEzB,IAAIxX,EAASI,KAAKu8B,UAAUnlB,GACxB2mB,EAAS,GACTp+B,EAAI,EAIR,GAFAyX,GAAU8e,EAAYI,WAElB+H,IAAiBnI,EAAYO,SAASC,WACxC,OAAO12B,KAAKg9B,OAAOtxB,SAAS0L,EAAQA,EAASxX,GAG/C,KAAOD,EAAIC,GAAQ,CACjB,IAAIk9B,EAGAx2B,EAAItG,KAAKm9B,UAAU/lB,EAASzX,KAChC,GAAI2G,EAAI,IACNw2B,EAAYx2B,MACP,CACL,IAAIa,EAAInH,KAAKm9B,UAAU/lB,EAASzX,KAChC,GAAI2G,EAAI,IACNw2B,GACQ,GAAJx2B,IAAa,EACV,GAAJa,MACE,CACL,IAAIV,EAAIzG,KAAKm9B,UAAU/lB,EAASzX,KAE9Bm9B,EADEx2B,EAAI,KAEE,GAAJA,IAAa,IACT,GAAJa,IAAa,EACV,GAAJV,GAIK,EAAJH,IAAa,IACT,GAAJa,IAAa,IACT,GAAJV,IAAa,EACV,GALCzG,KAAKm9B,UAAU/lB,EAASzX,MAWlCm9B,EAAY,MACdiB,GAAUpyB,OAAOC,aAAakxB,IAE9BA,GAAa,MACbiB,GAAUpyB,OAAOC,aACK,OAAnBkxB,GAAa,IACkB,OAAnB,KAAZA,KAIP,OAAOiB,GAQT7H,EAAYwB,WAAW5F,UAAUwM,WAAa,SAASlnB,GACrD,OAAOA,EAASpX,KAAKu8B,UAAUnlB,IASjC8e,EAAYwB,WAAW5F,UAAUyM,SAAW,SAASnnB,GACnD,OAAOA,EAASpX,KAAKu8B,UAAUnlB,GAAU8e,EAAYI,YASvDJ,EAAYwB,WAAW5F,UAAU0M,aAAe,SAASpnB,GACvD,OAAOpX,KAAKu8B,UAAUnlB,EAASpX,KAAKu8B,UAAUnlB,KAOhD8e,EAAYwB,WAAW5F,UAAU2M,iBAAmB,SAASC,GAC3D,GAAIA,EAAM9+B,QAAUs2B,EAAYK,uBAC9B,MAAM,IAAI72B,MAAM,+CACAw2B,EAAYK,wBAE9B,IAAK,IAAI52B,EAAI,EAAGA,EAAIu2B,EAAYK,uBAAwB52B,IACtD,GAAI++B,EAAM3yB,WAAWpM,IAAMK,KAAKk9B,SAASl9B,KAAKi9B,UAAY/G,EAAYI,WAAa32B,GACjF,OAAO,EAGX,OAAO,GAUTu2B,EAAYwB,WAAW5F,UAAUiL,WAAa,SAAS9F,EAAKC,GAC1D,OAAOhB,EAAYc,KAAKnY,OAAOoY,EAAKC,K,gCCluCtCx4B,EAAQigC,YAAa,EACrB,IAAIC,EAAsB,WACtB,SAASA,EAAKC,GACV,IAAKA,EACD,MAAM,IAAIt/B,UAAU,2CAExBS,KAAKI,MAAQw+B,EAAKE,MACdD,GAAQD,EAAKG,OAAOF,KACpB7+B,KAAKI,MAAQy+B,GA6CrB,OA1CAD,EAAKG,OAAS,SAAUF,GACpB,IAAIz+B,EAAQy+B,EAAKnhB,WACjB,OAAOmhB,IAASA,aAAgBD,GAAQA,EAAKI,UAAUrN,KAAKvxB,KAEhEw+B,EAAK/f,OAAS,WACV,OAAO,IAAI+f,EAAK,CAACA,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,IAAI/5B,KAAK,OAE3F05B,EAAKM,YAAc,WACf,OAAO,IAAIN,EAAK,cAEpBA,EAAKO,MAAQ,SAAUN,GACnB,OAAO,IAAID,EAAKC,IAEpBD,EAAKQ,IAAM,WACP,MAAO,CAACR,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,GAAIL,EAAKK,IAAI,IAAI/5B,KAAK,MAElF05B,EAAKK,IAAM,SAAUI,GAEjB,IADA,IAAIC,EAAM,GACD3/B,EAAI,EAAGA,EAAI0/B,EAAO1/B,IAEvB2/B,IAA+B,OAArB,EAAI5oB,KAAK6oB,UAAuB,GAAG7hB,SAAS,IAAIc,UAAU,GAExE,OAAO8gB,GAEXV,EAAK9M,UAAUuF,OAAS,SAAUC,GAG9B,OAAOsH,EAAKG,OAAOzH,IAAUt3B,KAAKI,QAAUk3B,EAAM5Z,YAEtDkhB,EAAK9M,UAAU0N,QAAU,WACrB,OAAOx/B,KAAKI,QAAUw+B,EAAKE,OAE/BF,EAAK9M,UAAUpU,SAAW,WACtB,OAAO1d,KAAKI,OAEhBw+B,EAAK9M,UAAU2N,OAAS,WACpB,MAAO,CACHr/B,MAAOJ,KAAKI,QAGpBw+B,EAAKI,UAAY,IAAIzgB,OAAO,iEAAkE,KAC9FqgB,EAAKE,MAAQ,uCACNF,EApDc,GAsDzBlgC,EAAQkgC,KAAOA,G,iBCxDfjgC,EAAOD,QAAUs4B,EAKjB,IAAI/2B,EAAO,KAEX,IACEA,EAAO,IAAIgL,YAAYy0B,SAAS,IAAIz0B,YAAY00B,OAAO,IAAI7+B,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,IAAIpC,QACT,MAAOsG,IAcT,SAASgyB,EAAKC,EAAKC,EAAM0I,GAMrB5/B,KAAKi3B,IAAY,EAANA,EAMXj3B,KAAKk3B,KAAc,EAAPA,EAMZl3B,KAAK4/B,WAAaA,EAoCtB,SAASC,EAAOjF,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,YAXnC5D,EAAKlF,UAAUgO,WAEf18B,OAAO28B,eAAe/I,EAAKlF,UAAW,aAAc,CAAE1xB,OAAO,IAkB7D42B,EAAK6I,OAASA,EAOd,IAAIG,EAAY,GAOZC,EAAa,GAQjB,SAASC,EAAQ9/B,EAAOw/B,GACpB,IAAIhF,EAAKuF,EAAWC,EACpB,OAAIR,GAEIQ,EAAS,IADbhgC,KAAW,IACgBA,EAAQ,OAC/B+/B,EAAYF,EAAW7/B,IAEZ+/B,GAEfvF,EAAMyF,EAASjgC,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5CggC,IACAH,EAAW7/B,GAASw6B,GACjBA,IAGHwF,GAAU,MADdhgC,GAAS,IACqBA,EAAQ,OAClC+/B,EAAYH,EAAU5/B,IAEX+/B,GAEfvF,EAAMyF,EAASjgC,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtCggC,IACAJ,EAAU5/B,GAASw6B,GAChBA,GAmBf,SAAS0F,EAAWlgC,EAAOw/B,GACvB,GAAIxM,MAAMhzB,GACN,OAAOw/B,EAAWW,EAAQpJ,EAC9B,GAAIyI,EAAU,CACV,GAAIx/B,EAAQ,EACR,OAAOmgC,EACX,GAAIngC,GAASogC,EACT,OAAOC,MACR,CACH,GAAIrgC,IAAUsgC,EACV,OAAOC,EACX,GAAIvgC,EAAQ,GAAKsgC,EACb,OAAOE,EAEf,OAAIxgC,EAAQ,EACDkgC,GAAYlgC,EAAOw/B,GAAUiB,MACjCR,EAAUjgC,EAAQ0gC,EAAkB,EAAI1gC,EAAQ0gC,EAAkB,EAAGlB,GAmBhF,SAASS,EAASU,EAASC,EAAUpB,GACjC,OAAO,IAAI5I,EAAK+J,EAASC,EAAUpB,GA5CvC5I,EAAKkJ,QAAUA,EAkCflJ,EAAKsJ,WAAaA,EAsBlBtJ,EAAKqJ,SAAWA,EAShB,IAAIY,EAAUvqB,KAAK+c,IASnB,SAASyN,EAAWC,EAAKvB,EAAUwB,GAC/B,GAAmB,IAAfD,EAAIvhC,OACJ,MAAMF,MAAM,gBAChB,GAAY,QAARyhC,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOhK,EASX,GARwB,iBAAbyI,GAEPwB,EAAQxB,EACRA,GAAW,GAEXA,IAAcA,GAElBwB,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM3+B,WAAW,SAErB,IAAIuE,EACJ,IAAKA,EAAIm6B,EAAI9gC,QAAQ,MAAQ,EACzB,MAAMX,MAAM,mBACX,GAAU,IAANsH,EACL,OAAOk6B,EAAWC,EAAI3iB,UAAU,GAAIohB,EAAUwB,GAAOP,MAQzD,IAHA,IAAIQ,EAAef,EAAWW,EAAQG,EAAO,IAEzCrD,EAAS5G,EACJx3B,EAAI,EAAGA,EAAIwhC,EAAIvhC,OAAQD,GAAK,EAAG,CACpC,IAAI0C,EAAOqU,KAAKqJ,IAAI,EAAGohB,EAAIvhC,OAASD,GAChCS,EAAQkhC,SAASH,EAAI3iB,UAAU7e,EAAGA,EAAI0C,GAAO++B,GACjD,GAAI/+B,EAAO,EAAG,CACV,IAAIk/B,EAAQjB,EAAWW,EAAQG,EAAO/+B,IACtC07B,EAASA,EAAOyD,IAAID,GAAOnd,IAAIkc,EAAWlgC,SAG1C29B,GADAA,EAASA,EAAOyD,IAAIH,IACJjd,IAAIkc,EAAWlgC,IAIvC,OADA29B,EAAO6B,SAAWA,EACX7B,EAoBX,SAAS0D,EAAUlP,EAAKqN,GACpB,MAAmB,iBAARrN,EACA+N,EAAW/N,EAAKqN,GACR,iBAARrN,EACA2O,EAAW3O,EAAKqN,GAEpBS,EAAS9N,EAAI0E,IAAK1E,EAAI2E,KAA0B,kBAAb0I,EAAyBA,EAAWrN,EAAIqN,UAftF5I,EAAKkK,WAAaA,EAyBlBlK,EAAKyK,UAAYA,EAUjB,IAcIX,EAAiBY,WAOjBlB,EAAiBM,EAAiBA,EAOlCJ,EAAiBF,EAAiB,EAOlCmB,EAAazB,EA5BI,GAAK,IAkCtB/I,EAAO+I,EAAQ,GAMnBlJ,EAAKG,KAAOA,EAMZ,IAAIoJ,EAAQL,EAAQ,GAAG,GAMvBlJ,EAAKuJ,MAAQA,EAMb,IAAIqB,EAAM1B,EAAQ,GAMlBlJ,EAAK4K,IAAMA,EAMX,IAAIC,EAAO3B,EAAQ,GAAG,GAMtBlJ,EAAK6K,KAAOA,EAMZ,IAAIC,EAAU5B,GAAS,GAMvBlJ,EAAK8K,QAAUA,EAMf,IAAIlB,EAAYP,GAAS,EAAc,YAAc,GAMrDrJ,EAAK4J,UAAYA,EAMjB,IAAIH,EAAqBJ,GAAS,GAAc,GAAc,GAM9DrJ,EAAKyJ,mBAAqBA,EAM1B,IAAIE,EAAYN,EAAS,GAAG,YAAc,GAM1CrJ,EAAK2J,UAAYA,EAMjB,IAAIoB,EAAgB/K,EAAKlF,UAMzBiQ,EAAcC,MAAQ,WAClB,OAAOhiC,KAAK4/B,SAAW5/B,KAAKi3B,MAAQ,EAAIj3B,KAAKi3B,KAOjD8K,EAAcE,SAAW,WACrB,OAAIjiC,KAAK4/B,UACI5/B,KAAKk3B,OAAS,GAAK4J,GAAmB9gC,KAAKi3B,MAAQ,GACzDj3B,KAAKk3B,KAAO4J,GAAkB9gC,KAAKi3B,MAAQ,IAUtD8K,EAAcrkB,SAAW,SAAkB0jB,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM3+B,WAAW,SACrB,GAAIzC,KAAKkiC,SACL,MAAO,IACX,GAAIliC,KAAKmiC,aAAc,CACnB,GAAIniC,KAAKoiC,GAAGzB,GAAY,CAGpB,IAAI0B,EAAY/B,EAAWc,GACvBkB,EAAMtiC,KAAKsiC,IAAID,GACfE,EAAOD,EAAId,IAAIa,GAAWG,IAAIxiC,MAClC,OAAOsiC,EAAI5kB,SAAS0jB,GAASmB,EAAKP,QAAQtkB,SAAS0jB,GAEnD,MAAO,IAAMphC,KAAK6gC,MAAMnjB,SAAS0jB,GAQzC,IAHA,IAAIC,EAAef,EAAWW,EAAQG,EAAO,GAAIphC,KAAK4/B,UAClD6C,EAAMziC,KACN+9B,EAAS,KACA,CACT,IAAI2E,EAASD,EAAIH,IAAIjB,GAEjBsB,GADSF,EAAID,IAAIE,EAAOlB,IAAIH,IAAeW,UAAY,GACvCtkB,SAAS0jB,GAE7B,IADAqB,EAAMC,GACER,SACJ,OAAOS,EAAS5E,EAEhB,KAAO4E,EAAO/iC,OAAS,GACnB+iC,EAAS,IAAMA,EACnB5E,EAAS,GAAK4E,EAAS5E,IASnCgE,EAAca,YAAc,WACxB,OAAO5iC,KAAKk3B,MAOhB6K,EAAcc,oBAAsB,WAChC,OAAO7iC,KAAKk3B,OAAS,GAOzB6K,EAAce,WAAa,WACvB,OAAO9iC,KAAKi3B,KAOhB8K,EAAcgB,mBAAqB,WAC/B,OAAO/iC,KAAKi3B,MAAQ,GAOxB8K,EAAciB,cAAgB,WAC1B,GAAIhjC,KAAKmiC,aACL,OAAOniC,KAAKoiC,GAAGzB,GAAa,GAAK3gC,KAAK6gC,MAAMmC,gBAEhD,IADA,IAAIzQ,EAAmB,GAAbvyB,KAAKk3B,KAAYl3B,KAAKk3B,KAAOl3B,KAAKi3B,IACnCgM,EAAM,GAAIA,EAAM,GACK,IAArB1Q,EAAO,GAAK0Q,GADOA,KAG5B,OAAoB,GAAbjjC,KAAKk3B,KAAY+L,EAAM,GAAKA,EAAM,GAO7ClB,EAAcG,OAAS,WACnB,OAAqB,IAAdliC,KAAKk3B,MAA2B,IAAbl3B,KAAKi3B,KAOnC8K,EAAcmB,IAAMnB,EAAcG,OAMlCH,EAAcI,WAAa,WACvB,OAAQniC,KAAK4/B,UAAY5/B,KAAKk3B,KAAO,GAOzC6K,EAAcoB,WAAa,WACvB,OAAOnjC,KAAK4/B,UAAY5/B,KAAKk3B,MAAQ,GAOzC6K,EAAcqB,MAAQ,WAClB,OAA0B,IAAP,EAAXpjC,KAAKi3B,MAOjB8K,EAAcsB,OAAS,WACnB,OAA0B,IAAP,EAAXrjC,KAAKi3B,MAQjB8K,EAAc1K,OAAS,SAAgBC,GAGnC,OAFKuI,EAAOvI,KACRA,EAAQmK,EAAUnK,KAClBt3B,KAAK4/B,WAAatI,EAAMsI,UAAa5/B,KAAKk3B,OAAS,IAAQ,GAAMI,EAAMJ,OAAS,IAAQ,IAErFl3B,KAAKk3B,OAASI,EAAMJ,MAAQl3B,KAAKi3B,MAAQK,EAAML,KAS1D8K,EAAcK,GAAKL,EAAc1K,OAOjC0K,EAAcuB,UAAY,SAAmBhM,GACzC,OAAQt3B,KAAKoiC,GAAmB9K,IASpCyK,EAAcwB,IAAMxB,EAAcuB,UAQlCvB,EAAcz0B,GAAKy0B,EAAcuB,UAOjCvB,EAAcyB,SAAW,SAAkBlM,GACvC,OAAOt3B,KAAKyjC,KAAqBnM,GAAS,GAS9CyK,EAActnB,GAAKsnB,EAAcyB,SAOjCzB,EAAc2B,gBAAkB,SAAyBpM,GACrD,OAAOt3B,KAAKyjC,KAAqBnM,IAAU,GAS/CyK,EAAc4B,IAAM5B,EAAc2B,gBAQlC3B,EAAcn5B,GAAKm5B,EAAc2B,gBAOjC3B,EAAc6B,YAAc,SAAqBtM,GAC7C,OAAOt3B,KAAKyjC,KAAqBnM,GAAS,GAS9CyK,EAAchnB,GAAKgnB,EAAc6B,YAOjC7B,EAAc8B,mBAAqB,SAA4BvM,GAC3D,OAAOt3B,KAAKyjC,KAAqBnM,IAAU,GAS/CyK,EAAc+B,IAAM/B,EAAc8B,mBAQlC9B,EAAc5yB,GAAK4yB,EAAc8B,mBAQjC9B,EAAcgC,QAAU,SAAiBzM,GAGrC,GAFKuI,EAAOvI,KACRA,EAAQmK,EAAUnK,IAClBt3B,KAAKoiC,GAAG9K,GACR,OAAO,EACX,IAAI0M,EAAUhkC,KAAKmiC,aACf8B,EAAW3M,EAAM6K,aACrB,OAAI6B,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENjkC,KAAK4/B,SAGFtI,EAAMJ,OAAS,EAAMl3B,KAAKk3B,OAAS,GAAOI,EAAMJ,OAASl3B,KAAKk3B,MAASI,EAAML,MAAQ,EAAMj3B,KAAKi3B,MAAQ,GAAO,EAAI,EAFhHj3B,KAAKwiC,IAAIlL,GAAO6K,cAAgB,EAAI,GAYnDJ,EAAc0B,KAAO1B,EAAcgC,QAMnChC,EAAcmC,OAAS,WACnB,OAAKlkC,KAAK4/B,UAAY5/B,KAAKoiC,GAAGzB,GACnBA,EACJ3gC,KAAKmkC,MAAM/f,IAAIwd,IAQ1BG,EAAclB,IAAMkB,EAAcmC,OAOlCnC,EAAc3d,IAAM,SAAaggB,GACxBvE,EAAOuE,KACRA,EAAS3C,EAAU2C,IAIvB,IAAIC,EAAMrkC,KAAKk3B,OAAS,GACpBoN,EAAkB,MAAZtkC,KAAKk3B,KACXqN,EAAMvkC,KAAKi3B,MAAQ,GACnBuN,EAAiB,MAAXxkC,KAAKi3B,IAEXwN,EAAML,EAAOlN,OAAS,GACtBwN,EAAoB,MAAdN,EAAOlN,KACbyN,EAAMP,EAAOnN,MAAQ,GAGrB2N,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAOnN,QAIF,GAGf4N,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAENpE,GANPyE,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C7kC,KAAK4/B,WAQ/DmC,EAAciD,SAAW,SAAkBC,GAGvC,OAFKpF,EAAOoF,KACRA,EAAaxD,EAAUwD,IACpBjlC,KAAKokB,IAAI6gB,EAAWpE,QAS/BkB,EAAcS,IAAMT,EAAciD,SAOlCjD,EAAcmD,SAAW,SAAkBC,GACvC,GAAInlC,KAAKkiC,SACL,OAAO/K,EAKX,GAJK0I,EAAOsF,KACRA,EAAa1D,EAAU0D,IAGvBllC,EAKA,OAAOogC,EAJGpgC,EAAKuhC,IAAIxhC,KAAKi3B,IACLj3B,KAAKk3B,KACLiO,EAAWlO,IACXkO,EAAWjO,MACTj3B,EAAKmlC,WAAYplC,KAAK4/B,UAG/C,GAAIuF,EAAWjD,SACX,OAAO/K,EACX,GAAIn3B,KAAKoiC,GAAGzB,GACR,OAAOwE,EAAW/B,QAAUzC,EAAYxJ,EAC5C,GAAIgO,EAAW/C,GAAGzB,GACd,OAAO3gC,KAAKojC,QAAUzC,EAAYxJ,EAEtC,GAAIn3B,KAAKmiC,aACL,OAAIgD,EAAWhD,aACJniC,KAAK6gC,MAAMW,IAAI2D,EAAWtE,OAE1B7gC,KAAK6gC,MAAMW,IAAI2D,GAAYtE,MACnC,GAAIsE,EAAWhD,aAClB,OAAOniC,KAAKwhC,IAAI2D,EAAWtE,OAAOA,MAGtC,GAAI7gC,KAAKya,GAAGknB,IAAewD,EAAW1qB,GAAGknB,GACrC,OAAOrB,EAAWtgC,KAAKiiC,WAAakD,EAAWlD,WAAYjiC,KAAK4/B,UAKpE,IAAIyE,EAAMrkC,KAAKk3B,OAAS,GACpBoN,EAAkB,MAAZtkC,KAAKk3B,KACXqN,EAAMvkC,KAAKi3B,MAAQ,GACnBuN,EAAiB,MAAXxkC,KAAKi3B,IAEXwN,EAAMU,EAAWjO,OAAS,GAC1BwN,EAAwB,MAAlBS,EAAWjO,KACjByN,EAAMQ,EAAWlO,MAAQ,GACzBoO,EAAuB,MAAjBF,EAAWlO,IAEjB2N,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMa,KACE,GAGfR,IADAC,GAAOP,EAAMc,KACE,GACfP,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMe,KACE,GACfR,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMgB,EAAMf,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1CpE,GAZPyE,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+C7kC,KAAK4/B,WAS/DmC,EAAcP,IAAMO,EAAcmD,SAQlCnD,EAAcuD,OAAS,SAAgBC,GAGnC,GAFK1F,EAAO0F,KACRA,EAAU9D,EAAU8D,IACpBA,EAAQrD,SACR,MAAMxiC,MAAM,oBAaZ,IAWA8lC,EAAQ/C,EAAKgD,EArBjB,GAAIxlC,EAIA,OAAKD,KAAK4/B,WACS,aAAf5/B,KAAKk3B,OACY,IAAjBqO,EAAQtO,MAAgC,IAAlBsO,EAAQrO,KAU3BmJ,GANIrgC,KAAK4/B,SAAW3/B,EAAKylC,MAAQzlC,EAAK0lC,OACzC3lC,KAAKi3B,IACLj3B,KAAKk3B,KACLqO,EAAQtO,IACRsO,EAAQrO,MAESj3B,EAAKmlC,WAAYplC,KAAK4/B,UARhC5/B,KAWf,GAAIA,KAAKkiC,SACL,OAAOliC,KAAK4/B,SAAWW,EAAQpJ,EAEnC,GAAKn3B,KAAK4/B,SA6BH,CAKH,GAFK2F,EAAQ3F,WACT2F,EAAUA,EAAQK,cAClBL,EAAQxqB,GAAG/a,MACX,OAAOugC,EACX,GAAIgF,EAAQxqB,GAAG/a,KAAK6lC,KAAK,IACrB,OAAOhE,EACX4D,EAAMlF,MAtCU,CAGhB,GAAIvgC,KAAKoiC,GAAGzB,GACR,OAAI4E,EAAQnD,GAAGR,IAAQ2D,EAAQnD,GAAGN,GACvBnB,EACF4E,EAAQnD,GAAGzB,GACTiB,GAIP4D,EADexlC,KAAK8lC,IAAI,GACNxD,IAAIiD,GAASQ,IAAI,IACxB3D,GAAGjL,GACHoO,EAAQpD,aAAeP,EAAME,GAEpCW,EAAMziC,KAAKwiC,IAAI+C,EAAQ/D,IAAIgE,IAC3BC,EAAMD,EAAOphB,IAAIqe,EAAIH,IAAIiD,KAI9B,GAAIA,EAAQnD,GAAGzB,GAClB,OAAO3gC,KAAK4/B,SAAWW,EAAQpJ,EACnC,GAAIn3B,KAAKmiC,aACL,OAAIoD,EAAQpD,aACDniC,KAAK6gC,MAAMyB,IAAIiD,EAAQ1E,OAC3B7gC,KAAK6gC,MAAMyB,IAAIiD,GAAS1E,MAC5B,GAAI0E,EAAQpD,aACf,OAAOniC,KAAKsiC,IAAIiD,EAAQ1E,OAAOA,MACnC4E,EAAMtO,EAmBV,IADAsL,EAAMziC,KACCyiC,EAAIqB,IAAIyB,IAAU,CAGrBC,EAAS9uB,KAAKgG,IAAI,EAAGhG,KAAK6c,MAAMkP,EAAIR,WAAasD,EAAQtD,aAWzD,IAPA,IAAI+D,EAAOtvB,KAAKC,KAAKD,KAAKnM,IAAIi7B,GAAU9uB,KAAK8c,KACzCyS,EAASD,GAAQ,GAAM,EAAI/E,EAAQ,EAAG+E,EAAO,IAI7CE,EAAY5F,EAAWkF,GACvBW,EAAYD,EAAU1E,IAAI+D,GACvBY,EAAUhE,cAAgBgE,EAAUprB,GAAG0nB,IAG1C0D,GADAD,EAAY5F,EADZkF,GAAUS,EACqBjmC,KAAK4/B,WACd4B,IAAI+D,GAK1BW,EAAUhE,WACVgE,EAAYtE,GAEhB6D,EAAMA,EAAIrhB,IAAI8hB,GACdzD,EAAMA,EAAID,IAAI2D,GAElB,OAAOV,GASX1D,EAAcO,IAAMP,EAAcuD,OAOlCvD,EAAcqE,OAAS,SAAgBb,GAKnC,OAJK1F,EAAO0F,KACRA,EAAU9D,EAAU8D,IAGpBtlC,EAOOogC,GANIrgC,KAAK4/B,SAAW3/B,EAAKomC,MAAQpmC,EAAKqmC,OACzCtmC,KAAKi3B,IACLj3B,KAAKk3B,KACLqO,EAAQtO,IACRsO,EAAQrO,MAESj3B,EAAKmlC,WAAYplC,KAAK4/B,UAGxC5/B,KAAKwiC,IAAIxiC,KAAKsiC,IAAIiD,GAAS/D,IAAI+D,KAS1CxD,EAAc1M,IAAM0M,EAAcqE,OAQlCrE,EAAcU,IAAMV,EAAcqE,OAMlCrE,EAAcoC,IAAM,WAChB,OAAO9D,GAAUrgC,KAAKi3B,KAAMj3B,KAAKk3B,KAAMl3B,KAAK4/B,WAQhDmC,EAAcwE,IAAM,SAAajP,GAG7B,OAFKuI,EAAOvI,KACRA,EAAQmK,EAAUnK,IACf+I,EAASrgC,KAAKi3B,IAAMK,EAAML,IAAKj3B,KAAKk3B,KAAOI,EAAMJ,KAAMl3B,KAAK4/B,WAQvEmC,EAAcyE,GAAK,SAAYlP,GAG3B,OAFKuI,EAAOvI,KACRA,EAAQmK,EAAUnK,IACf+I,EAASrgC,KAAKi3B,IAAMK,EAAML,IAAKj3B,KAAKk3B,KAAOI,EAAMJ,KAAMl3B,KAAK4/B,WAQvEmC,EAAc0E,IAAM,SAAanP,GAG7B,OAFKuI,EAAOvI,KACRA,EAAQmK,EAAUnK,IACf+I,EAASrgC,KAAKi3B,IAAMK,EAAML,IAAKj3B,KAAKk3B,KAAOI,EAAMJ,KAAMl3B,KAAK4/B,WAQvEmC,EAAc2E,UAAY,SAAmBC,GAGzC,OAFI9G,EAAO8G,KACPA,EAAUA,EAAQ3E,SACE,IAAnB2E,GAAW,IACL3mC,KACF2mC,EAAU,GACRtG,EAASrgC,KAAKi3B,KAAO0P,EAAU3mC,KAAKk3B,MAAQyP,EAAY3mC,KAAKi3B,MAAS,GAAK0P,EAAW3mC,KAAK4/B,UAE3FS,EAAS,EAAGrgC,KAAKi3B,KAAQ0P,EAAU,GAAK3mC,KAAK4/B,WAS5DmC,EAAcgE,IAAMhE,EAAc2E,UAOlC3E,EAAc6E,WAAa,SAAoBD,GAG3C,OAFI9G,EAAO8G,KACPA,EAAUA,EAAQ3E,SACE,IAAnB2E,GAAW,IACL3mC,KACF2mC,EAAU,GACRtG,EAAUrgC,KAAKi3B,MAAQ0P,EAAY3mC,KAAKk3B,MAAS,GAAKyP,EAAW3mC,KAAKk3B,MAAQyP,EAAS3mC,KAAK4/B,UAE5FS,EAASrgC,KAAKk3B,MAASyP,EAAU,GAAK3mC,KAAKk3B,MAAQ,EAAI,GAAK,EAAGl3B,KAAK4/B,WASnFmC,EAAc+D,IAAM/D,EAAc6E,WAOlC7E,EAAc8E,mBAAqB,SAA4BF,GAI3D,GAHI9G,EAAO8G,KACPA,EAAUA,EAAQ3E,SAEN,IADhB2E,GAAW,IAEP,OAAO3mC,KAEP,IAAIk3B,EAAOl3B,KAAKk3B,KAChB,OAAIyP,EAAU,GAEHtG,EADGrgC,KAAKi3B,MACU0P,EAAYzP,GAAS,GAAKyP,EAAWzP,IAASyP,EAAS3mC,KAAK4/B,UAE9ES,EADY,KAAZsG,EACSzP,EAEAA,IAAUyP,EAAU,GAFd,EAAG3mC,KAAK4/B,WAY1CmC,EAAc8D,KAAO9D,EAAc8E,mBAQnC9E,EAAc+E,MAAQ/E,EAAc8E,mBAMpC9E,EAAcgF,SAAW,WACrB,OAAK/mC,KAAK4/B,SAEHS,EAASrgC,KAAKi3B,IAAKj3B,KAAKk3B,MAAM,GAD1Bl3B,MAQf+hC,EAAc6D,WAAa,WACvB,OAAI5lC,KAAK4/B,SACE5/B,KACJqgC,EAASrgC,KAAKi3B,IAAKj3B,KAAKk3B,MAAM,IAQzC6K,EAAciF,QAAU,SAAiBp+B,GACrC,OAAOA,EAAK5I,KAAKinC,YAAcjnC,KAAKknC,aAOxCnF,EAAckF,UAAY,WACtB,IAAI/R,EAAKl1B,KAAKk3B,KACVjC,EAAKj1B,KAAKi3B,IACd,MAAO,CACS,IAAZhC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,KAQf6M,EAAcmF,UAAY,WACtB,IAAIhS,EAAKl1B,KAAKk3B,KACVjC,EAAKj1B,KAAKi3B,IACd,MAAO,CACH/B,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,IAWR+B,EAAKmQ,UAAY,SAAmBzO,EAAOkH,EAAUh3B,GACjD,OAAOA,EAAKouB,EAAKoQ,YAAY1O,EAAOkH,GAAY5I,EAAKqQ,YAAY3O,EAAOkH,IAS5E5I,EAAKoQ,YAAc,SAAqB1O,EAAOkH,GAC3C,OAAO,IAAI5I,EACP0B,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZkH,IAUR5I,EAAKqQ,YAAc,SAAqB3O,EAAOkH,GAC3C,OAAO,IAAI5I,EACP0B,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNkH,K,kCCryCR,IA6BY0H,EAAiBC,EAdrBC,EAfJC,EAAY,EAAQ,MAGpBC,EAAUD,EAAUE,OAAQC,EAAUH,EAAUI,OAAQC,EAAQL,EAAUM,KAG1EC,EAAQP,EAAUQ,MAAe,UAAMR,EAAUQ,MAAe,QAAI,IAExED,EAAMR,OAOEA,EAAO,IAaNU,SACGZ,EAAa,IAAIC,EAASnkC,OAAOyb,OAAOyoB,IACrCA,EAAW,GAAK,kBAAoB,EAC3CC,EAAOD,EAAW,GAAK,yBAA2B,EAClDC,EAAOD,EAAW,GAAK,yBAA2B,EAClDC,EAAOD,EAAW,GAAK,wBAA0B,EACjDC,EAAOD,EAAW,GAAK,wBAA0B,EACjDC,EAAOD,EAAW,GAAK,cAAgB,EAChCC,GAGXC,EAAKW,eAAiB,WA8BlB,SAASA,EAAeC,GAMpB,GALApoC,KAAKqoC,OAAS,GACdroC,KAAKsoC,KAAO,GACZtoC,KAAKuoC,QAAU,GACfvoC,KAAKwoC,QAAU,GACfxoC,KAAKyoC,OAAS,GACVL,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAoqBhD,OA3pBAwoC,EAAerW,UAAU5yB,KAAO,GAQhCipC,EAAerW,UAAU4W,YAAc,GAQvCP,EAAerW,UAAU6W,UAAY,GAQrCR,EAAerW,UAAUnwB,KAAO,EAQhCwmC,EAAerW,UAAUjrB,EAAI,EAQ7BshC,EAAerW,UAAUnyB,EAAImoC,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAQ3E8H,EAAerW,UAAUprB,EAAIohC,EAAMc,UAAU,IAQ7CT,EAAerW,UAAUpsB,EAAI,KAQ7ByiC,EAAerW,UAAU1qB,EAAI,KAQ7B+gC,EAAerW,UAAUuW,OAASP,EAAMe,WAQxCV,EAAerW,UAAUwW,KAAOR,EAAMe,WAQtCV,EAAerW,UAAUyW,QAAUT,EAAMe,WAQzCV,EAAerW,UAAU0W,QAAUV,EAAMe,WAQzCV,EAAerW,UAAU2W,OAASX,EAAMe,WAUxCV,EAAetpB,OAAS,SAAgBupB,GACpC,OAAO,IAAID,EAAeC,IAY9BD,EAAe9W,OAAS,SAAgBne,EAAS41B,GAe7C,GAdKA,IACDA,EAASlB,EAAQ/oB,UACD,MAAhB3L,EAAQhU,MAAgBgU,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQhU,MAC3C,MAAbgU,EAAQrM,GAAaqM,EAAQtP,eAAe,MAC5CklC,EAAOC,OAA8B,IAAIC,MAAM91B,EAAQrM,GAC1C,MAAbqM,EAAQvT,GAAauT,EAAQtP,eAAe,MAC5CklC,EAAOC,OAA8B,IAAIE,MAAM/1B,EAAQvT,GAC1C,MAAbuT,EAAQxM,GAAawM,EAAQtP,eAAe,MAC5CklC,EAAOC,OAA8B,IAAIrQ,MAAMxlB,EAAQxM,GAC1C,MAAbwM,EAAQxN,GAAawN,EAAQtP,eAAe,MAC5CokC,EAAMR,KAAK0B,YAAY7X,OAAOne,EAAQxN,EAAGojC,EAAOC,OAA8B,IAAII,QAAQC,SAC7E,MAAbl2B,EAAQ9L,GAAa8L,EAAQtP,eAAe,MAC5CokC,EAAMR,KAAK6B,WAAWhY,OAAOne,EAAQ9L,EAAG0hC,EAAOC,OAA8B,IAAII,QAAQC,SACvE,MAAlBl2B,EAAQm1B,QAAkBn1B,EAAQm1B,OAAOzoC,OAAQ,CACjDkpC,EAAOC,OAA8B,IAAII,OACzC,IAAK,IAAIxpC,EAAI,EAAGA,EAAIuT,EAAQm1B,OAAOzoC,SAAUD,EACzCmpC,EAAOE,MAAM91B,EAAQm1B,OAAO1oC,IAChCmpC,EAAOM,SAEX,GAAoB,MAAhBl2B,EAAQo1B,MAAgBp1B,EAAQo1B,KAAK1oC,OAAQ,CAE7C,IADAkpC,EAAOC,OAA8B,IAAII,OAChCxpC,EAAI,EAAGA,EAAIuT,EAAQo1B,KAAK1oC,SAAUD,EACvCmpC,EAAOG,MAAM/1B,EAAQo1B,KAAK3oC,IAC9BmpC,EAAOM,SAEX,GAAuB,MAAnBl2B,EAAQq1B,SAAmBr1B,EAAQq1B,QAAQ3oC,OAC3C,IAASD,EAAI,EAAGA,EAAIuT,EAAQq1B,QAAQ3oC,SAAUD,EAC1CmpC,EAAOC,OAA8B,IAAIrQ,MAAMxlB,EAAQq1B,QAAQ5oC,IACvE,GAAuB,MAAnBuT,EAAQs1B,SAAmBt1B,EAAQs1B,QAAQ5oC,OAC3C,IAASD,EAAI,EAAGA,EAAIuT,EAAQs1B,QAAQ5oC,SAAUD,EAC1CqoC,EAAMR,KAAK0B,YAAY7X,OAAOne,EAAQs1B,QAAQ7oC,GAAImpC,EAAOC,OAA+B,IAAII,QAAQC,SAC5G,GAAsB,MAAlBl2B,EAAQu1B,QAAkBv1B,EAAQu1B,OAAO7oC,OACzC,IAASD,EAAI,EAAGA,EAAIuT,EAAQu1B,OAAO7oC,SAAUD,EACzCqoC,EAAMR,KAAK6B,WAAWhY,OAAOne,EAAQu1B,OAAO9oC,GAAImpC,EAAOC,OAA+B,IAAII,QAAQC,SAO1G,OANyB,MAArBl2B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA+B,KAAK9X,OAAO/d,EAAQy1B,WAC1C,MAAhBz1B,EAAQvR,MAAgBuR,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA+B,KAAKnS,MAAM1jB,EAAQvR,MAClC,MAAvBuR,EAAQw1B,aAAuBx1B,EAAQtP,eAAe,gBACtDklC,EAAOC,OAA+B,KAAK9X,OAAO/d,EAAQw1B,aACvDI,GAYXX,EAAemB,gBAAkB,SAAyBp2B,EAAS41B,GAC/D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCjB,EAAe58B,OAAS,SAAgBg+B,EAAQ3pC,GACtC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKW,eACrFoB,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQhU,KAAOqqC,EAAOtY,SACtB,MACJ,KAAK,GACD/d,EAAQw1B,YAAca,EAAOtY,SAC7B,MACJ,KAAK,GACD/d,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,KAAK,GACD/d,EAAQvR,KAAO4nC,EAAO3S,QACtB,MACJ,KAAK,EACD1jB,EAAQrM,EAAI0iC,EAAOP,QACnB,MACJ,KAAK,EACD91B,EAAQvT,EAAI4pC,EAAON,QACnB,MACJ,KAAK,EACD/1B,EAAQxM,EAAI6iC,EAAO7Q,QACnB,MACJ,KAAK,EACDxlB,EAAQxN,EAAIsiC,EAAMR,KAAK0B,YAAY39B,OAAOg+B,EAAQA,EAAOR,UACzD,MACJ,KAAK,EACD71B,EAAQ9L,EAAI4gC,EAAMR,KAAK6B,WAAW99B,OAAOg+B,EAAQA,EAAOR,UACxD,MACJ,KAAK,EAGD,GAFM71B,EAAQm1B,QAAUn1B,EAAQm1B,OAAOzoC,SACnCsT,EAAQm1B,OAAS,IACH,IAAP,EAANmB,GAED,IADA,IAAIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQm1B,OAAOvoC,KAAKypC,EAAOP,cAE/B91B,EAAQm1B,OAAOvoC,KAAKypC,EAAOP,SAC/B,MACJ,KAAK,EAGD,GAFM91B,EAAQo1B,MAAQp1B,EAAQo1B,KAAK1oC,SAC/BsT,EAAQo1B,KAAO,IACD,IAAP,EAANkB,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQo1B,KAAKxoC,KAAKypC,EAAON,cAE7B/1B,EAAQo1B,KAAKxoC,KAAKypC,EAAON,SAC7B,MACJ,KAAK,EACK/1B,EAAQq1B,SAAWr1B,EAAQq1B,QAAQ3oC,SACrCsT,EAAQq1B,QAAU,IACtBr1B,EAAQq1B,QAAQzoC,KAAKypC,EAAO7Q,SAC5B,MACJ,KAAK,GACKxlB,EAAQs1B,SAAWt1B,EAAQs1B,QAAQ5oC,SACrCsT,EAAQs1B,QAAU,IACtBt1B,EAAQs1B,QAAQ1oC,KAAKkoC,EAAMR,KAAK0B,YAAY39B,OAAOg+B,EAAQA,EAAOR,WAClE,MACJ,KAAK,GACK71B,EAAQu1B,QAAUv1B,EAAQu1B,OAAO7oC,SACnCsT,EAAQu1B,OAAS,IACrBv1B,EAAQu1B,OAAO3oC,KAAKkoC,EAAMR,KAAK6B,WAAW99B,OAAOg+B,EAAQA,EAAOR,WAChE,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXi1B,EAAewB,gBAAkB,SAAyBJ,GAGtD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCZ,EAAeyB,OAAS,SAAgB12B,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC1CkkC,EAAM+B,SAAS32B,EAAQhU,MACxB,MAAO,wBACf,GAA2B,MAAvBgU,EAAQw1B,aAAuBx1B,EAAQtP,eAAe,iBACjDkkC,EAAM+B,SAAS32B,EAAQw1B,aACxB,MAAO,+BACf,GAAyB,MAArBx1B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACxB,MAAO,6BACf,GAAoB,MAAhBz1B,EAAQvR,MAAgBuR,EAAQtP,eAAe,QAC/C,OAAQsP,EAAQvR,MAChB,QACI,MAAO,4BACX,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,IAGT,GAAiB,MAAbuR,EAAQrM,GAAaqM,EAAQtP,eAAe,MACnB,iBAAdsP,EAAQrM,EACf,MAAO,qBACf,GAAiB,MAAbqM,EAAQvT,GAAauT,EAAQtP,eAAe,QACvCkkC,EAAMgC,UAAU52B,EAAQvT,IAAQuT,EAAQvT,GAAKmoC,EAAMgC,UAAU52B,EAAQvT,EAAEs3B,MAAQ6Q,EAAMgC,UAAU52B,EAAQvT,EAAEu3B,OAC1G,MAAO,2BACf,GAAiB,MAAbhkB,EAAQxM,GAAawM,EAAQtP,eAAe,QACtCsP,EAAQxM,GAAiC,iBAArBwM,EAAQxM,EAAE9G,QAAuBkoC,EAAM+B,SAAS32B,EAAQxM,IAC9E,MAAO,qBACf,GAAiB,MAAbwM,EAAQxN,GAAawN,EAAQtP,eAAe,OACxCwF,EAAQ4+B,EAAMR,KAAK0B,YAAYU,OAAO12B,EAAQxN,IAE9C,MAAO,KAAO0D,EAEtB,GAAiB,MAAb8J,EAAQ9L,GAAa8L,EAAQtP,eAAe,OACxCwF,EAAQ4+B,EAAMR,KAAK6B,WAAWO,OAAO12B,EAAQ9L,IAE7C,MAAO,KAAOgC,EAEtB,GAAsB,MAAlB8J,EAAQm1B,QAAkBn1B,EAAQtP,eAAe,UAAW,CAC5D,IAAK9B,MAAMC,QAAQmR,EAAQm1B,QACvB,MAAO,yBACX,IAAK,IAAI1oC,EAAI,EAAGA,EAAIuT,EAAQm1B,OAAOzoC,SAAUD,EACzC,GAAiC,iBAAtBuT,EAAQm1B,OAAO1oC,GACtB,MAAO,4BAEnB,GAAoB,MAAhBuT,EAAQo1B,MAAgBp1B,EAAQtP,eAAe,QAAS,CACxD,IAAK9B,MAAMC,QAAQmR,EAAQo1B,MACvB,MAAO,uBACX,IAAS3oC,EAAI,EAAGA,EAAIuT,EAAQo1B,KAAK1oC,SAAUD,EACvC,KAAKmoC,EAAMgC,UAAU52B,EAAQo1B,KAAK3oC,KAASuT,EAAQo1B,KAAK3oC,IAAMmoC,EAAMgC,UAAU52B,EAAQo1B,KAAK3oC,GAAGs3B,MAAQ6Q,EAAMgC,UAAU52B,EAAQo1B,KAAK3oC,GAAGu3B,OAClI,MAAO,gCAEnB,GAAuB,MAAnBhkB,EAAQq1B,SAAmBr1B,EAAQtP,eAAe,WAAY,CAC9D,IAAK9B,MAAMC,QAAQmR,EAAQq1B,SACvB,MAAO,0BACX,IAAS5oC,EAAI,EAAGA,EAAIuT,EAAQq1B,QAAQ3oC,SAAUD,EAC1C,KAAMuT,EAAQq1B,QAAQ5oC,IAA2C,iBAA9BuT,EAAQq1B,QAAQ5oC,GAAGC,QAAuBkoC,EAAM+B,SAAS32B,EAAQq1B,QAAQ5oC,KACxG,MAAO,6BAEnB,GAAuB,MAAnBuT,EAAQs1B,SAAmBt1B,EAAQtP,eAAe,WAAY,CAC9D,IAAK9B,MAAMC,QAAQmR,EAAQs1B,SACvB,MAAO,0BACX,IAAS7oC,EAAI,EAAGA,EAAIuT,EAAQs1B,QAAQ5oC,SAAUD,EAE1C,GADIyJ,EAAQ4+B,EAAMR,KAAK0B,YAAYU,OAAO12B,EAAQs1B,QAAQ7oC,IAEtD,MAAO,WAAayJ,EAGhC,GAAsB,MAAlB8J,EAAQu1B,QAAkBv1B,EAAQtP,eAAe,UAAW,CAC5D,IAAK9B,MAAMC,QAAQmR,EAAQu1B,QACvB,MAAO,yBACX,IAAS9oC,EAAI,EAAGA,EAAIuT,EAAQu1B,OAAO7oC,SAAUD,EAAG,CAC5C,IAAIyJ,EACJ,GADIA,EAAQ4+B,EAAMR,KAAK6B,WAAWO,OAAO12B,EAAQu1B,OAAO9oC,IAEpD,MAAO,UAAYyJ,GAG/B,OAAO,MAWX++B,EAAe4B,WAAa,SAAoBhrB,GAC5C,GAAIA,aAAkBipB,EAAMR,KAAKW,eAC7B,OAAOppB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKW,eAO7B,OANmB,MAAfppB,EAAO7f,OACPgU,EAAQhU,KAAOyM,OAAOoT,EAAO7f,OACP,MAAtB6f,EAAO2pB,cACPx1B,EAAQw1B,YAAc/8B,OAAOoT,EAAO2pB,cAChB,MAApB3pB,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAC9B5pB,EAAOpd,MACf,IAAK,YACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,MACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,QACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,SACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,OACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,UACL,KAAK,EACDuR,EAAQvR,KAAO,EACf,MACJ,IAAK,SACL,KAAK,GACDuR,EAAQvR,KAAO,GAmBnB,GAhBgB,MAAZod,EAAOlY,IACPqM,EAAQrM,EAAItE,OAAOwc,EAAOlY,IACd,MAAZkY,EAAOpf,IACHmoC,EAAM9Q,MACL9jB,EAAQvT,EAAImoC,EAAM9Q,KAAKyK,UAAU1iB,EAAOpf,IAAIigC,UAAW,EAC/B,iBAAb7gB,EAAOpf,EACnBuT,EAAQvT,EAAI2hC,SAASviB,EAAOpf,EAAG,IACN,iBAAbof,EAAOpf,EACnBuT,EAAQvT,EAAIof,EAAOpf,EACM,iBAAbof,EAAOpf,IACnBuT,EAAQvT,EAAI,IAAImoC,EAAMkC,SAASjrB,EAAOpf,EAAEs3B,MAAQ,EAAGlY,EAAOpf,EAAEu3B,OAAS,GAAG+K,aAChE,MAAZljB,EAAOrY,IACiB,iBAAbqY,EAAOrY,EACdohC,EAAM9W,OAAOzlB,OAAOwT,EAAOrY,EAAGwM,EAAQxM,EAAIohC,EAAMc,UAAUd,EAAM9W,OAAOpxB,OAAOmf,EAAOrY,IAAK,GACrFqY,EAAOrY,EAAE9G,SACdsT,EAAQxM,EAAIqY,EAAOrY,IACX,MAAZqY,EAAOrZ,EAAW,CAClB,GAAwB,iBAAbqZ,EAAOrZ,EACd,MAAMnG,UAAU,2CACpB2T,EAAQxN,EAAIsiC,EAAMR,KAAK0B,YAAYa,WAAWhrB,EAAOrZ,GAEzD,GAAgB,MAAZqZ,EAAO3X,EAAW,CAClB,GAAwB,iBAAb2X,EAAO3X,EACd,MAAM7H,UAAU,2CACpB2T,EAAQ9L,EAAI4gC,EAAMR,KAAK6B,WAAWU,WAAWhrB,EAAO3X,GAExD,GAAI2X,EAAOspB,OAAQ,CACf,IAAKvmC,MAAMC,QAAQgd,EAAOspB,QACtB,MAAM9oC,UAAU,+CACpB2T,EAAQm1B,OAAS,GACjB,IAAK,IAAI1oC,EAAI,EAAGA,EAAIof,EAAOspB,OAAOzoC,SAAUD,EACxCuT,EAAQm1B,OAAO1oC,GAAK4C,OAAOwc,EAAOspB,OAAO1oC,IAEjD,GAAIof,EAAOupB,KAAM,CACb,IAAKxmC,MAAMC,QAAQgd,EAAOupB,MACtB,MAAM/oC,UAAU,6CAEpB,IADA2T,EAAQo1B,KAAO,GACN3oC,EAAI,EAAGA,EAAIof,EAAOupB,KAAK1oC,SAAUD,EAClCmoC,EAAM9Q,MACL9jB,EAAQo1B,KAAK3oC,GAAKmoC,EAAM9Q,KAAKyK,UAAU1iB,EAAOupB,KAAK3oC,KAAKigC,UAAW,EACrC,iBAAnB7gB,EAAOupB,KAAK3oC,GACxBuT,EAAQo1B,KAAK3oC,GAAK2hC,SAASviB,EAAOupB,KAAK3oC,GAAI,IACZ,iBAAnBof,EAAOupB,KAAK3oC,GACxBuT,EAAQo1B,KAAK3oC,GAAKof,EAAOupB,KAAK3oC,GACC,iBAAnBof,EAAOupB,KAAK3oC,KACxBuT,EAAQo1B,KAAK3oC,GAAK,IAAImoC,EAAMkC,SAASjrB,EAAOupB,KAAK3oC,GAAGs3B,MAAQ,EAAGlY,EAAOupB,KAAK3oC,GAAGu3B,OAAS,GAAG+K,YAEtG,GAAIljB,EAAOwpB,QAAS,CAChB,IAAKzmC,MAAMC,QAAQgd,EAAOwpB,SACtB,MAAMhpC,UAAU,gDAEpB,IADA2T,EAAQq1B,QAAU,GACT5oC,EAAI,EAAGA,EAAIof,EAAOwpB,QAAQ3oC,SAAUD,EACR,iBAAtBof,EAAOwpB,QAAQ5oC,GACtBmoC,EAAM9W,OAAOzlB,OAAOwT,EAAOwpB,QAAQ5oC,GAAIuT,EAAQq1B,QAAQ5oC,GAAKmoC,EAAMc,UAAUd,EAAM9W,OAAOpxB,OAAOmf,EAAOwpB,QAAQ5oC,KAAM,GAChHof,EAAOwpB,QAAQ5oC,GAAGC,SACvBsT,EAAQq1B,QAAQ5oC,GAAKof,EAAOwpB,QAAQ5oC,IAEhD,GAAIof,EAAOypB,QAAS,CAChB,IAAK1mC,MAAMC,QAAQgd,EAAOypB,SACtB,MAAMjpC,UAAU,gDAEpB,IADA2T,EAAQs1B,QAAU,GACT7oC,EAAI,EAAGA,EAAIof,EAAOypB,QAAQ5oC,SAAUD,EAAG,CAC5C,GAAiC,iBAAtBof,EAAOypB,QAAQ7oC,GACtB,MAAMJ,UAAU,iDACpB2T,EAAQs1B,QAAQ7oC,GAAKqoC,EAAMR,KAAK0B,YAAYa,WAAWhrB,EAAOypB,QAAQ7oC,KAG9E,GAAIof,EAAO0pB,OAAQ,CACf,IAAK3mC,MAAMC,QAAQgd,EAAO0pB,QACtB,MAAMlpC,UAAU,+CAEpB,IADA2T,EAAQu1B,OAAS,GACR9oC,EAAI,EAAGA,EAAIof,EAAO0pB,OAAO7oC,SAAUD,EAAG,CAC3C,GAAgC,iBAArBof,EAAO0pB,OAAO9oC,GACrB,MAAMJ,UAAU,gDACpB2T,EAAQu1B,OAAO9oC,GAAKqoC,EAAMR,KAAK6B,WAAWU,WAAWhrB,EAAO0pB,OAAO9oC,KAG3E,OAAOuT,GAYXi1B,EAAe8B,SAAW,SAAkB/2B,EAASnQ,GAC5CA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAQb,IAPIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOspB,OAAS,GAChBtpB,EAAOupB,KAAO,GACdvpB,EAAOwpB,QAAU,GACjBxpB,EAAOypB,QAAU,GACjBzpB,EAAO0pB,OAAS,IAEhB1lC,EAAQonC,SAAU,CAGlB,GAFAprB,EAAO7f,KAAO,GACd6f,EAAOlY,EAAI,EACPihC,EAAM9Q,KAAM,CACZ,IAAIoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOpf,EAAIoD,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,OAErGrrB,EAAOpf,EAAIoD,EAAQsnC,QAAU1+B,OAAS,IAAM,EAC5C5I,EAAQ21B,QAAU/sB,OAClBoT,EAAOrY,EAAI,IAEXqY,EAAOrY,EAAI,GACP3D,EAAQ21B,QAAU52B,QAClBid,EAAOrY,EAAIohC,EAAMc,UAAU7pB,EAAOrY,KAE1CqY,EAAOrZ,EAAI,KACXqZ,EAAO3X,EAAI,KACX2X,EAAO4pB,UAAY,GACnB5pB,EAAOpd,KAAOoB,EAAQunC,QAAU3+B,OAAS,YAAc,EACvDoT,EAAO2pB,YAAc,GAiBzB,GAfoB,MAAhBx1B,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC/Cmb,EAAO7f,KAAOgU,EAAQhU,MACT,MAAbgU,EAAQrM,GAAaqM,EAAQtP,eAAe,OAC5Cmb,EAAOlY,EAAI9D,EAAQwnC,OAASC,SAASt3B,EAAQrM,GAAK8E,OAAOuH,EAAQrM,GAAKqM,EAAQrM,GACjE,MAAbqM,EAAQvT,GAAauT,EAAQtP,eAAe,OACnB,iBAAdsP,EAAQvT,EACfof,EAAOpf,EAAIoD,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQvT,GAAKuT,EAAQvT,EAElEof,EAAOpf,EAAIoD,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQvT,GAAKoD,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQvT,EAAEs3B,MAAQ,EAAG/jB,EAAQvT,EAAEu3B,OAAS,GAAG+K,WAAa/uB,EAAQvT,GAC3L,MAAbuT,EAAQxM,GAAawM,EAAQtP,eAAe,OAC5Cmb,EAAOrY,EAAI3D,EAAQ21B,QAAU/sB,OAASm8B,EAAM9W,OAAOK,OAAOne,EAAQxM,EAAG,EAAGwM,EAAQxM,EAAE9G,QAAUmD,EAAQ21B,QAAU52B,MAAQA,MAAMgwB,UAAUrpB,MAAM5E,KAAKqP,EAAQxM,GAAKwM,EAAQxM,GACzJ,MAAbwM,EAAQxN,GAAawN,EAAQtP,eAAe,OAC5Cmb,EAAOrZ,EAAIsiC,EAAMR,KAAK0B,YAAYe,SAAS/2B,EAAQxN,EAAG3C,IACzC,MAAbmQ,EAAQ9L,GAAa8L,EAAQtP,eAAe,OAC5Cmb,EAAO3X,EAAI4gC,EAAMR,KAAK6B,WAAWY,SAAS/2B,EAAQ9L,EAAGrE,IACrDmQ,EAAQm1B,QAAUn1B,EAAQm1B,OAAOzoC,OAAQ,CACzCmf,EAAOspB,OAAS,GAChB,IAAK,IAAIziC,EAAI,EAAGA,EAAIsN,EAAQm1B,OAAOzoC,SAAUgG,EACzCmZ,EAAOspB,OAAOziC,GAAK7C,EAAQwnC,OAASC,SAASt3B,EAAQm1B,OAAOziC,IAAM+F,OAAOuH,EAAQm1B,OAAOziC,IAAMsN,EAAQm1B,OAAOziC,GAErH,GAAIsN,EAAQo1B,MAAQp1B,EAAQo1B,KAAK1oC,OAE7B,IADAmf,EAAOupB,KAAO,GACL1iC,EAAI,EAAGA,EAAIsN,EAAQo1B,KAAK1oC,SAAUgG,EACR,iBAApBsN,EAAQo1B,KAAK1iC,GACpBmZ,EAAOupB,KAAK1iC,GAAK7C,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQo1B,KAAK1iC,IAAMsN,EAAQo1B,KAAK1iC,GAEnFmZ,EAAOupB,KAAK1iC,GAAK7C,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQo1B,KAAK1iC,IAAM7C,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQo1B,KAAK1iC,GAAGqxB,MAAQ,EAAG/jB,EAAQo1B,KAAK1iC,GAAGsxB,OAAS,GAAG+K,WAAa/uB,EAAQo1B,KAAK1iC,GAE7O,GAAIsN,EAAQq1B,SAAWr1B,EAAQq1B,QAAQ3oC,OAEnC,IADAmf,EAAOwpB,QAAU,GACR3iC,EAAI,EAAGA,EAAIsN,EAAQq1B,QAAQ3oC,SAAUgG,EAC1CmZ,EAAOwpB,QAAQ3iC,GAAK7C,EAAQ21B,QAAU/sB,OAASm8B,EAAM9W,OAAOK,OAAOne,EAAQq1B,QAAQ3iC,GAAI,EAAGsN,EAAQq1B,QAAQ3iC,GAAGhG,QAAUmD,EAAQ21B,QAAU52B,MAAQA,MAAMgwB,UAAUrpB,MAAM5E,KAAKqP,EAAQq1B,QAAQ3iC,IAAMsN,EAAQq1B,QAAQ3iC,GAE1N,GAAIsN,EAAQs1B,SAAWt1B,EAAQs1B,QAAQ5oC,OAEnC,IADAmf,EAAOypB,QAAU,GACR5iC,EAAI,EAAGA,EAAIsN,EAAQs1B,QAAQ5oC,SAAUgG,EAC1CmZ,EAAOypB,QAAQ5iC,GAAKoiC,EAAMR,KAAK0B,YAAYe,SAAS/2B,EAAQs1B,QAAQ5iC,GAAI7C,GAEhF,GAAImQ,EAAQu1B,QAAUv1B,EAAQu1B,OAAO7oC,OAEjC,IADAmf,EAAO0pB,OAAS,GACP7iC,EAAI,EAAGA,EAAIsN,EAAQu1B,OAAO7oC,SAAUgG,EACzCmZ,EAAO0pB,OAAO7iC,GAAKoiC,EAAMR,KAAK6B,WAAWY,SAAS/2B,EAAQu1B,OAAO7iC,GAAI7C,GAQ7E,OANyB,MAArBmQ,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WACX,MAAhBz1B,EAAQvR,MAAgBuR,EAAQtP,eAAe,UAC/Cmb,EAAOpd,KAAOoB,EAAQunC,QAAU3+B,OAASq8B,EAAMR,KAAKW,eAAesC,cAAcv3B,EAAQvR,MAAQuR,EAAQvR,MAClF,MAAvBuR,EAAQw1B,aAAuBx1B,EAAQtP,eAAe,iBACtDmb,EAAO2pB,YAAcx1B,EAAQw1B,aAC1B3pB,GAUXopB,EAAerW,UAAU2N,OAAS,WAC9B,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAmB1DvC,EAAesC,cAAgB,WAC3B,IAAInD,EAAa,GAAIC,EAASnkC,OAAOyb,OAAOyoB,GAY5C,OAXAC,EAAOD,EAAW,GAAK,aAAe,EACtCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,OAAS,EAChCC,EAAOD,EAAW,GAAK,UAAY,EACnCC,EAAOD,EAAW,GAAK,UAAY,EACnCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,UAAY,EACnCC,EAAOD,EAAW,GAAK,QAAU,EACjCC,EAAOD,EAAW,GAAK,WAAa,EACpCC,EAAOD,EAAW,GAAK,WAAa,EACpCC,EAAOD,EAAW,IAAM,UAAY,GAC7BC,EAboB,GAgBxBY,EA3sBW,GA8sBtBX,EAAKmD,eAAiB,WAmBlB,SAASA,EAAevC,GACpB,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAmNhD,OA1MAgrC,EAAe7Y,UAAU5yB,KAAO,GAQhCyrC,EAAe7Y,UAAUnwB,KAAO,KAQhCgpC,EAAe7Y,UAAU6W,UAAY,GAUrCgC,EAAe9rB,OAAS,SAAgBupB,GACpC,OAAO,IAAIuC,EAAevC,IAY9BuC,EAAetZ,OAAS,SAAgBne,EAAS41B,GAS7C,OARKA,IACDA,EAASlB,EAAQ/oB,UACD,MAAhB3L,EAAQhU,MAAgBgU,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQhU,MACxC,MAAhBgU,EAAQvR,MAAgBuR,EAAQtP,eAAe,SAC/CokC,EAAMR,KAAKoD,UAAUvZ,OAAOne,EAAQvR,KAAMmnC,EAAOC,OAA8B,IAAII,QAAQC,SACtE,MAArBl2B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQy1B,WACrDG,GAYX6B,EAAerB,gBAAkB,SAAyBp2B,EAAS41B,GAC/D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCuB,EAAep/B,OAAS,SAAgBg+B,EAAQ3pC,GACtC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKmD,eACrFpB,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQhU,KAAOqqC,EAAOtY,SACtB,MACJ,KAAK,EACD/d,EAAQvR,KAAOqmC,EAAMR,KAAKoD,UAAUr/B,OAAOg+B,EAAQA,EAAOR,UAC1D,MACJ,KAAK,EACD71B,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,QACIsY,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXy3B,EAAehB,gBAAkB,SAAyBJ,GAGtD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC4B,EAAef,OAAS,SAAgB12B,GACpC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC1CkkC,EAAM+B,SAAS32B,EAAQhU,MACxB,MAAO,wBACf,GAAoB,MAAhBgU,EAAQvR,MAAgBuR,EAAQtP,eAAe,QAAS,CACxD,IAAIwF,EAAQ4+B,EAAMR,KAAKoD,UAAUhB,OAAO12B,EAAQvR,MAChD,GAAIyH,EACA,MAAO,QAAUA,EAEzB,OAAyB,MAArB8J,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACjB,6BACR,MAWXgC,EAAeZ,WAAa,SAAoBhrB,GAC5C,GAAIA,aAAkBipB,EAAMR,KAAKmD,eAC7B,OAAO5rB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKmD,eAG7B,GAFmB,MAAf5rB,EAAO7f,OACPgU,EAAQhU,KAAOyM,OAAOoT,EAAO7f,OACd,MAAf6f,EAAOpd,KAAc,CACrB,GAA2B,iBAAhBod,EAAOpd,KACd,MAAMpC,UAAU,8CACpB2T,EAAQvR,KAAOqmC,EAAMR,KAAKoD,UAAUb,WAAWhrB,EAAOpd,MAI1D,OAFwB,MAApBod,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAC/Bz1B,GAYXy3B,EAAeV,SAAW,SAAkB/2B,EAASnQ,GAC5CA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAYb,OAXIhc,EAAQonC,WACRprB,EAAO7f,KAAO,GACd6f,EAAOpd,KAAO,KACdod,EAAO4pB,UAAY,IAEH,MAAhBz1B,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC/Cmb,EAAO7f,KAAOgU,EAAQhU,MACN,MAAhBgU,EAAQvR,MAAgBuR,EAAQtP,eAAe,UAC/Cmb,EAAOpd,KAAOqmC,EAAMR,KAAKoD,UAAUX,SAAS/2B,EAAQvR,KAAMoB,IACrC,MAArBmQ,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WACxB5pB,GAUX4rB,EAAe7Y,UAAU2N,OAAS,WAC9B,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDC,EA1OW,GA6OtBnD,EAAKqD,UAAY,WAuBb,SAASA,EAAUzC,GAIf,GAHApoC,KAAKmmB,MAAQ,GACbnmB,KAAK8qC,OAAS,GACd9qC,KAAK+qC,UAAY,GACb3C,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAsVhD,OA7UAkrC,EAAU/Y,UAAU3L,MAAQ2hB,EAAMe,WAQlCgC,EAAU/Y,UAAUgZ,OAAShD,EAAMe,WAQnCgC,EAAU/Y,UAAU5yB,KAAO,GAQ3B2rC,EAAU/Y,UAAUkZ,OAAS,GAQ7BH,EAAU/Y,UAAUmZ,OAAS,GAQ7BJ,EAAU/Y,UAAUiZ,UAAYjD,EAAMe,WAQtCgC,EAAU/Y,UAAU6W,UAAY,GAUhCkC,EAAUhsB,OAAS,SAAgBupB,GAC/B,OAAO,IAAIyC,EAAUzC,IAYzByC,EAAUxZ,OAAS,SAAgBne,EAAS41B,GAGxC,GAFKA,IACDA,EAASlB,EAAQ/oB,UACA,MAAjB3L,EAAQiT,OAAiBjT,EAAQiT,MAAMvmB,OACvC,IAAK,IAAID,EAAI,EAAGA,EAAIuT,EAAQiT,MAAMvmB,SAAUD,EACxCmpC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQiT,MAAMxmB,IACtE,GAAsB,MAAlBuT,EAAQ43B,QAAkB53B,EAAQ43B,OAAOlrC,OACzC,IAASD,EAAI,EAAGA,EAAIuT,EAAQ43B,OAAOlrC,SAAUD,EACzCmpC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ43B,OAAOnrC,IAKvE,GAJoB,MAAhBuT,EAAQhU,MAAgBgU,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQhU,MACtC,MAAlBgU,EAAQ83B,QAAkB93B,EAAQtP,eAAe,WACjDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ83B,QACnC,MAArB93B,EAAQ63B,WAAqB73B,EAAQ63B,UAAUnrC,OAC/C,IAASD,EAAI,EAAGA,EAAIuT,EAAQ63B,UAAUnrC,SAAUD,EAC5CqoC,EAAMR,KAAKW,eAAe9W,OAAOne,EAAQ63B,UAAUprC,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SAKhH,OAJyB,MAArBl2B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQy1B,WACtC,MAAlBz1B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,WACjDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ+3B,QACrDnC,GAYX+B,EAAUvB,gBAAkB,SAAyBp2B,EAAS41B,GAC1D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCyB,EAAUt/B,OAAS,SAAgBg+B,EAAQ3pC,GACjC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKqD,UACrFtB,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACKt2B,EAAQiT,OAASjT,EAAQiT,MAAMvmB,SACjCsT,EAAQiT,MAAQ,IACpBjT,EAAQiT,MAAMrmB,KAAKypC,EAAOtY,UAC1B,MACJ,KAAK,EACK/d,EAAQ43B,QAAU53B,EAAQ43B,OAAOlrC,SACnCsT,EAAQ43B,OAAS,IACrB53B,EAAQ43B,OAAOhrC,KAAKypC,EAAOtY,UAC3B,MACJ,KAAK,EACD/d,EAAQhU,KAAOqqC,EAAOtY,SACtB,MACJ,KAAK,EACD/d,EAAQ83B,OAASzB,EAAOtY,SACxB,MACJ,KAAK,EACD/d,EAAQ+3B,OAAS1B,EAAOtY,SACxB,MACJ,KAAK,EACK/d,EAAQ63B,WAAa73B,EAAQ63B,UAAUnrC,SACzCsT,EAAQ63B,UAAY,IACxB73B,EAAQ63B,UAAUjrC,KAAKkoC,EAAMR,KAAKW,eAAe58B,OAAOg+B,EAAQA,EAAOR,WACvE,MACJ,KAAK,EACD71B,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,QACIsY,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaX23B,EAAUlB,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC8B,EAAUjB,OAAS,SAAgB12B,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAqB,MAAjBA,EAAQiT,OAAiBjT,EAAQtP,eAAe,SAAU,CAC1D,IAAK9B,MAAMC,QAAQmR,EAAQiT,OACvB,MAAO,wBACX,IAAK,IAAIxmB,EAAI,EAAGA,EAAIuT,EAAQiT,MAAMvmB,SAAUD,EACxC,IAAKmoC,EAAM+B,SAAS32B,EAAQiT,MAAMxmB,IAC9B,MAAO,2BAEnB,GAAsB,MAAlBuT,EAAQ43B,QAAkB53B,EAAQtP,eAAe,UAAW,CAC5D,IAAK9B,MAAMC,QAAQmR,EAAQ43B,QACvB,MAAO,yBACX,IAASnrC,EAAI,EAAGA,EAAIuT,EAAQ43B,OAAOlrC,SAAUD,EACzC,IAAKmoC,EAAM+B,SAAS32B,EAAQ43B,OAAOnrC,IAC/B,MAAO,4BAEnB,GAAoB,MAAhBuT,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC1CkkC,EAAM+B,SAAS32B,EAAQhU,MACxB,MAAO,wBACf,GAAsB,MAAlBgU,EAAQ83B,QAAkB93B,EAAQtP,eAAe,YAC5CkkC,EAAM+B,SAAS32B,EAAQ83B,QACxB,MAAO,0BACf,GAAsB,MAAlB93B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YAC5CkkC,EAAM+B,SAAS32B,EAAQ+3B,QACxB,MAAO,0BACf,GAAyB,MAArB/3B,EAAQ63B,WAAqB73B,EAAQtP,eAAe,aAAc,CAClE,IAAK9B,MAAMC,QAAQmR,EAAQ63B,WACvB,MAAO,4BACX,IAASprC,EAAI,EAAGA,EAAIuT,EAAQ63B,UAAUnrC,SAAUD,EAAG,CAC/C,IAAIyJ,EAAQ4+B,EAAMR,KAAKW,eAAeyB,OAAO12B,EAAQ63B,UAAUprC,IAC/D,GAAIyJ,EACA,MAAO,aAAeA,GAGlC,OAAyB,MAArB8J,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACjB,6BACR,MAWXkC,EAAUd,WAAa,SAAoBhrB,GACvC,GAAIA,aAAkBipB,EAAMR,KAAKqD,UAC7B,OAAO9rB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKqD,UAC7B,GAAI9rB,EAAOoH,MAAO,CACd,IAAKrkB,MAAMC,QAAQgd,EAAOoH,OACtB,MAAM5mB,UAAU,yCACpB2T,EAAQiT,MAAQ,GAChB,IAAK,IAAIxmB,EAAI,EAAGA,EAAIof,EAAOoH,MAAMvmB,SAAUD,EACvCuT,EAAQiT,MAAMxmB,GAAKgM,OAAOoT,EAAOoH,MAAMxmB,IAE/C,GAAIof,EAAO+rB,OAAQ,CACf,IAAKhpC,MAAMC,QAAQgd,EAAO+rB,QACtB,MAAMvrC,UAAU,0CAEpB,IADA2T,EAAQ43B,OAAS,GACRnrC,EAAI,EAAGA,EAAIof,EAAO+rB,OAAOlrC,SAAUD,EACxCuT,EAAQ43B,OAAOnrC,GAAKgM,OAAOoT,EAAO+rB,OAAOnrC,IAQjD,GANmB,MAAfof,EAAO7f,OACPgU,EAAQhU,KAAOyM,OAAOoT,EAAO7f,OACZ,MAAjB6f,EAAOisB,SACP93B,EAAQ83B,OAASr/B,OAAOoT,EAAOisB,SACd,MAAjBjsB,EAAOksB,SACP/3B,EAAQ+3B,OAASt/B,OAAOoT,EAAOksB,SAC/BlsB,EAAOgsB,UAAW,CAClB,IAAKjpC,MAAMC,QAAQgd,EAAOgsB,WACtB,MAAMxrC,UAAU,6CAEpB,IADA2T,EAAQ63B,UAAY,GACXprC,EAAI,EAAGA,EAAIof,EAAOgsB,UAAUnrC,SAAUD,EAAG,CAC9C,GAAmC,iBAAxBof,EAAOgsB,UAAUprC,GACxB,MAAMJ,UAAU,8CACpB2T,EAAQ63B,UAAUprC,GAAKqoC,EAAMR,KAAKW,eAAe4B,WAAWhrB,EAAOgsB,UAAUprC,KAKrF,OAFwB,MAApBof,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAC/Bz1B,GAYX23B,EAAUZ,SAAW,SAAkB/2B,EAASnQ,GACvCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAYb,IAXIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOoH,MAAQ,GACfpH,EAAO+rB,OAAS,GAChB/rB,EAAOgsB,UAAY,IAEnBhoC,EAAQonC,WACRprB,EAAO7f,KAAO,GACd6f,EAAOisB,OAAS,GAChBjsB,EAAO4pB,UAAY,GACnB5pB,EAAOksB,OAAS,IAEhB/3B,EAAQiT,OAASjT,EAAQiT,MAAMvmB,OAAQ,CACvCmf,EAAOoH,MAAQ,GACf,IAAK,IAAIvgB,EAAI,EAAGA,EAAIsN,EAAQiT,MAAMvmB,SAAUgG,EACxCmZ,EAAOoH,MAAMvgB,GAAKsN,EAAQiT,MAAMvgB,GAExC,GAAIsN,EAAQ43B,QAAU53B,EAAQ43B,OAAOlrC,OAEjC,IADAmf,EAAO+rB,OAAS,GACPllC,EAAI,EAAGA,EAAIsN,EAAQ43B,OAAOlrC,SAAUgG,EACzCmZ,EAAO+rB,OAAOllC,GAAKsN,EAAQ43B,OAAOllC,GAM1C,GAJoB,MAAhBsN,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC/Cmb,EAAO7f,KAAOgU,EAAQhU,MACJ,MAAlBgU,EAAQ83B,QAAkB93B,EAAQtP,eAAe,YACjDmb,EAAOisB,OAAS93B,EAAQ83B,QACxB93B,EAAQ63B,WAAa73B,EAAQ63B,UAAUnrC,OAEvC,IADAmf,EAAOgsB,UAAY,GACVnlC,EAAI,EAAGA,EAAIsN,EAAQ63B,UAAUnrC,SAAUgG,EAC5CmZ,EAAOgsB,UAAUnlC,GAAKoiC,EAAMR,KAAKW,eAAe8B,SAAS/2B,EAAQ63B,UAAUnlC,GAAI7C,GAMvF,OAJyB,MAArBmQ,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WACT,MAAlBz1B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YACjDmb,EAAOksB,OAAS/3B,EAAQ+3B,QACrBlsB,GAUX8rB,EAAU/Y,UAAU2N,OAAS,WACzB,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDG,EApXM,GAuXjBrD,EAAK0D,WAAa,WAyBd,SAASA,EAAW9C,GAGhB,GAFApoC,KAAKmrC,YAAc,GACnBnrC,KAAKorC,cAAgB,GACjBhD,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAuZhD,OA9YAurC,EAAWpZ,UAAUuZ,UAAYvD,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAQ/E6K,EAAWpZ,UAAUqZ,YAAcrD,EAAMe,WAQzCqC,EAAWpZ,UAAUwZ,aAAe,GAQpCJ,EAAWpZ,UAAUyZ,gBAAkB,GAQvCL,EAAWpZ,UAAUmZ,OAAS,GAQ9BC,EAAWpZ,UAAU0Z,aAAe1D,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAQlF6K,EAAWpZ,UAAU6W,UAAY,GAQjCuC,EAAWpZ,UAAU2Z,MAAQ,KAQ7BP,EAAWpZ,UAAUsZ,cAAgBtD,EAAMe,WAU3CqC,EAAWrsB,OAAS,SAAgBupB,GAChC,OAAO,IAAI8C,EAAW9C,IAY1B8C,EAAW7Z,OAAS,SAAgBne,EAAS41B,GAiBzC,GAhBKA,IACDA,EAASlB,EAAQ/oB,UACI,MAArB3L,EAAQm4B,WAAqBn4B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA8B,GAAGE,MAAM/1B,EAAQm4B,WAC9B,MAAxBn4B,EAAQo4B,cAAwBp4B,EAAQtP,eAAe,iBACvDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQo4B,cAC7B,MAA3Bp4B,EAAQq4B,iBAA2Br4B,EAAQtP,eAAe,oBAC1DklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQq4B,iBACtC,MAAlBr4B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,WACjDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ+3B,QAChC,MAAxB/3B,EAAQs4B,cAAwBt4B,EAAQtP,eAAe,iBACvDklC,EAAOC,OAA8B,IAAIE,MAAM/1B,EAAQs4B,cAClC,MAArBt4B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQy1B,WACvC,MAAjBz1B,EAAQu4B,OAAiBv4B,EAAQtP,eAAe,UAChDokC,EAAMR,KAAK6B,WAAWhY,OAAOne,EAAQu4B,MAAO3C,EAAOC,OAA8B,IAAII,QAAQC,SACtE,MAAvBl2B,EAAQi4B,aAAuBj4B,EAAQi4B,YAAYvrC,OACnD,IAAK,IAAID,EAAI,EAAGA,EAAIuT,EAAQi4B,YAAYvrC,SAAUD,EAC9CqoC,EAAMR,KAAKkE,mBAAmBra,OAAOne,EAAQi4B,YAAYxrC,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SACtH,GAA6B,MAAzBl2B,EAAQk4B,eAAyBl4B,EAAQk4B,cAAcxrC,OACvD,IAASD,EAAI,EAAGA,EAAIuT,EAAQk4B,cAAcxrC,SAAUD,EAChDqoC,EAAMR,KAAKmE,uBAAuBta,OAAOne,EAAQk4B,cAAczrC,GAAImpC,EAAOC,OAA+B,KAAKI,QAAQC,SAC9H,OAAON,GAYXoC,EAAW5B,gBAAkB,SAAyBp2B,EAAS41B,GAC3D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxC8B,EAAW3/B,OAAS,SAAgBg+B,EAAQ3pC,GAClC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK0D,WACrF3B,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQm4B,UAAY9B,EAAON,QAC3B,MACJ,KAAK,EACK/1B,EAAQi4B,aAAej4B,EAAQi4B,YAAYvrC,SAC7CsT,EAAQi4B,YAAc,IAC1Bj4B,EAAQi4B,YAAYrrC,KAAKkoC,EAAMR,KAAKkE,mBAAmBngC,OAAOg+B,EAAQA,EAAOR,WAC7E,MACJ,KAAK,EACD71B,EAAQo4B,aAAe/B,EAAOtY,SAC9B,MACJ,KAAK,EACD/d,EAAQq4B,gBAAkBhC,EAAOtY,SACjC,MACJ,KAAK,EACD/d,EAAQ+3B,OAAS1B,EAAOtY,SACxB,MACJ,KAAK,EACD/d,EAAQs4B,aAAejC,EAAON,QAC9B,MACJ,KAAK,EACD/1B,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,KAAK,EACD/d,EAAQu4B,MAAQzD,EAAMR,KAAK6B,WAAW99B,OAAOg+B,EAAQA,EAAOR,UAC5D,MACJ,KAAK,GACK71B,EAAQk4B,eAAiBl4B,EAAQk4B,cAAcxrC,SACjDsT,EAAQk4B,cAAgB,IAC5Bl4B,EAAQk4B,cAActrC,KAAKkoC,EAAMR,KAAKmE,uBAAuBpgC,OAAOg+B,EAAQA,EAAOR,WACnF,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXg4B,EAAWvB,gBAAkB,SAAyBJ,GAGlD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCmC,EAAWtB,OAAS,SAAgB12B,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAyB,MAArBA,EAAQm4B,WAAqBn4B,EAAQtP,eAAe,gBAC/CkkC,EAAMgC,UAAU52B,EAAQm4B,YAAgBn4B,EAAQm4B,WAAavD,EAAMgC,UAAU52B,EAAQm4B,UAAUpU,MAAQ6Q,EAAMgC,UAAU52B,EAAQm4B,UAAUnU,OAC1I,MAAO,mCACf,GAA2B,MAAvBhkB,EAAQi4B,aAAuBj4B,EAAQtP,eAAe,eAAgB,CACtE,IAAK9B,MAAMC,QAAQmR,EAAQi4B,aACvB,MAAO,8BACX,IAAK,IAAIxrC,EAAI,EAAGA,EAAIuT,EAAQi4B,YAAYvrC,SAAUD,EAE9C,GADIyJ,EAAQ4+B,EAAMR,KAAKkE,mBAAmB9B,OAAO12B,EAAQi4B,YAAYxrC,IAEjE,MAAO,eAAiByJ,EAGpC,GAA4B,MAAxB8J,EAAQo4B,cAAwBp4B,EAAQtP,eAAe,kBAClDkkC,EAAM+B,SAAS32B,EAAQo4B,cACxB,MAAO,gCACf,GAA+B,MAA3Bp4B,EAAQq4B,iBAA2Br4B,EAAQtP,eAAe,qBACrDkkC,EAAM+B,SAAS32B,EAAQq4B,iBACxB,MAAO,mCACf,GAAsB,MAAlBr4B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YAC5CkkC,EAAM+B,SAAS32B,EAAQ+3B,QACxB,MAAO,0BACf,GAA4B,MAAxB/3B,EAAQs4B,cAAwBt4B,EAAQtP,eAAe,mBAClDkkC,EAAMgC,UAAU52B,EAAQs4B,eAAmBt4B,EAAQs4B,cAAgB1D,EAAMgC,UAAU52B,EAAQs4B,aAAavU,MAAQ6Q,EAAMgC,UAAU52B,EAAQs4B,aAAatU,OACtJ,MAAO,sCACf,GAAyB,MAArBhkB,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACxB,MAAO,6BACf,GAAqB,MAAjBz1B,EAAQu4B,OAAiBv4B,EAAQtP,eAAe,WAC5CwF,EAAQ4+B,EAAMR,KAAK6B,WAAWO,OAAO12B,EAAQu4B,QAE7C,MAAO,SAAWriC,EAE1B,GAA6B,MAAzB8J,EAAQk4B,eAAyBl4B,EAAQtP,eAAe,iBAAkB,CAC1E,IAAK9B,MAAMC,QAAQmR,EAAQk4B,eACvB,MAAO,gCACX,IAASzrC,EAAI,EAAGA,EAAIuT,EAAQk4B,cAAcxrC,SAAUD,EAAG,CACnD,IAAIyJ,EACJ,GADIA,EAAQ4+B,EAAMR,KAAKmE,uBAAuB/B,OAAO12B,EAAQk4B,cAAczrC,IAEvE,MAAO,iBAAmByJ,GAGtC,OAAO,MAWX8hC,EAAWnB,WAAa,SAAoBhrB,GACxC,GAAIA,aAAkBipB,EAAMR,KAAK0D,WAC7B,OAAOnsB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK0D,WAU7B,GATwB,MAApBnsB,EAAOssB,YACHvD,EAAM9Q,MACL9jB,EAAQm4B,UAAYvD,EAAM9Q,KAAKyK,UAAU1iB,EAAOssB,YAAYzL,UAAW,EACvC,iBAArB7gB,EAAOssB,UACnBn4B,EAAQm4B,UAAY/J,SAASviB,EAAOssB,UAAW,IACd,iBAArBtsB,EAAOssB,UACnBn4B,EAAQm4B,UAAYtsB,EAAOssB,UACM,iBAArBtsB,EAAOssB,YACnBn4B,EAAQm4B,UAAY,IAAIvD,EAAMkC,SAASjrB,EAAOssB,UAAUpU,MAAQ,EAAGlY,EAAOssB,UAAUnU,OAAS,GAAG+K,aACpGljB,EAAOosB,YAAa,CACpB,IAAKrpC,MAAMC,QAAQgd,EAAOosB,aACtB,MAAM5rC,UAAU,gDACpB2T,EAAQi4B,YAAc,GACtB,IAAK,IAAIxrC,EAAI,EAAGA,EAAIof,EAAOosB,YAAYvrC,SAAUD,EAAG,CAChD,GAAqC,iBAA1Bof,EAAOosB,YAAYxrC,GAC1B,MAAMJ,UAAU,iDACpB2T,EAAQi4B,YAAYxrC,GAAKqoC,EAAMR,KAAKkE,mBAAmB3B,WAAWhrB,EAAOosB,YAAYxrC,KAoB7F,GAjB2B,MAAvBof,EAAOusB,eACPp4B,EAAQo4B,aAAe3/B,OAAOoT,EAAOusB,eACX,MAA1BvsB,EAAOwsB,kBACPr4B,EAAQq4B,gBAAkB5/B,OAAOoT,EAAOwsB,kBACvB,MAAjBxsB,EAAOksB,SACP/3B,EAAQ+3B,OAASt/B,OAAOoT,EAAOksB,SACR,MAAvBlsB,EAAOysB,eACH1D,EAAM9Q,MACL9jB,EAAQs4B,aAAe1D,EAAM9Q,KAAKyK,UAAU1iB,EAAOysB,eAAe5L,UAAW,EAC1C,iBAAxB7gB,EAAOysB,aACnBt4B,EAAQs4B,aAAelK,SAASviB,EAAOysB,aAAc,IACjB,iBAAxBzsB,EAAOysB,aACnBt4B,EAAQs4B,aAAezsB,EAAOysB,aACM,iBAAxBzsB,EAAOysB,eACnBt4B,EAAQs4B,aAAe,IAAI1D,EAAMkC,SAASjrB,EAAOysB,aAAavU,MAAQ,EAAGlY,EAAOysB,aAAatU,OAAS,GAAG+K,aACzF,MAApBljB,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAClB,MAAhB5pB,EAAO0sB,MAAe,CACtB,GAA4B,iBAAjB1sB,EAAO0sB,MACd,MAAMlsC,UAAU,2CACpB2T,EAAQu4B,MAAQzD,EAAMR,KAAK6B,WAAWU,WAAWhrB,EAAO0sB,OAE5D,GAAI1sB,EAAOqsB,cAAe,CACtB,IAAKtpC,MAAMC,QAAQgd,EAAOqsB,eACtB,MAAM7rC,UAAU,kDAEpB,IADA2T,EAAQk4B,cAAgB,GACfzrC,EAAI,EAAGA,EAAIof,EAAOqsB,cAAcxrC,SAAUD,EAAG,CAClD,GAAuC,iBAA5Bof,EAAOqsB,cAAczrC,GAC5B,MAAMJ,UAAU,mDACpB2T,EAAQk4B,cAAczrC,GAAKqoC,EAAMR,KAAKmE,uBAAuB5B,WAAWhrB,EAAOqsB,cAAczrC,KAGrG,OAAOuT,GAYXg4B,EAAWjB,SAAW,SAAkB/2B,EAASnQ,GACxCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAKb,IAJIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOosB,YAAc,GACrBpsB,EAAOqsB,cAAgB,IAEvBroC,EAAQonC,SAAU,CAClB,GAAIrC,EAAM9Q,KAAM,CACZ,IAAIoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOssB,UAAYtoC,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,OAE7GrrB,EAAOssB,UAAYtoC,EAAQsnC,QAAU1+B,OAAS,IAAM,EACxDoT,EAAOusB,aAAe,GACtBvsB,EAAOwsB,gBAAkB,GACzBxsB,EAAOksB,OAAS,GACZnD,EAAM9Q,MACFoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOysB,aAAezoC,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,GAEhHrrB,EAAOysB,aAAezoC,EAAQsnC,QAAU1+B,OAAS,IAAM,EAC3DoT,EAAO4pB,UAAY,GACnB5pB,EAAO0sB,MAAQ,KAsBnB,GApByB,MAArBv4B,EAAQm4B,WAAqBn4B,EAAQtP,eAAe,eACnB,iBAAtBsP,EAAQm4B,UACftsB,EAAOssB,UAAYtoC,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQm4B,WAAan4B,EAAQm4B,UAElFtsB,EAAOssB,UAAYtoC,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQm4B,WAAatoC,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQm4B,UAAUpU,MAAQ,EAAG/jB,EAAQm4B,UAAUnU,OAAS,GAAG+K,WAAa/uB,EAAQm4B,WAChN,MAAxBn4B,EAAQo4B,cAAwBp4B,EAAQtP,eAAe,kBACvDmb,EAAOusB,aAAep4B,EAAQo4B,cACH,MAA3Bp4B,EAAQq4B,iBAA2Br4B,EAAQtP,eAAe,qBAC1Dmb,EAAOwsB,gBAAkBr4B,EAAQq4B,iBACf,MAAlBr4B,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YACjDmb,EAAOksB,OAAS/3B,EAAQ+3B,QACA,MAAxB/3B,EAAQs4B,cAAwBt4B,EAAQtP,eAAe,kBACnB,iBAAzBsP,EAAQs4B,aACfzsB,EAAOysB,aAAezoC,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQs4B,cAAgBt4B,EAAQs4B,aAExFzsB,EAAOysB,aAAezoC,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQs4B,cAAgBzoC,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQs4B,aAAavU,MAAQ,EAAG/jB,EAAQs4B,aAAatU,OAAS,GAAG+K,WAAa/uB,EAAQs4B,cAC/N,MAArBt4B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WACV,MAAjBz1B,EAAQu4B,OAAiBv4B,EAAQtP,eAAe,WAChDmb,EAAO0sB,MAAQzD,EAAMR,KAAK6B,WAAWY,SAAS/2B,EAAQu4B,MAAO1oC,IAC7DmQ,EAAQi4B,aAAej4B,EAAQi4B,YAAYvrC,OAAQ,CACnDmf,EAAOosB,YAAc,GACrB,IAAK,IAAIvlC,EAAI,EAAGA,EAAIsN,EAAQi4B,YAAYvrC,SAAUgG,EAC9CmZ,EAAOosB,YAAYvlC,GAAKoiC,EAAMR,KAAKkE,mBAAmBzB,SAAS/2B,EAAQi4B,YAAYvlC,GAAI7C,GAE/F,GAAImQ,EAAQk4B,eAAiBl4B,EAAQk4B,cAAcxrC,OAE/C,IADAmf,EAAOqsB,cAAgB,GACdxlC,EAAI,EAAGA,EAAIsN,EAAQk4B,cAAcxrC,SAAUgG,EAChDmZ,EAAOqsB,cAAcxlC,GAAKoiC,EAAMR,KAAKmE,uBAAuB1B,SAAS/2B,EAAQk4B,cAAcxlC,GAAI7C,GAEvG,OAAOgc,GAUXmsB,EAAWpZ,UAAU2N,OAAS,WAC1B,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDQ,EAtbO,GAyblB1D,EAAKmE,uBAAyB,WAkB1B,SAASA,EAAuBvD,GAC5B,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAyLhD,OAhLAgsC,EAAuB7Z,UAAUnuB,IAAM,GAQvCgoC,EAAuB7Z,UAAU1xB,MAAQ,GAUzCurC,EAAuB9sB,OAAS,SAAgBupB,GAC5C,OAAO,IAAIuD,EAAuBvD,IAYtCuD,EAAuBta,OAAS,SAAgBne,EAAS41B,GAOrD,OANKA,IACDA,EAASlB,EAAQ/oB,UACF,MAAf3L,EAAQvP,KAAeuP,EAAQtP,eAAe,QAC9CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQvP,KACvC,MAAjBuP,EAAQ9S,OAAiB8S,EAAQtP,eAAe,UAChDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ9S,OACrD0oC,GAYX6C,EAAuBrC,gBAAkB,SAAyBp2B,EAAS41B,GACvE,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCuC,EAAuBpgC,OAAS,SAAgBg+B,EAAQ3pC,GAC9C2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKmE,uBACrFpC,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQvP,IAAM4lC,EAAOtY,SACrB,MACJ,KAAK,EACD/d,EAAQ9S,MAAQmpC,EAAOtY,SACvB,MACJ,QACIsY,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXy4B,EAAuBhC,gBAAkB,SAAyBJ,GAG9D,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC4C,EAAuB/B,OAAS,SAAgB12B,GAC5C,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACQ,MAAfA,EAAQvP,KAAeuP,EAAQtP,eAAe,SACzCkkC,EAAM+B,SAAS32B,EAAQvP,KACjB,uBACM,MAAjBuP,EAAQ9S,OAAiB8S,EAAQtP,eAAe,WAC3CkkC,EAAM+B,SAAS32B,EAAQ9S,OACjB,yBACR,MAWXurC,EAAuB5B,WAAa,SAAoBhrB,GACpD,GAAIA,aAAkBipB,EAAMR,KAAKmE,uBAC7B,OAAO5sB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKmE,uBAK7B,OAJkB,MAAd5sB,EAAOpb,MACPuP,EAAQvP,IAAMgI,OAAOoT,EAAOpb,MACZ,MAAhBob,EAAO3e,QACP8S,EAAQ9S,MAAQuL,OAAOoT,EAAO3e,QAC3B8S,GAYXy4B,EAAuB1B,SAAW,SAAkB/2B,EAASnQ,GACpDA,IACDA,EAAU,IACd,IAAIgc,EAAS,GASb,OARIhc,EAAQonC,WACRprB,EAAOpb,IAAM,GACbob,EAAO3e,MAAQ,IAEA,MAAf8S,EAAQvP,KAAeuP,EAAQtP,eAAe,SAC9Cmb,EAAOpb,IAAMuP,EAAQvP,KACJ,MAAjBuP,EAAQ9S,OAAiB8S,EAAQtP,eAAe,WAChDmb,EAAO3e,MAAQ8S,EAAQ9S,OACpB2e,GAUX4sB,EAAuB7Z,UAAU2N,OAAS,WACtC,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDiB,EA/MmB,GAkN9BnE,EAAKoE,iBAAmB,WAkBpB,SAASA,EAAiBxD,GAEtB,GADApoC,KAAK6rC,0BAA4B,GAC7BzD,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KA6MhD,OApMAisC,EAAiB9Z,UAAUga,WAAa,GAQxCF,EAAiB9Z,UAAU+Z,0BAA4B/D,EAAMe,WAU7D+C,EAAiB/sB,OAAS,SAAgBupB,GACtC,OAAO,IAAIwD,EAAiBxD,IAYhCwD,EAAiBva,OAAS,SAAgBne,EAAS41B,GAK/C,GAJKA,IACDA,EAASlB,EAAQ/oB,UACK,MAAtB3L,EAAQ44B,YAAsB54B,EAAQtP,eAAe,eACrDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ44B,YACnB,MAArC54B,EAAQ24B,2BAAqC34B,EAAQ24B,0BAA0BjsC,OAC/E,IAAK,IAAID,EAAI,EAAGA,EAAIuT,EAAQ24B,0BAA0BjsC,SAAUD,EAC5DqoC,EAAMR,KAAKmE,uBAAuBta,OAAOne,EAAQ24B,0BAA0BlsC,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SACxI,OAAON,GAYX8C,EAAiBtC,gBAAkB,SAAyBp2B,EAAS41B,GACjE,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCwC,EAAiBrgC,OAAS,SAAgBg+B,EAAQ3pC,GACxC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKoE,iBACrFrC,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQ44B,WAAavC,EAAOtY,SAC5B,MACJ,KAAK,EACK/d,EAAQ24B,2BAA6B34B,EAAQ24B,0BAA0BjsC,SACzEsT,EAAQ24B,0BAA4B,IACxC34B,EAAQ24B,0BAA0B/rC,KAAKkoC,EAAMR,KAAKmE,uBAAuBpgC,OAAOg+B,EAAQA,EAAOR,WAC/F,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaX04B,EAAiBjC,gBAAkB,SAAyBJ,GAGxD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC6C,EAAiBhC,OAAS,SAAgB12B,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAA0B,MAAtBA,EAAQ44B,YAAsB54B,EAAQtP,eAAe,gBAChDkkC,EAAM+B,SAAS32B,EAAQ44B,YACxB,MAAO,8BACf,GAAyC,MAArC54B,EAAQ24B,2BAAqC34B,EAAQtP,eAAe,6BAA8B,CAClG,IAAK9B,MAAMC,QAAQmR,EAAQ24B,2BACvB,MAAO,4CACX,IAAK,IAAIlsC,EAAI,EAAGA,EAAIuT,EAAQ24B,0BAA0BjsC,SAAUD,EAAG,CAC/D,IAAIyJ,EAAQ4+B,EAAMR,KAAKmE,uBAAuB/B,OAAO12B,EAAQ24B,0BAA0BlsC,IACvF,GAAIyJ,EACA,MAAO,6BAA+BA,GAGlD,OAAO,MAWXwiC,EAAiB7B,WAAa,SAAoBhrB,GAC9C,GAAIA,aAAkBipB,EAAMR,KAAKoE,iBAC7B,OAAO7sB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKoE,iBAG7B,GAFyB,MAArB7sB,EAAO+sB,aACP54B,EAAQ44B,WAAangC,OAAOoT,EAAO+sB,aACnC/sB,EAAO8sB,0BAA2B,CAClC,IAAK/pC,MAAMC,QAAQgd,EAAO8sB,2BACtB,MAAMtsC,UAAU,oEACpB2T,EAAQ24B,0BAA4B,GACpC,IAAK,IAAIlsC,EAAI,EAAGA,EAAIof,EAAO8sB,0BAA0BjsC,SAAUD,EAAG,CAC9D,GAAmD,iBAAxCof,EAAO8sB,0BAA0BlsC,GACxC,MAAMJ,UAAU,qEACpB2T,EAAQ24B,0BAA0BlsC,GAAKqoC,EAAMR,KAAKmE,uBAAuB5B,WAAWhrB,EAAO8sB,0BAA0BlsC,KAG7H,OAAOuT,GAYX04B,EAAiB3B,SAAW,SAAkB/2B,EAASnQ,GAC9CA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAOb,IANIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAO8sB,0BAA4B,IACnC9oC,EAAQonC,WACRprB,EAAO+sB,WAAa,IACE,MAAtB54B,EAAQ44B,YAAsB54B,EAAQtP,eAAe,gBACrDmb,EAAO+sB,WAAa54B,EAAQ44B,YAC5B54B,EAAQ24B,2BAA6B34B,EAAQ24B,0BAA0BjsC,OAAQ,CAC/Emf,EAAO8sB,0BAA4B,GACnC,IAAK,IAAIjmC,EAAI,EAAGA,EAAIsN,EAAQ24B,0BAA0BjsC,SAAUgG,EAC5DmZ,EAAO8sB,0BAA0BjmC,GAAKoiC,EAAMR,KAAKmE,uBAAuB1B,SAAS/2B,EAAQ24B,0BAA0BjmC,GAAI7C,GAE/H,OAAOgc,GAUX6sB,EAAiB9Z,UAAU2N,OAAS,WAChC,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDkB,EApOa,GAuOxBpE,EAAK6B,WAAa,WAwBd,SAASA,EAAWjB,GAOhB,GANApoC,KAAK4H,KAAO,GACZ5H,KAAK+rC,YAAc,GACnB/rC,KAAKmmB,MAAQ,GACbnmB,KAAK8qC,OAAS,GACd9qC,KAAKgsC,UAAY,GACjBhsC,KAAKisC,uBAAyB,GAC1B7D,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAibhD,OAxaA0pC,EAAWvX,UAAUlqB,KAAOkgC,EAAMe,WAQlCQ,EAAWvX,UAAU5yB,KAAO,GAQ5BmqC,EAAWvX,UAAUia,YAAcjE,EAAMe,WAQzCQ,EAAWvX,UAAU6W,UAAY,GAQjCU,EAAWvX,UAAU3L,MAAQ2hB,EAAMe,WAQnCQ,EAAWvX,UAAUgZ,OAAShD,EAAMe,WAQpCQ,EAAWvX,UAAUka,UAAYlE,EAAMe,WAQvCQ,EAAWvX,UAAUma,uBAAyBnE,EAAMe,WAUpDQ,EAAWxqB,OAAS,SAAgBupB,GAChC,OAAO,IAAIiB,EAAWjB,IAY1BiB,EAAWhY,OAAS,SAAgBne,EAAS41B,GAGzC,GAFKA,IACDA,EAASlB,EAAQ/oB,UACD,MAAhB3L,EAAQtL,MAAgBsL,EAAQtL,KAAKhI,OACrC,IAAK,IAAID,EAAI,EAAGA,EAAIuT,EAAQtL,KAAKhI,SAAUD,EACvCqoC,EAAMR,KAAKqD,UAAUxZ,OAAOne,EAAQtL,KAAKjI,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SAGtG,GAFoB,MAAhBl2B,EAAQhU,MAAgBgU,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQhU,MACjC,MAAvBgU,EAAQ64B,aAAuB74B,EAAQ64B,YAAYnsC,OACnD,IAASD,EAAI,EAAGA,EAAIuT,EAAQ64B,YAAYnsC,SAAUD,EAC9CqoC,EAAMR,KAAK0B,YAAY7X,OAAOne,EAAQ64B,YAAYpsC,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SAG/G,GAFyB,MAArBl2B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA+B,IAAI9X,OAAO/d,EAAQy1B,WACxC,MAAjBz1B,EAAQiT,OAAiBjT,EAAQiT,MAAMvmB,OACvC,IAASD,EAAI,EAAGA,EAAIuT,EAAQiT,MAAMvmB,SAAUD,EACxCqoC,EAAMR,KAAKmD,eAAetZ,OAAOne,EAAQiT,MAAMxmB,GAAImpC,EAAOC,OAA+B,IAAII,QAAQC,SAC7G,GAAsB,MAAlBl2B,EAAQ43B,QAAkB53B,EAAQ43B,OAAOlrC,OACzC,IAASD,EAAI,EAAGA,EAAIuT,EAAQ43B,OAAOlrC,SAAUD,EACzCqoC,EAAMR,KAAKmD,eAAetZ,OAAOne,EAAQ43B,OAAOnrC,GAAImpC,EAAOC,OAA+B,IAAII,QAAQC,SAC9G,GAAyB,MAArBl2B,EAAQ84B,WAAqB94B,EAAQ84B,UAAUpsC,OAC/C,IAASD,EAAI,EAAGA,EAAIuT,EAAQ84B,UAAUpsC,SAAUD,EAC5CqoC,EAAMR,KAAKmD,eAAetZ,OAAOne,EAAQ84B,UAAUrsC,GAAImpC,EAAOC,OAA+B,KAAKI,QAAQC,SAClH,GAAsC,MAAlCl2B,EAAQ+4B,wBAAkC/4B,EAAQ+4B,uBAAuBrsC,OACzE,IAASD,EAAI,EAAGA,EAAIuT,EAAQ+4B,uBAAuBrsC,SAAUD,EACzDqoC,EAAMR,KAAKoE,iBAAiBva,OAAOne,EAAQ+4B,uBAAuBtsC,GAAImpC,EAAOC,OAA+B,KAAKI,QAAQC,SACjI,OAAON,GAYXO,EAAWC,gBAAkB,SAAyBp2B,EAAS41B,GAC3D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCC,EAAW99B,OAAS,SAAgBg+B,EAAQ3pC,GAClC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK6B,WACrFE,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACKt2B,EAAQtL,MAAQsL,EAAQtL,KAAKhI,SAC/BsT,EAAQtL,KAAO,IACnBsL,EAAQtL,KAAK9H,KAAKkoC,EAAMR,KAAKqD,UAAUt/B,OAAOg+B,EAAQA,EAAOR,WAC7D,MACJ,KAAK,EACD71B,EAAQhU,KAAOqqC,EAAOtY,SACtB,MACJ,KAAK,EACK/d,EAAQ64B,aAAe74B,EAAQ64B,YAAYnsC,SAC7CsT,EAAQ64B,YAAc,IAC1B74B,EAAQ64B,YAAYjsC,KAAKkoC,EAAMR,KAAK0B,YAAY39B,OAAOg+B,EAAQA,EAAOR,WACtE,MACJ,KAAK,GACD71B,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,KAAK,GACK/d,EAAQiT,OAASjT,EAAQiT,MAAMvmB,SACjCsT,EAAQiT,MAAQ,IACpBjT,EAAQiT,MAAMrmB,KAAKkoC,EAAMR,KAAKmD,eAAep/B,OAAOg+B,EAAQA,EAAOR,WACnE,MACJ,KAAK,GACK71B,EAAQ43B,QAAU53B,EAAQ43B,OAAOlrC,SACnCsT,EAAQ43B,OAAS,IACrB53B,EAAQ43B,OAAOhrC,KAAKkoC,EAAMR,KAAKmD,eAAep/B,OAAOg+B,EAAQA,EAAOR,WACpE,MACJ,KAAK,GACK71B,EAAQ84B,WAAa94B,EAAQ84B,UAAUpsC,SACzCsT,EAAQ84B,UAAY,IACxB94B,EAAQ84B,UAAUlsC,KAAKkoC,EAAMR,KAAKmD,eAAep/B,OAAOg+B,EAAQA,EAAOR,WACvE,MACJ,KAAK,GACK71B,EAAQ+4B,wBAA0B/4B,EAAQ+4B,uBAAuBrsC,SACnEsT,EAAQ+4B,uBAAyB,IACrC/4B,EAAQ+4B,uBAAuBnsC,KAAKkoC,EAAMR,KAAKoE,iBAAiBrgC,OAAOg+B,EAAQA,EAAOR,WACtF,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXm2B,EAAWM,gBAAkB,SAAyBJ,GAGlD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCM,EAAWO,OAAS,SAAgB12B,GAChC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQtL,MAAgBsL,EAAQtP,eAAe,QAAS,CACxD,IAAK9B,MAAMC,QAAQmR,EAAQtL,MACvB,MAAO,uBACX,IAAK,IAAIjI,EAAI,EAAGA,EAAIuT,EAAQtL,KAAKhI,SAAUD,EAEvC,GADIyJ,EAAQ4+B,EAAMR,KAAKqD,UAAUjB,OAAO12B,EAAQtL,KAAKjI,IAEjD,MAAO,QAAUyJ,EAG7B,GAAoB,MAAhB8J,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC1CkkC,EAAM+B,SAAS32B,EAAQhU,MACxB,MAAO,wBACf,GAA2B,MAAvBgU,EAAQ64B,aAAuB74B,EAAQtP,eAAe,eAAgB,CACtE,IAAK9B,MAAMC,QAAQmR,EAAQ64B,aACvB,MAAO,8BACX,IAASpsC,EAAI,EAAGA,EAAIuT,EAAQ64B,YAAYnsC,SAAUD,EAE9C,GADIyJ,EAAQ4+B,EAAMR,KAAK0B,YAAYU,OAAO12B,EAAQ64B,YAAYpsC,IAE1D,MAAO,eAAiByJ,EAGpC,GAAyB,MAArB8J,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACxB,MAAO,6BACf,GAAqB,MAAjBz1B,EAAQiT,OAAiBjT,EAAQtP,eAAe,SAAU,CAC1D,IAAK9B,MAAMC,QAAQmR,EAAQiT,OACvB,MAAO,wBACX,IAASxmB,EAAI,EAAGA,EAAIuT,EAAQiT,MAAMvmB,SAAUD,EAExC,GADIyJ,EAAQ4+B,EAAMR,KAAKmD,eAAef,OAAO12B,EAAQiT,MAAMxmB,IAEvD,MAAO,SAAWyJ,EAG9B,GAAsB,MAAlB8J,EAAQ43B,QAAkB53B,EAAQtP,eAAe,UAAW,CAC5D,IAAK9B,MAAMC,QAAQmR,EAAQ43B,QACvB,MAAO,yBACX,IAASnrC,EAAI,EAAGA,EAAIuT,EAAQ43B,OAAOlrC,SAAUD,EAEzC,GADIyJ,EAAQ4+B,EAAMR,KAAKmD,eAAef,OAAO12B,EAAQ43B,OAAOnrC,IAExD,MAAO,UAAYyJ,EAG/B,GAAyB,MAArB8J,EAAQ84B,WAAqB94B,EAAQtP,eAAe,aAAc,CAClE,IAAK9B,MAAMC,QAAQmR,EAAQ84B,WACvB,MAAO,4BACX,IAASrsC,EAAI,EAAGA,EAAIuT,EAAQ84B,UAAUpsC,SAAUD,EAE5C,GADIyJ,EAAQ4+B,EAAMR,KAAKmD,eAAef,OAAO12B,EAAQ84B,UAAUrsC,IAE3D,MAAO,aAAeyJ,EAGlC,GAAsC,MAAlC8J,EAAQ+4B,wBAAkC/4B,EAAQtP,eAAe,0BAA2B,CAC5F,IAAK9B,MAAMC,QAAQmR,EAAQ+4B,wBACvB,MAAO,yCACX,IAAStsC,EAAI,EAAGA,EAAIuT,EAAQ+4B,uBAAuBrsC,SAAUD,EAAG,CAC5D,IAAIyJ,EACJ,GADIA,EAAQ4+B,EAAMR,KAAKoE,iBAAiBhC,OAAO12B,EAAQ+4B,uBAAuBtsC,IAE1E,MAAO,0BAA4ByJ,GAG/C,OAAO,MAWXigC,EAAWU,WAAa,SAAoBhrB,GACxC,GAAIA,aAAkBipB,EAAMR,KAAK6B,WAC7B,OAAOtqB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK6B,WAC7B,GAAItqB,EAAOnX,KAAM,CACb,IAAK9F,MAAMC,QAAQgd,EAAOnX,MACtB,MAAMrI,UAAU,yCACpB2T,EAAQtL,KAAO,GACf,IAAK,IAAIjI,EAAI,EAAGA,EAAIof,EAAOnX,KAAKhI,SAAUD,EAAG,CACzC,GAA8B,iBAAnBof,EAAOnX,KAAKjI,GACnB,MAAMJ,UAAU,0CACpB2T,EAAQtL,KAAKjI,GAAKqoC,EAAMR,KAAKqD,UAAUd,WAAWhrB,EAAOnX,KAAKjI,KAKtE,GAFmB,MAAfof,EAAO7f,OACPgU,EAAQhU,KAAOyM,OAAOoT,EAAO7f,OAC7B6f,EAAOgtB,YAAa,CACpB,IAAKjqC,MAAMC,QAAQgd,EAAOgtB,aACtB,MAAMxsC,UAAU,gDAEpB,IADA2T,EAAQ64B,YAAc,GACbpsC,EAAI,EAAGA,EAAIof,EAAOgtB,YAAYnsC,SAAUD,EAAG,CAChD,GAAqC,iBAA1Bof,EAAOgtB,YAAYpsC,GAC1B,MAAMJ,UAAU,iDACpB2T,EAAQ64B,YAAYpsC,GAAKqoC,EAAMR,KAAK0B,YAAYa,WAAWhrB,EAAOgtB,YAAYpsC,KAKtF,GAFwB,MAApBof,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAClC5pB,EAAOoH,MAAO,CACd,IAAKrkB,MAAMC,QAAQgd,EAAOoH,OACtB,MAAM5mB,UAAU,0CAEpB,IADA2T,EAAQiT,MAAQ,GACPxmB,EAAI,EAAGA,EAAIof,EAAOoH,MAAMvmB,SAAUD,EAAG,CAC1C,GAA+B,iBAApBof,EAAOoH,MAAMxmB,GACpB,MAAMJ,UAAU,2CACpB2T,EAAQiT,MAAMxmB,GAAKqoC,EAAMR,KAAKmD,eAAeZ,WAAWhrB,EAAOoH,MAAMxmB,KAG7E,GAAIof,EAAO+rB,OAAQ,CACf,IAAKhpC,MAAMC,QAAQgd,EAAO+rB,QACtB,MAAMvrC,UAAU,2CAEpB,IADA2T,EAAQ43B,OAAS,GACRnrC,EAAI,EAAGA,EAAIof,EAAO+rB,OAAOlrC,SAAUD,EAAG,CAC3C,GAAgC,iBAArBof,EAAO+rB,OAAOnrC,GACrB,MAAMJ,UAAU,4CACpB2T,EAAQ43B,OAAOnrC,GAAKqoC,EAAMR,KAAKmD,eAAeZ,WAAWhrB,EAAO+rB,OAAOnrC,KAG/E,GAAIof,EAAOitB,UAAW,CAClB,IAAKlqC,MAAMC,QAAQgd,EAAOitB,WACtB,MAAMzsC,UAAU,8CAEpB,IADA2T,EAAQ84B,UAAY,GACXrsC,EAAI,EAAGA,EAAIof,EAAOitB,UAAUpsC,SAAUD,EAAG,CAC9C,GAAmC,iBAAxBof,EAAOitB,UAAUrsC,GACxB,MAAMJ,UAAU,+CACpB2T,EAAQ84B,UAAUrsC,GAAKqoC,EAAMR,KAAKmD,eAAeZ,WAAWhrB,EAAOitB,UAAUrsC,KAGrF,GAAIof,EAAOktB,uBAAwB,CAC/B,IAAKnqC,MAAMC,QAAQgd,EAAOktB,wBACtB,MAAM1sC,UAAU,2DAEpB,IADA2T,EAAQ+4B,uBAAyB,GACxBtsC,EAAI,EAAGA,EAAIof,EAAOktB,uBAAuBrsC,SAAUD,EAAG,CAC3D,GAAgD,iBAArCof,EAAOktB,uBAAuBtsC,GACrC,MAAMJ,UAAU,4DACpB2T,EAAQ+4B,uBAAuBtsC,GAAKqoC,EAAMR,KAAKoE,iBAAiB7B,WAAWhrB,EAAOktB,uBAAuBtsC,KAGjH,OAAOuT,GAYXm2B,EAAWY,SAAW,SAAkB/2B,EAASnQ,GACxCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAab,IAZIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOnX,KAAO,GACdmX,EAAOgtB,YAAc,GACrBhtB,EAAOoH,MAAQ,GACfpH,EAAO+rB,OAAS,GAChB/rB,EAAOitB,UAAY,GACnBjtB,EAAOktB,uBAAyB,IAEhClpC,EAAQonC,WACRprB,EAAO7f,KAAO,GACd6f,EAAO4pB,UAAY,IAEnBz1B,EAAQtL,MAAQsL,EAAQtL,KAAKhI,OAAQ,CACrCmf,EAAOnX,KAAO,GACd,IAAK,IAAIhC,EAAI,EAAGA,EAAIsN,EAAQtL,KAAKhI,SAAUgG,EACvCmZ,EAAOnX,KAAKhC,GAAKoiC,EAAMR,KAAKqD,UAAUZ,SAAS/2B,EAAQtL,KAAKhC,GAAI7C,GAIxE,GAFoB,MAAhBmQ,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC/Cmb,EAAO7f,KAAOgU,EAAQhU,MACtBgU,EAAQ64B,aAAe74B,EAAQ64B,YAAYnsC,OAE3C,IADAmf,EAAOgtB,YAAc,GACZnmC,EAAI,EAAGA,EAAIsN,EAAQ64B,YAAYnsC,SAAUgG,EAC9CmZ,EAAOgtB,YAAYnmC,GAAKoiC,EAAMR,KAAK0B,YAAYe,SAAS/2B,EAAQ64B,YAAYnmC,GAAI7C,GAIxF,GAFyB,MAArBmQ,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WAC3Bz1B,EAAQiT,OAASjT,EAAQiT,MAAMvmB,OAE/B,IADAmf,EAAOoH,MAAQ,GACNvgB,EAAI,EAAGA,EAAIsN,EAAQiT,MAAMvmB,SAAUgG,EACxCmZ,EAAOoH,MAAMvgB,GAAKoiC,EAAMR,KAAKmD,eAAeV,SAAS/2B,EAAQiT,MAAMvgB,GAAI7C,GAE/E,GAAImQ,EAAQ43B,QAAU53B,EAAQ43B,OAAOlrC,OAEjC,IADAmf,EAAO+rB,OAAS,GACPllC,EAAI,EAAGA,EAAIsN,EAAQ43B,OAAOlrC,SAAUgG,EACzCmZ,EAAO+rB,OAAOllC,GAAKoiC,EAAMR,KAAKmD,eAAeV,SAAS/2B,EAAQ43B,OAAOllC,GAAI7C,GAEjF,GAAImQ,EAAQ84B,WAAa94B,EAAQ84B,UAAUpsC,OAEvC,IADAmf,EAAOitB,UAAY,GACVpmC,EAAI,EAAGA,EAAIsN,EAAQ84B,UAAUpsC,SAAUgG,EAC5CmZ,EAAOitB,UAAUpmC,GAAKoiC,EAAMR,KAAKmD,eAAeV,SAAS/2B,EAAQ84B,UAAUpmC,GAAI7C,GAEvF,GAAImQ,EAAQ+4B,wBAA0B/4B,EAAQ+4B,uBAAuBrsC,OAEjE,IADAmf,EAAOktB,uBAAyB,GACvBrmC,EAAI,EAAGA,EAAIsN,EAAQ+4B,uBAAuBrsC,SAAUgG,EACzDmZ,EAAOktB,uBAAuBrmC,GAAKoiC,EAAMR,KAAKoE,iBAAiB3B,SAAS/2B,EAAQ+4B,uBAAuBrmC,GAAI7C,GAEnH,OAAOgc,GAUXsqB,EAAWvX,UAAU2N,OAAS,WAC1B,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDrB,EAndO,GAsdlB7B,EAAK0B,YAAc,WA8Bf,SAASA,EAAYd,GASjB,GARApoC,KAAK6B,KAAO,GACZ7B,KAAKksC,UAAY,GACjBlsC,KAAKmsC,UAAY,GACjBnsC,KAAKosC,WAAa,GAClBpsC,KAAKqsC,UAAY,GACjBrsC,KAAKssC,aAAe,GACpBtsC,KAAKusC,WAAa,GAClBvsC,KAAKwsC,WAAa,GACdpE,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAw8BhD,OA/7BAupC,EAAYpX,UAAUjwB,KAAOimC,EAAMe,WAQnCK,EAAYpX,UAAU2a,SAAW,EAQjCvD,EAAYpX,UAAU4a,QAAU,KAQhCxD,EAAYpX,UAAUoa,UAAYpE,EAAMe,WAQxCK,EAAYpX,UAAUqa,UAAYrE,EAAMe,WAQxCK,EAAYpX,UAAUsa,WAAatE,EAAMe,WAQzCK,EAAYpX,UAAUua,UAAYvE,EAAMe,WAQxCK,EAAYpX,UAAU5yB,KAAO,GAQ7BgqC,EAAYpX,UAAU6W,UAAY,GAQlCO,EAAYpX,UAAU6a,QAAU7E,EAAMc,UAAU,IAQhDM,EAAYpX,UAAUwa,aAAexE,EAAMe,WAQ3CK,EAAYpX,UAAU8a,aAAe,EAQrC1D,EAAYpX,UAAUya,WAAazE,EAAMe,WAQzCK,EAAYpX,UAAU0a,WAAa1E,EAAMe,WAUzCK,EAAYrqB,OAAS,SAAgBupB,GACjC,OAAO,IAAIc,EAAYd,IAY3Bc,EAAY7X,OAAS,SAAgBne,EAAS41B,GAG1C,GAFKA,IACDA,EAASlB,EAAQ/oB,UACD,MAAhB3L,EAAQrR,MAAgBqR,EAAQrR,KAAKjC,OAAQ,CAC7CkpC,EAAOC,OAA8B,IAAII,OACzC,IAAK,IAAIxpC,EAAI,EAAGA,EAAIuT,EAAQrR,KAAKjC,SAAUD,EACvCmpC,EAAOG,MAAM/1B,EAAQrR,KAAKlC,IAC9BmpC,EAAOM,SAMX,GAJwB,MAApBl2B,EAAQu5B,UAAoBv5B,EAAQtP,eAAe,aACnDklC,EAAOC,OAA8B,IAAInS,MAAM1jB,EAAQu5B,UACpC,MAAnBv5B,EAAQw5B,SAAmBx5B,EAAQtP,eAAe,YAClDokC,EAAMR,KAAK0B,YAAY2D,QAAQxb,OAAOne,EAAQw5B,QAAS5D,EAAOC,OAA8B,IAAII,QAAQC,SACnF,MAArBl2B,EAAQg5B,WAAqBh5B,EAAQg5B,UAAUtsC,OAAQ,CAEvD,IADAkpC,EAAOC,OAA8B,IAAII,OAChCxpC,EAAI,EAAGA,EAAIuT,EAAQg5B,UAAUtsC,SAAUD,EAC5CmpC,EAAOE,MAAM91B,EAAQg5B,UAAUvsC,IACnCmpC,EAAOM,SAEX,GAAyB,MAArBl2B,EAAQi5B,WAAqBj5B,EAAQi5B,UAAUvsC,OAAQ,CAEvD,IADAkpC,EAAOC,OAA8B,IAAII,OAChCxpC,EAAI,EAAGA,EAAIuT,EAAQi5B,UAAUvsC,SAAUD,EAC5CmpC,EAAOlS,MAAM1jB,EAAQi5B,UAAUxsC,IACnCmpC,EAAOM,SAEX,GAA0B,MAAtBl2B,EAAQk5B,YAAsBl5B,EAAQk5B,WAAWxsC,OACjD,IAASD,EAAI,EAAGA,EAAIuT,EAAQk5B,WAAWxsC,SAAUD,EAC7CmpC,EAAOC,OAA8B,IAAIrQ,MAAMxlB,EAAQk5B,WAAWzsC,IAC1E,GAAyB,MAArBuT,EAAQm5B,WAAqBn5B,EAAQm5B,UAAUzsC,OAAQ,CAEvD,IADAkpC,EAAOC,OAA8B,IAAII,OAChCxpC,EAAI,EAAGA,EAAIuT,EAAQm5B,UAAUzsC,SAAUD,EAC5CmpC,EAAOG,MAAM/1B,EAAQm5B,UAAU1sC,IACnCmpC,EAAOM,SAMX,GAJoB,MAAhBl2B,EAAQhU,MAAgBgU,EAAQtP,eAAe,SAC/CklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQhU,MACrC,MAAnBgU,EAAQy5B,SAAmBz5B,EAAQtP,eAAe,YAClDklC,EAAOC,OAA8B,IAAIrQ,MAAMxlB,EAAQy5B,SACjC,MAAtBz5B,EAAQq5B,YAAsBr5B,EAAQq5B,WAAW3sC,OAAQ,CAEzD,IADAkpC,EAAOC,OAA+B,IAAII,OACjCxpC,EAAI,EAAGA,EAAIuT,EAAQq5B,WAAW3sC,SAAUD,EAC7CmpC,EAAOgE,OAAO55B,EAAQq5B,WAAW5sC,IACrCmpC,EAAOM,SAEX,GAA0B,MAAtBl2B,EAAQs5B,YAAsBt5B,EAAQs5B,WAAW5sC,OAAQ,CAEzD,IADAkpC,EAAOC,OAA+B,IAAII,OACjCxpC,EAAI,EAAGA,EAAIuT,EAAQs5B,WAAW5sC,SAAUD,EAC7CmpC,EAAOiE,OAAO75B,EAAQs5B,WAAW7sC,IACrCmpC,EAAOM,SAIX,GAFyB,MAArBl2B,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,cACpDklC,EAAOC,OAA+B,IAAI9X,OAAO/d,EAAQy1B,WACjC,MAAxBz1B,EAAQo5B,cAAwBp5B,EAAQo5B,aAAa1sC,OACrD,IAASD,EAAI,EAAGA,EAAIuT,EAAQo5B,aAAa1sC,SAAUD,EAC/CqoC,EAAMR,KAAKmE,uBAAuBta,OAAOne,EAAQo5B,aAAa3sC,GAAImpC,EAAOC,OAA+B,KAAKI,QAAQC,SAG7H,OAF4B,MAAxBl2B,EAAQ05B,cAAwB15B,EAAQtP,eAAe,iBACvDklC,EAAOC,OAA+B,KAAKnS,MAAM1jB,EAAQ05B,cACtD9D,GAYXI,EAAYI,gBAAkB,SAAyBp2B,EAAS41B,GAC5D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCF,EAAY39B,OAAS,SAAgBg+B,EAAQ3pC,GACnC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK0B,YACrFK,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EAGD,GAFMt2B,EAAQrR,MAAQqR,EAAQrR,KAAKjC,SAC/BsT,EAAQrR,KAAO,IACD,IAAP,EAAN2nC,GAED,IADA,IAAIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQrR,KAAK/B,KAAKypC,EAAON,cAE7B/1B,EAAQrR,KAAK/B,KAAKypC,EAAON,SAC7B,MACJ,KAAK,EACD/1B,EAAQu5B,SAAWlD,EAAO3S,QAC1B,MACJ,KAAK,EACD1jB,EAAQw5B,QAAU1E,EAAMR,KAAK0B,YAAY2D,QAAQthC,OAAOg+B,EAAQA,EAAOR,UACvE,MACJ,KAAK,EAGD,GAFM71B,EAAQg5B,WAAah5B,EAAQg5B,UAAUtsC,SACzCsT,EAAQg5B,UAAY,IACN,IAAP,EAAN1C,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQg5B,UAAUpsC,KAAKypC,EAAOP,cAElC91B,EAAQg5B,UAAUpsC,KAAKypC,EAAOP,SAClC,MACJ,KAAK,EAGD,GAFM91B,EAAQi5B,WAAaj5B,EAAQi5B,UAAUvsC,SACzCsT,EAAQi5B,UAAY,IACN,IAAP,EAAN3C,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQi5B,UAAUrsC,KAAKypC,EAAO3S,cAElC1jB,EAAQi5B,UAAUrsC,KAAKypC,EAAO3S,SAClC,MACJ,KAAK,EACK1jB,EAAQk5B,YAAcl5B,EAAQk5B,WAAWxsC,SAC3CsT,EAAQk5B,WAAa,IACzBl5B,EAAQk5B,WAAWtsC,KAAKypC,EAAO7Q,SAC/B,MACJ,KAAK,EAGD,GAFMxlB,EAAQm5B,WAAan5B,EAAQm5B,UAAUzsC,SACzCsT,EAAQm5B,UAAY,IACN,IAAP,EAAN7C,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQm5B,UAAUvsC,KAAKypC,EAAON,cAElC/1B,EAAQm5B,UAAUvsC,KAAKypC,EAAON,SAClC,MACJ,KAAK,EACD/1B,EAAQhU,KAAOqqC,EAAOtY,SACtB,MACJ,KAAK,GACD/d,EAAQy1B,UAAYY,EAAOtY,SAC3B,MACJ,KAAK,EACD/d,EAAQy5B,QAAUpD,EAAO7Q,QACzB,MACJ,KAAK,GACKxlB,EAAQo5B,cAAgBp5B,EAAQo5B,aAAa1sC,SAC/CsT,EAAQo5B,aAAe,IAC3Bp5B,EAAQo5B,aAAaxsC,KAAKkoC,EAAMR,KAAKmE,uBAAuBpgC,OAAOg+B,EAAQA,EAAOR,WAClF,MACJ,KAAK,GACD71B,EAAQ05B,aAAerD,EAAO3S,QAC9B,MACJ,KAAK,GAGD,GAFM1jB,EAAQq5B,YAAcr5B,EAAQq5B,WAAW3sC,SAC3CsT,EAAQq5B,WAAa,IACP,IAAP,EAAN/C,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQq5B,WAAWzsC,KAAKypC,EAAOuD,eAEnC55B,EAAQq5B,WAAWzsC,KAAKypC,EAAOuD,UACnC,MACJ,KAAK,GAGD,GAFM55B,EAAQs5B,YAAct5B,EAAQs5B,WAAW5sC,SAC3CsT,EAAQs5B,WAAa,IACP,IAAP,EAANhD,GAED,IADIC,EAAOF,EAAOR,SAAWQ,EAAO9W,IAC7B8W,EAAO9W,IAAMgX,GAChBv2B,EAAQs5B,WAAW1sC,KAAKypC,EAAOwD,eAEnC75B,EAAQs5B,WAAW1sC,KAAKypC,EAAOwD,UACnC,MACJ,QACIxD,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXg2B,EAAYS,gBAAkB,SAAyBJ,GAGnD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCG,EAAYU,OAAS,SAAgB12B,GACjC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAoB,MAAhBA,EAAQrR,MAAgBqR,EAAQtP,eAAe,QAAS,CACxD,IAAK9B,MAAMC,QAAQmR,EAAQrR,MACvB,MAAO,uBACX,IAAK,IAAIlC,EAAI,EAAGA,EAAIuT,EAAQrR,KAAKjC,SAAUD,EACvC,KAAKmoC,EAAMgC,UAAU52B,EAAQrR,KAAKlC,KAASuT,EAAQrR,KAAKlC,IAAMmoC,EAAMgC,UAAU52B,EAAQrR,KAAKlC,GAAGs3B,MAAQ6Q,EAAMgC,UAAU52B,EAAQrR,KAAKlC,GAAGu3B,OAClI,MAAO,gCAEnB,GAAwB,MAApBhkB,EAAQu5B,UAAoBv5B,EAAQtP,eAAe,cAC9CkkC,EAAMgC,UAAU52B,EAAQu5B,UACzB,MAAO,6BACf,GAAuB,MAAnBv5B,EAAQw5B,SAAmBx5B,EAAQtP,eAAe,aAC9CwF,EAAQ4+B,EAAMR,KAAK0B,YAAY2D,QAAQjD,OAAO12B,EAAQw5B,UAEtD,MAAO,WAAatjC,EAE5B,GAAyB,MAArB8J,EAAQg5B,WAAqBh5B,EAAQtP,eAAe,aAAc,CAClE,IAAK9B,MAAMC,QAAQmR,EAAQg5B,WACvB,MAAO,4BACX,IAASvsC,EAAI,EAAGA,EAAIuT,EAAQg5B,UAAUtsC,SAAUD,EAC5C,GAAoC,iBAAzBuT,EAAQg5B,UAAUvsC,GACzB,MAAO,+BAEnB,GAAyB,MAArBuT,EAAQi5B,WAAqBj5B,EAAQtP,eAAe,aAAc,CAClE,IAAK9B,MAAMC,QAAQmR,EAAQi5B,WACvB,MAAO,4BACX,IAASxsC,EAAI,EAAGA,EAAIuT,EAAQi5B,UAAUvsC,SAAUD,EAC5C,IAAKmoC,EAAMgC,UAAU52B,EAAQi5B,UAAUxsC,IACnC,MAAO,gCAEnB,GAA0B,MAAtBuT,EAAQk5B,YAAsBl5B,EAAQtP,eAAe,cAAe,CACpE,IAAK9B,MAAMC,QAAQmR,EAAQk5B,YACvB,MAAO,6BACX,IAASzsC,EAAI,EAAGA,EAAIuT,EAAQk5B,WAAWxsC,SAAUD,EAC7C,KAAMuT,EAAQk5B,WAAWzsC,IAA8C,iBAAjCuT,EAAQk5B,WAAWzsC,GAAGC,QAAuBkoC,EAAM+B,SAAS32B,EAAQk5B,WAAWzsC,KACjH,MAAO,gCAEnB,GAAyB,MAArBuT,EAAQm5B,WAAqBn5B,EAAQtP,eAAe,aAAc,CAClE,IAAK9B,MAAMC,QAAQmR,EAAQm5B,WACvB,MAAO,4BACX,IAAS1sC,EAAI,EAAGA,EAAIuT,EAAQm5B,UAAUzsC,SAAUD,EAC5C,KAAKmoC,EAAMgC,UAAU52B,EAAQm5B,UAAU1sC,KAASuT,EAAQm5B,UAAU1sC,IAAMmoC,EAAMgC,UAAU52B,EAAQm5B,UAAU1sC,GAAGs3B,MAAQ6Q,EAAMgC,UAAU52B,EAAQm5B,UAAU1sC,GAAGu3B,OACtJ,MAAO,qCAEnB,GAAoB,MAAhBhkB,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC1CkkC,EAAM+B,SAAS32B,EAAQhU,MACxB,MAAO,wBACf,GAAyB,MAArBgU,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eAC/CkkC,EAAM+B,SAAS32B,EAAQy1B,WACxB,MAAO,6BACf,GAAuB,MAAnBz1B,EAAQy5B,SAAmBz5B,EAAQtP,eAAe,cAC5CsP,EAAQy5B,SAA6C,iBAA3Bz5B,EAAQy5B,QAAQ/sC,QAAuBkoC,EAAM+B,SAAS32B,EAAQy5B,UAC1F,MAAO,2BACf,GAA4B,MAAxBz5B,EAAQo5B,cAAwBp5B,EAAQtP,eAAe,gBAAiB,CACxE,IAAK9B,MAAMC,QAAQmR,EAAQo5B,cACvB,MAAO,+BACX,IAAS3sC,EAAI,EAAGA,EAAIuT,EAAQo5B,aAAa1sC,SAAUD,EAAG,CAClD,IAAIyJ,EACJ,GADIA,EAAQ4+B,EAAMR,KAAKmE,uBAAuB/B,OAAO12B,EAAQo5B,aAAa3sC,IAEtE,MAAO,gBAAkByJ,GAGrC,GAA4B,MAAxB8J,EAAQ05B,cAAwB15B,EAAQtP,eAAe,gBACvD,OAAQsP,EAAQ05B,cAChB,QACI,MAAO,oCACX,KAAK,EACL,KAAK,GAGT,GAA0B,MAAtB15B,EAAQq5B,YAAsBr5B,EAAQtP,eAAe,cAAe,CACpE,IAAK9B,MAAMC,QAAQmR,EAAQq5B,YACvB,MAAO,6BACX,IAAS5sC,EAAI,EAAGA,EAAIuT,EAAQq5B,WAAW3sC,SAAUD,EAC7C,GAAqC,iBAA1BuT,EAAQq5B,WAAW5sC,GAC1B,MAAO,gCAEnB,GAA0B,MAAtBuT,EAAQs5B,YAAsBt5B,EAAQtP,eAAe,cAAe,CACpE,IAAK9B,MAAMC,QAAQmR,EAAQs5B,YACvB,MAAO,6BACX,IAAS7sC,EAAI,EAAGA,EAAIuT,EAAQs5B,WAAW5sC,SAAUD,EAC7C,KAAKmoC,EAAMgC,UAAU52B,EAAQs5B,WAAW7sC,KAASuT,EAAQs5B,WAAW7sC,IAAMmoC,EAAMgC,UAAU52B,EAAQs5B,WAAW7sC,GAAGs3B,MAAQ6Q,EAAMgC,UAAU52B,EAAQs5B,WAAW7sC,GAAGu3B,OAC1J,MAAO,sCAEnB,OAAO,MAWXgS,EAAYa,WAAa,SAAoBhrB,GACzC,GAAIA,aAAkBipB,EAAMR,KAAK0B,YAC7B,OAAOnqB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK0B,YAC7B,GAAInqB,EAAOld,KAAM,CACb,IAAKC,MAAMC,QAAQgd,EAAOld,MACtB,MAAMtC,UAAU,0CACpB2T,EAAQrR,KAAO,GACf,IAAK,IAAIlC,EAAI,EAAGA,EAAIof,EAAOld,KAAKjC,SAAUD,EAClCmoC,EAAM9Q,MACL9jB,EAAQrR,KAAKlC,GAAKmoC,EAAM9Q,KAAKyK,UAAU1iB,EAAOld,KAAKlC,KAAKigC,UAAW,EACrC,iBAAnB7gB,EAAOld,KAAKlC,GACxBuT,EAAQrR,KAAKlC,GAAK2hC,SAASviB,EAAOld,KAAKlC,GAAI,IACZ,iBAAnBof,EAAOld,KAAKlC,GACxBuT,EAAQrR,KAAKlC,GAAKof,EAAOld,KAAKlC,GACC,iBAAnBof,EAAOld,KAAKlC,KACxBuT,EAAQrR,KAAKlC,GAAK,IAAImoC,EAAMkC,SAASjrB,EAAOld,KAAKlC,GAAGs3B,MAAQ,EAAGlY,EAAOld,KAAKlC,GAAGu3B,OAAS,GAAG+K,YAItG,GAFuB,MAAnBljB,EAAO0tB,WACPv5B,EAAQu5B,SAA6B,EAAlB1tB,EAAO0tB,UACR,MAAlB1tB,EAAO2tB,QAAiB,CACxB,GAA8B,iBAAnB3tB,EAAO2tB,QACd,MAAMntC,UAAU,8CACpB2T,EAAQw5B,QAAU1E,EAAMR,KAAK0B,YAAY2D,QAAQ9C,WAAWhrB,EAAO2tB,SAEvE,GAAI3tB,EAAOmtB,UAAW,CAClB,IAAKpqC,MAAMC,QAAQgd,EAAOmtB,WACtB,MAAM3sC,UAAU,+CAEpB,IADA2T,EAAQg5B,UAAY,GACXvsC,EAAI,EAAGA,EAAIof,EAAOmtB,UAAUtsC,SAAUD,EAC3CuT,EAAQg5B,UAAUvsC,GAAK4C,OAAOwc,EAAOmtB,UAAUvsC,IAEvD,GAAIof,EAAOotB,UAAW,CAClB,IAAKrqC,MAAMC,QAAQgd,EAAOotB,WACtB,MAAM5sC,UAAU,+CAEpB,IADA2T,EAAQi5B,UAAY,GACXxsC,EAAI,EAAGA,EAAIof,EAAOotB,UAAUvsC,SAAUD,EAC3CuT,EAAQi5B,UAAUxsC,GAA2B,EAAtBof,EAAOotB,UAAUxsC,GAEhD,GAAIof,EAAOqtB,WAAY,CACnB,IAAKtqC,MAAMC,QAAQgd,EAAOqtB,YACtB,MAAM7sC,UAAU,gDAEpB,IADA2T,EAAQk5B,WAAa,GACZzsC,EAAI,EAAGA,EAAIof,EAAOqtB,WAAWxsC,SAAUD,EACR,iBAAzBof,EAAOqtB,WAAWzsC,GACzBmoC,EAAM9W,OAAOzlB,OAAOwT,EAAOqtB,WAAWzsC,GAAIuT,EAAQk5B,WAAWzsC,GAAKmoC,EAAMc,UAAUd,EAAM9W,OAAOpxB,OAAOmf,EAAOqtB,WAAWzsC,KAAM,GACzHof,EAAOqtB,WAAWzsC,GAAGC,SAC1BsT,EAAQk5B,WAAWzsC,GAAKof,EAAOqtB,WAAWzsC,IAEtD,GAAIof,EAAOstB,UAAW,CAClB,IAAKvqC,MAAMC,QAAQgd,EAAOstB,WACtB,MAAM9sC,UAAU,+CAEpB,IADA2T,EAAQm5B,UAAY,GACX1sC,EAAI,EAAGA,EAAIof,EAAOstB,UAAUzsC,SAAUD,EACvCmoC,EAAM9Q,MACL9jB,EAAQm5B,UAAU1sC,GAAKmoC,EAAM9Q,KAAKyK,UAAU1iB,EAAOstB,UAAU1sC,KAAKigC,UAAW,EAC1C,iBAAxB7gB,EAAOstB,UAAU1sC,GAC7BuT,EAAQm5B,UAAU1sC,GAAK2hC,SAASviB,EAAOstB,UAAU1sC,GAAI,IACjB,iBAAxBof,EAAOstB,UAAU1sC,GAC7BuT,EAAQm5B,UAAU1sC,GAAKof,EAAOstB,UAAU1sC,GACJ,iBAAxBof,EAAOstB,UAAU1sC,KAC7BuT,EAAQm5B,UAAU1sC,GAAK,IAAImoC,EAAMkC,SAASjrB,EAAOstB,UAAU1sC,GAAGs3B,MAAQ,EAAGlY,EAAOstB,UAAU1sC,GAAGu3B,OAAS,GAAG+K,YAWrH,GATmB,MAAfljB,EAAO7f,OACPgU,EAAQhU,KAAOyM,OAAOoT,EAAO7f,OACT,MAApB6f,EAAO4pB,YACPz1B,EAAQy1B,UAAYh9B,OAAOoT,EAAO4pB,YAChB,MAAlB5pB,EAAO4tB,UACuB,iBAAnB5tB,EAAO4tB,QACd7E,EAAM9W,OAAOzlB,OAAOwT,EAAO4tB,QAASz5B,EAAQy5B,QAAU7E,EAAMc,UAAUd,EAAM9W,OAAOpxB,OAAOmf,EAAO4tB,UAAW,GACvG5tB,EAAO4tB,QAAQ/sC,SACpBsT,EAAQy5B,QAAU5tB,EAAO4tB,UAC7B5tB,EAAOutB,aAAc,CACrB,IAAKxqC,MAAMC,QAAQgd,EAAOutB,cACtB,MAAM/sC,UAAU,kDAEpB,IADA2T,EAAQo5B,aAAe,GACd3sC,EAAI,EAAGA,EAAIof,EAAOutB,aAAa1sC,SAAUD,EAAG,CACjD,GAAsC,iBAA3Bof,EAAOutB,aAAa3sC,GAC3B,MAAMJ,UAAU,mDACpB2T,EAAQo5B,aAAa3sC,GAAKqoC,EAAMR,KAAKmE,uBAAuB5B,WAAWhrB,EAAOutB,aAAa3sC,KAGnG,OAAQof,EAAO6tB,cACf,IAAK,UACL,KAAK,EACD15B,EAAQ05B,aAAe,EACvB,MACJ,IAAK,WACL,KAAK,EACD15B,EAAQ05B,aAAe,EAG3B,GAAI7tB,EAAOwtB,WAAY,CACnB,IAAKzqC,MAAMC,QAAQgd,EAAOwtB,YACtB,MAAMhtC,UAAU,gDAEpB,IADA2T,EAAQq5B,WAAa,GACZ5sC,EAAI,EAAGA,EAAIof,EAAOwtB,WAAW3sC,SAAUD,EAC5CuT,EAAQq5B,WAAW5sC,GAAK4C,OAAOwc,EAAOwtB,WAAW5sC,IAEzD,GAAIof,EAAOytB,WAAY,CACnB,IAAK1qC,MAAMC,QAAQgd,EAAOytB,YACtB,MAAMjtC,UAAU,gDAEpB,IADA2T,EAAQs5B,WAAa,GACZ7sC,EAAI,EAAGA,EAAIof,EAAOytB,WAAW5sC,SAAUD,EACxCmoC,EAAM9Q,MACL9jB,EAAQs5B,WAAW7sC,GAAKmoC,EAAM9Q,KAAKyK,UAAU1iB,EAAOytB,WAAW7sC,KAAKigC,UAAW,EAC3C,iBAAzB7gB,EAAOytB,WAAW7sC,GAC9BuT,EAAQs5B,WAAW7sC,GAAK2hC,SAASviB,EAAOytB,WAAW7sC,GAAI,IAClB,iBAAzBof,EAAOytB,WAAW7sC,GAC9BuT,EAAQs5B,WAAW7sC,GAAKof,EAAOytB,WAAW7sC,GACL,iBAAzBof,EAAOytB,WAAW7sC,KAC9BuT,EAAQs5B,WAAW7sC,GAAK,IAAImoC,EAAMkC,SAASjrB,EAAOytB,WAAW7sC,GAAGs3B,MAAQ,EAAGlY,EAAOytB,WAAW7sC,GAAGu3B,OAAS,GAAG+K,UAAS,IAEjI,OAAO/uB,GAYXg2B,EAAYe,SAAW,SAAkB/2B,EAASnQ,GACzCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAyBb,IAxBIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOld,KAAO,GACdkd,EAAOmtB,UAAY,GACnBntB,EAAOotB,UAAY,GACnBptB,EAAOqtB,WAAa,GACpBrtB,EAAOstB,UAAY,GACnBttB,EAAOwtB,WAAa,GACpBxtB,EAAOytB,WAAa,GACpBztB,EAAOutB,aAAe,IAEtBvpC,EAAQonC,WACRprB,EAAO0tB,SAAW,EAClB1tB,EAAO2tB,QAAU,KACjB3tB,EAAO7f,KAAO,GACV6D,EAAQ21B,QAAU/sB,OAClBoT,EAAO4tB,QAAU,IAEjB5tB,EAAO4tB,QAAU,GACb5pC,EAAQ21B,QAAU52B,QAClBid,EAAO4tB,QAAU7E,EAAMc,UAAU7pB,EAAO4tB,WAEhD5tB,EAAO4pB,UAAY,GACnB5pB,EAAO6tB,aAAe7pC,EAAQunC,QAAU3+B,OAAS,UAAY,GAE7DuH,EAAQrR,MAAQqR,EAAQrR,KAAKjC,OAAQ,CACrCmf,EAAOld,KAAO,GACd,IAAK,IAAI+D,EAAI,EAAGA,EAAIsN,EAAQrR,KAAKjC,SAAUgG,EACR,iBAApBsN,EAAQrR,KAAK+D,GACpBmZ,EAAOld,KAAK+D,GAAK7C,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQrR,KAAK+D,IAAMsN,EAAQrR,KAAK+D,GAEnFmZ,EAAOld,KAAK+D,GAAK7C,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQrR,KAAK+D,IAAM7C,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQrR,KAAK+D,GAAGqxB,MAAQ,EAAG/jB,EAAQrR,KAAK+D,GAAGsxB,OAAS,GAAG+K,WAAa/uB,EAAQrR,KAAK+D,GAM7O,GAJwB,MAApBsN,EAAQu5B,UAAoBv5B,EAAQtP,eAAe,cACnDmb,EAAO0tB,SAAWv5B,EAAQu5B,UACP,MAAnBv5B,EAAQw5B,SAAmBx5B,EAAQtP,eAAe,aAClDmb,EAAO2tB,QAAU1E,EAAMR,KAAK0B,YAAY2D,QAAQ5C,SAAS/2B,EAAQw5B,QAAS3pC,IAC1EmQ,EAAQg5B,WAAah5B,EAAQg5B,UAAUtsC,OAEvC,IADAmf,EAAOmtB,UAAY,GACVtmC,EAAI,EAAGA,EAAIsN,EAAQg5B,UAAUtsC,SAAUgG,EAC5CmZ,EAAOmtB,UAAUtmC,GAAK7C,EAAQwnC,OAASC,SAASt3B,EAAQg5B,UAAUtmC,IAAM+F,OAAOuH,EAAQg5B,UAAUtmC,IAAMsN,EAAQg5B,UAAUtmC,GAEjI,GAAIsN,EAAQi5B,WAAaj5B,EAAQi5B,UAAUvsC,OAEvC,IADAmf,EAAOotB,UAAY,GACVvmC,EAAI,EAAGA,EAAIsN,EAAQi5B,UAAUvsC,SAAUgG,EAC5CmZ,EAAOotB,UAAUvmC,GAAKsN,EAAQi5B,UAAUvmC,GAEhD,GAAIsN,EAAQk5B,YAAcl5B,EAAQk5B,WAAWxsC,OAEzC,IADAmf,EAAOqtB,WAAa,GACXxmC,EAAI,EAAGA,EAAIsN,EAAQk5B,WAAWxsC,SAAUgG,EAC7CmZ,EAAOqtB,WAAWxmC,GAAK7C,EAAQ21B,QAAU/sB,OAASm8B,EAAM9W,OAAOK,OAAOne,EAAQk5B,WAAWxmC,GAAI,EAAGsN,EAAQk5B,WAAWxmC,GAAGhG,QAAUmD,EAAQ21B,QAAU52B,MAAQA,MAAMgwB,UAAUrpB,MAAM5E,KAAKqP,EAAQk5B,WAAWxmC,IAAMsN,EAAQk5B,WAAWxmC,GAEzO,GAAIsN,EAAQm5B,WAAan5B,EAAQm5B,UAAUzsC,OAEvC,IADAmf,EAAOstB,UAAY,GACVzmC,EAAI,EAAGA,EAAIsN,EAAQm5B,UAAUzsC,SAAUgG,EACR,iBAAzBsN,EAAQm5B,UAAUzmC,GACzBmZ,EAAOstB,UAAUzmC,GAAK7C,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQm5B,UAAUzmC,IAAMsN,EAAQm5B,UAAUzmC,GAElGmZ,EAAOstB,UAAUzmC,GAAK7C,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQm5B,UAAUzmC,IAAM7C,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQm5B,UAAUzmC,GAAGqxB,MAAQ,EAAG/jB,EAAQm5B,UAAUzmC,GAAGsxB,OAAS,GAAG+K,WAAa/uB,EAAQm5B,UAAUzmC,GAMtQ,GAJoB,MAAhBsN,EAAQhU,MAAgBgU,EAAQtP,eAAe,UAC/Cmb,EAAO7f,KAAOgU,EAAQhU,MACH,MAAnBgU,EAAQy5B,SAAmBz5B,EAAQtP,eAAe,aAClDmb,EAAO4tB,QAAU5pC,EAAQ21B,QAAU/sB,OAASm8B,EAAM9W,OAAOK,OAAOne,EAAQy5B,QAAS,EAAGz5B,EAAQy5B,QAAQ/sC,QAAUmD,EAAQ21B,QAAU52B,MAAQA,MAAMgwB,UAAUrpB,MAAM5E,KAAKqP,EAAQy5B,SAAWz5B,EAAQy5B,SAC9Lz5B,EAAQq5B,YAAcr5B,EAAQq5B,WAAW3sC,OAEzC,IADAmf,EAAOwtB,WAAa,GACX3mC,EAAI,EAAGA,EAAIsN,EAAQq5B,WAAW3sC,SAAUgG,EAC7CmZ,EAAOwtB,WAAW3mC,GAAK7C,EAAQwnC,OAASC,SAASt3B,EAAQq5B,WAAW3mC,IAAM+F,OAAOuH,EAAQq5B,WAAW3mC,IAAMsN,EAAQq5B,WAAW3mC,GAErI,GAAIsN,EAAQs5B,YAAct5B,EAAQs5B,WAAW5sC,OAEzC,IADAmf,EAAOytB,WAAa,GACX5mC,EAAI,EAAGA,EAAIsN,EAAQs5B,WAAW5sC,SAAUgG,EACR,iBAA1BsN,EAAQs5B,WAAW5mC,GAC1BmZ,EAAOytB,WAAW5mC,GAAK7C,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQs5B,WAAW5mC,IAAMsN,EAAQs5B,WAAW5mC,GAErGmZ,EAAOytB,WAAW5mC,GAAK7C,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQs5B,WAAW5mC,IAAM7C,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQs5B,WAAW5mC,GAAGqxB,MAAQ,EAAG/jB,EAAQs5B,WAAW5mC,GAAGsxB,OAAS,GAAG+K,UAAS,GAAQ/uB,EAAQs5B,WAAW5mC,GAI/Q,GAFyB,MAArBsN,EAAQy1B,WAAqBz1B,EAAQtP,eAAe,eACpDmb,EAAO4pB,UAAYz1B,EAAQy1B,WAC3Bz1B,EAAQo5B,cAAgBp5B,EAAQo5B,aAAa1sC,OAE7C,IADAmf,EAAOutB,aAAe,GACb1mC,EAAI,EAAGA,EAAIsN,EAAQo5B,aAAa1sC,SAAUgG,EAC/CmZ,EAAOutB,aAAa1mC,GAAKoiC,EAAMR,KAAKmE,uBAAuB1B,SAAS/2B,EAAQo5B,aAAa1mC,GAAI7C,GAIrG,OAF4B,MAAxBmQ,EAAQ05B,cAAwB15B,EAAQtP,eAAe,kBACvDmb,EAAO6tB,aAAe7pC,EAAQunC,QAAU3+B,OAASq8B,EAAMR,KAAK0B,YAAY8D,aAAa95B,EAAQ05B,cAAgB15B,EAAQ05B,cAClH7tB,GAUXmqB,EAAYpX,UAAU2N,OAAS,WAC3B,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAyB1DxB,EAAY+D,SAAW,WACnB,IAAI3F,EAAa,GAAIC,EAASnkC,OAAOyb,OAAOyoB,GAkB5C,OAjBAC,EAAOD,EAAW,GAAK,aAAe,EACtCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,QAAU,EACjCC,EAAOD,EAAW,GAAK,UAAY,EACnCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,SAAW,EAClCC,EAAOD,EAAW,GAAK,UAAY,EACnCC,EAAOD,EAAW,GAAK,QAAU,EACjCC,EAAOD,EAAW,IAAM,WAAa,GACrCC,EAAOD,EAAW,IAAM,UAAY,GACpCC,EAAOD,EAAW,IAAM,UAAY,GACpCC,EAAOD,EAAW,IAAM,UAAY,GACpCC,EAAOD,EAAW,IAAM,aAAe,GACvCC,EAAOD,EAAW,IAAM,cAAgB,GACxCC,EAAOD,EAAW,IAAM,YAAc,GAC/BC,EAnBY,GAsBvB2B,EAAY2D,QAAU,WAkBlB,SAASA,EAAQzE,GACb,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAqNhD,OA5MAktC,EAAQ/a,UAAUob,MAAQpF,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAQxEwM,EAAQ/a,UAAUP,IAAMuW,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAUtEwM,EAAQhuB,OAAS,SAAgBupB,GAC7B,OAAO,IAAIyE,EAAQzE,IAYvByE,EAAQxb,OAAS,SAAgBne,EAAS41B,GAOtC,OANKA,IACDA,EAASlB,EAAQ/oB,UACA,MAAjB3L,EAAQg6B,OAAiBh6B,EAAQtP,eAAe,UAChDklC,EAAOC,OAA8B,GAAGE,MAAM/1B,EAAQg6B,OACvC,MAAfh6B,EAAQqe,KAAere,EAAQtP,eAAe,QAC9CklC,EAAOC,OAA8B,IAAIE,MAAM/1B,EAAQqe,KACpDuX,GAYX+D,EAAQvD,gBAAkB,SAAyBp2B,EAAS41B,GACxD,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCyD,EAAQthC,OAAS,SAAgBg+B,EAAQ3pC,GAC/B2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK0B,YAAY2D,QACjGtD,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQg6B,MAAQ3D,EAAON,QACvB,MACJ,KAAK,EACD/1B,EAAQqe,IAAMgY,EAAON,QACrB,MACJ,QACIM,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaX25B,EAAQlD,gBAAkB,SAAyBJ,GAG/C,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC8D,EAAQjD,OAAS,SAAgB12B,GAC7B,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACU,MAAjBA,EAAQg6B,OAAiBh6B,EAAQtP,eAAe,YAC3CkkC,EAAMgC,UAAU52B,EAAQg6B,QAAYh6B,EAAQg6B,OAASpF,EAAMgC,UAAU52B,EAAQg6B,MAAMjW,MAAQ6Q,EAAMgC,UAAU52B,EAAQg6B,MAAMhW,OACnH,+BACI,MAAfhkB,EAAQqe,KAAere,EAAQtP,eAAe,UACzCkkC,EAAMgC,UAAU52B,EAAQqe,MAAUre,EAAQqe,KAAOuW,EAAMgC,UAAU52B,EAAQqe,IAAI0F,MAAQ6Q,EAAMgC,UAAU52B,EAAQqe,IAAI2F,OAC3G,6BACR,MAWX2V,EAAQ9C,WAAa,SAAoBhrB,GACrC,GAAIA,aAAkBipB,EAAMR,KAAK0B,YAAY2D,QACzC,OAAO9tB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK0B,YAAY2D,QAmBzC,OAlBoB,MAAhB9tB,EAAOmuB,QACHpF,EAAM9Q,MACL9jB,EAAQg6B,MAAQpF,EAAM9Q,KAAKyK,UAAU1iB,EAAOmuB,QAAQtN,UAAW,EACnC,iBAAjB7gB,EAAOmuB,MACnBh6B,EAAQg6B,MAAQ5L,SAASviB,EAAOmuB,MAAO,IACV,iBAAjBnuB,EAAOmuB,MACnBh6B,EAAQg6B,MAAQnuB,EAAOmuB,MACM,iBAAjBnuB,EAAOmuB,QACnBh6B,EAAQg6B,MAAQ,IAAIpF,EAAMkC,SAASjrB,EAAOmuB,MAAMjW,MAAQ,EAAGlY,EAAOmuB,MAAMhW,OAAS,GAAG+K,aAC1E,MAAdljB,EAAOwS,MACHuW,EAAM9Q,MACL9jB,EAAQqe,IAAMuW,EAAM9Q,KAAKyK,UAAU1iB,EAAOwS,MAAMqO,UAAW,EACjC,iBAAf7gB,EAAOwS,IACnBre,EAAQqe,IAAM+P,SAASviB,EAAOwS,IAAK,IACR,iBAAfxS,EAAOwS,IACnBre,EAAQqe,IAAMxS,EAAOwS,IACM,iBAAfxS,EAAOwS,MACnBre,EAAQqe,IAAM,IAAIuW,EAAMkC,SAASjrB,EAAOwS,IAAI0F,MAAQ,EAAGlY,EAAOwS,IAAI2F,OAAS,GAAG+K,aAC/E/uB,GAYX25B,EAAQ5C,SAAW,SAAkB/2B,EAASnQ,GACrCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GACb,GAAIhc,EAAQonC,SAAU,CAClB,GAAIrC,EAAM9Q,KAAM,CACZ,IAAIoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOmuB,MAAQnqC,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,OAEzGrrB,EAAOmuB,MAAQnqC,EAAQsnC,QAAU1+B,OAAS,IAAM,EAChDm8B,EAAM9Q,MACFoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOwS,IAAMxuB,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,GAEvGrrB,EAAOwS,IAAMxuB,EAAQsnC,QAAU1+B,OAAS,IAAM,EAYtD,OAVqB,MAAjBuH,EAAQg6B,OAAiBh6B,EAAQtP,eAAe,WACnB,iBAAlBsP,EAAQg6B,MACfnuB,EAAOmuB,MAAQnqC,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQg6B,OAASh6B,EAAQg6B,MAE1EnuB,EAAOmuB,MAAQnqC,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQg6B,OAASnqC,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQg6B,MAAMjW,MAAQ,EAAG/jB,EAAQg6B,MAAMhW,OAAS,GAAG+K,WAAa/uB,EAAQg6B,OACzM,MAAfh6B,EAAQqe,KAAere,EAAQtP,eAAe,SACnB,iBAAhBsP,EAAQqe,IACfxS,EAAOwS,IAAMxuB,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQqe,KAAOre,EAAQqe,IAEtExS,EAAOwS,IAAMxuB,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQqe,KAAOxuB,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQqe,IAAI0F,MAAQ,EAAG/jB,EAAQqe,IAAI2F,OAAS,GAAG+K,WAAa/uB,EAAQqe,KAC7MxS,GAUX8tB,EAAQ/a,UAAU2N,OAAS,WACvB,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDmC,EA3OW,GAqPtB3D,EAAY8D,aAAe,WACvB,IAAI1F,EAAa,GAAIC,EAASnkC,OAAOyb,OAAOyoB,GAG5C,OAFAC,EAAOD,EAAW,GAAK,WAAa,EACpCC,EAAOD,EAAW,GAAK,YAAc,EAC9BC,EAJgB,GAOpB2B,EAl/BQ,GAq/BnB1B,EAAK2F,iBAAmB,WAiBpB,SAASA,EAAiB/E,GAEtB,GADApoC,KAAKsC,IAAM,GACP8lC,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAichD,OAxbAwtC,EAAiBrb,UAAUxvB,IAAMwlC,EAAMe,WAUvCsE,EAAiBtuB,OAAS,SAAgBupB,GACtC,OAAO,IAAI+E,EAAiB/E,IAYhC+E,EAAiB9b,OAAS,SAAgBne,EAAS41B,GAG/C,GAFKA,IACDA,EAASlB,EAAQ/oB,UACF,MAAf3L,EAAQ5Q,KAAe4Q,EAAQ5Q,IAAI1C,OACnC,IAAK,IAAID,EAAI,EAAGA,EAAIuT,EAAQ5Q,IAAI1C,SAAUD,EACtCqoC,EAAMR,KAAK2F,iBAAiBC,UAAU/b,OAAOne,EAAQ5Q,IAAI3C,GAAImpC,EAAOC,OAA8B,IAAII,QAAQC,SACtH,OAAON,GAYXqE,EAAiB7D,gBAAkB,SAAyBp2B,EAAS41B,GACjE,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxC+D,EAAiB5hC,OAAS,SAAgBg+B,EAAQ3pC,GACxC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK2F,iBACrF5D,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACKt2B,EAAQ5Q,KAAO4Q,EAAQ5Q,IAAI1C,SAC7BsT,EAAQ5Q,IAAM,IAClB4Q,EAAQ5Q,IAAIxC,KAAKkoC,EAAMR,KAAK2F,iBAAiBC,UAAU7hC,OAAOg+B,EAAQA,EAAOR,WAC7E,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXi6B,EAAiBxD,gBAAkB,SAAyBJ,GAGxD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCoE,EAAiBvD,OAAS,SAAgB12B,GACtC,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAmB,MAAfA,EAAQ5Q,KAAe4Q,EAAQtP,eAAe,OAAQ,CACtD,IAAK9B,MAAMC,QAAQmR,EAAQ5Q,KACvB,MAAO,sBACX,IAAK,IAAI3C,EAAI,EAAGA,EAAIuT,EAAQ5Q,IAAI1C,SAAUD,EAAG,CACzC,IAAIyJ,EAAQ4+B,EAAMR,KAAK2F,iBAAiBC,UAAUxD,OAAO12B,EAAQ5Q,IAAI3C,IACrE,GAAIyJ,EACA,MAAO,OAASA,GAG5B,OAAO,MAWX+jC,EAAiBpD,WAAa,SAAoBhrB,GAC9C,GAAIA,aAAkBipB,EAAMR,KAAK2F,iBAC7B,OAAOpuB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK2F,iBAC7B,GAAIpuB,EAAOzc,IAAK,CACZ,IAAKR,MAAMC,QAAQgd,EAAOzc,KACtB,MAAM/C,UAAU,8CACpB2T,EAAQ5Q,IAAM,GACd,IAAK,IAAI3C,EAAI,EAAGA,EAAIof,EAAOzc,IAAI1C,SAAUD,EAAG,CACxC,GAA6B,iBAAlBof,EAAOzc,IAAI3C,GAClB,MAAMJ,UAAU,+CACpB2T,EAAQ5Q,IAAI3C,GAAKqoC,EAAMR,KAAK2F,iBAAiBC,UAAUrD,WAAWhrB,EAAOzc,IAAI3C,KAGrF,OAAOuT,GAYXi6B,EAAiBlD,SAAW,SAAkB/2B,EAASnQ,GAC9CA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAGb,IAFIhc,EAAQmnC,QAAUnnC,EAAQonC,YAC1BprB,EAAOzc,IAAM,IACb4Q,EAAQ5Q,KAAO4Q,EAAQ5Q,IAAI1C,OAAQ,CACnCmf,EAAOzc,IAAM,GACb,IAAK,IAAIsD,EAAI,EAAGA,EAAIsN,EAAQ5Q,IAAI1C,SAAUgG,EACtCmZ,EAAOzc,IAAIsD,GAAKoiC,EAAMR,KAAK2F,iBAAiBC,UAAUnD,SAAS/2B,EAAQ5Q,IAAIsD,GAAI7C,GAEvF,OAAOgc,GAUXouB,EAAiBrb,UAAU2N,OAAS,WAChC,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAG1DyC,EAAiBC,UAAY,WAmBzB,SAASA,EAAUhF,GACf,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KA4BhD,IAAI0tC,EAoNJ,OAvOAD,EAAUtb,UAAUwb,SAAWxF,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAQ7E+M,EAAUtb,UAAUyb,SAAW,GAQ/BH,EAAUtb,UAAU0b,WAAa,GAWjCpqC,OAAO28B,eAAeqN,EAAUtb,UAAW,QAAS,CAChD7vB,IAAK6lC,EAAM2F,YAAYJ,EAAe,CAAC,WAAY,aACnD/rC,IAAKwmC,EAAM4F,YAAYL,KAW3BD,EAAUvuB,OAAS,SAAgBupB,GAC/B,OAAO,IAAIgF,EAAUhF,IAYzBgF,EAAU/b,OAAS,SAAgBne,EAAS41B,GASxC,OARKA,IACDA,EAASlB,EAAQ/oB,UACG,MAApB3L,EAAQo6B,UAAoBp6B,EAAQtP,eAAe,aACnDklC,EAAOC,OAA8B,GAAGE,MAAM/1B,EAAQo6B,UAClC,MAApBp6B,EAAQq6B,UAAoBr6B,EAAQtP,eAAe,aACnDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQq6B,UAClC,MAAtBr6B,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,eACrDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQs6B,YACrD1E,GAYXsE,EAAU9D,gBAAkB,SAAyBp2B,EAAS41B,GAC1D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCgE,EAAU7hC,OAAS,SAAgBg+B,EAAQ3pC,GACjC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAK2F,iBAAiBC,UACtG7D,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQo6B,SAAW/D,EAAON,QAC1B,MACJ,KAAK,EACD/1B,EAAQq6B,SAAWhE,EAAOtY,SAC1B,MACJ,KAAK,EACD/d,EAAQs6B,WAAajE,EAAOtY,SAC5B,MACJ,QACIsY,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXk6B,EAAUzD,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCqE,EAAUxD,OAAS,SAAgB12B,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,IAAIk1B,EAAa,GACjB,GAAwB,MAApBl1B,EAAQo6B,UAAoBp6B,EAAQtP,eAAe,cACnDwkC,EAAWhoC,MAAQ,IACd0nC,EAAMgC,UAAU52B,EAAQo6B,WAAep6B,EAAQo6B,UAAYxF,EAAMgC,UAAU52B,EAAQo6B,SAASrW,MAAQ6Q,EAAMgC,UAAU52B,EAAQo6B,SAASpW,QACtI,MAAO,kCAEf,GAAwB,MAApBhkB,EAAQq6B,UAAoBr6B,EAAQtP,eAAe,YAAa,CAChE,GAAyB,IAArBwkC,EAAWhoC,MACX,MAAO,yBAEX,GADAgoC,EAAWhoC,MAAQ,GACd0nC,EAAM+B,SAAS32B,EAAQq6B,UACxB,MAAO,4BAEf,OAA0B,MAAtBr6B,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,gBAChDkkC,EAAM+B,SAAS32B,EAAQs6B,YACjB,8BACR,MAWXJ,EAAUrD,WAAa,SAAoBhrB,GACvC,GAAIA,aAAkBipB,EAAMR,KAAK2F,iBAAiBC,UAC9C,OAAOruB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAK2F,iBAAiBC,UAc9C,OAbuB,MAAnBruB,EAAOuuB,WACHxF,EAAM9Q,MACL9jB,EAAQo6B,SAAWxF,EAAM9Q,KAAKyK,UAAU1iB,EAAOuuB,WAAW1N,UAAW,EACtC,iBAApB7gB,EAAOuuB,SACnBp6B,EAAQo6B,SAAWhM,SAASviB,EAAOuuB,SAAU,IACb,iBAApBvuB,EAAOuuB,SACnBp6B,EAAQo6B,SAAWvuB,EAAOuuB,SACM,iBAApBvuB,EAAOuuB,WACnBp6B,EAAQo6B,SAAW,IAAIxF,EAAMkC,SAASjrB,EAAOuuB,SAASrW,MAAQ,EAAGlY,EAAOuuB,SAASpW,OAAS,GAAG+K,aAC9E,MAAnBljB,EAAOwuB,WACPr6B,EAAQq6B,SAAW5hC,OAAOoT,EAAOwuB,WACZ,MAArBxuB,EAAOyuB,aACPt6B,EAAQs6B,WAAa7hC,OAAOoT,EAAOyuB,aAChCt6B,GAYXk6B,EAAUnD,SAAW,SAAkB/2B,EAASnQ,GACvCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAkBb,OAjBIhc,EAAQonC,WACRprB,EAAOyuB,WAAa,IACA,MAApBt6B,EAAQo6B,UAAoBp6B,EAAQtP,eAAe,cACnB,iBAArBsP,EAAQo6B,SACfvuB,EAAOuuB,SAAWvqC,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQo6B,UAAYp6B,EAAQo6B,SAEhFvuB,EAAOuuB,SAAWvqC,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQo6B,UAAYvqC,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQo6B,SAASrW,MAAQ,EAAG/jB,EAAQo6B,SAASpW,OAAS,GAAG+K,WAAa/uB,EAAQo6B,SAChOvqC,EAAQ4qC,SACR5uB,EAAO3e,MAAQ,aAEC,MAApB8S,EAAQq6B,UAAoBr6B,EAAQtP,eAAe,cACnDmb,EAAOwuB,SAAWr6B,EAAQq6B,SACtBxqC,EAAQ4qC,SACR5uB,EAAO3e,MAAQ,aAEG,MAAtB8S,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,gBACrDmb,EAAOyuB,WAAat6B,EAAQs6B,YACzBzuB,GAUXquB,EAAUtb,UAAU2N,OAAS,WACzB,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnD0C,EAvQkB,GA0QtBD,EAvda,GA0dxB3F,EAAKoD,UAAY,WAkBb,SAASA,EAAUxC,GACf,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAoBhD,IAAI0tC,EAoZJ,OA/ZAzC,EAAU9Y,UAAU8b,WAAa,KAQjChD,EAAU9Y,UAAU0b,WAAa,GAWjCpqC,OAAO28B,eAAe6K,EAAU9Y,UAAW,QAAS,CAChD7vB,IAAK6lC,EAAM2F,YAAYJ,EAAe,CAAC,eACvC/rC,IAAKwmC,EAAM4F,YAAYL,KAW3BzC,EAAU/rB,OAAS,SAAgBupB,GAC/B,OAAO,IAAIwC,EAAUxC,IAYzBwC,EAAUvZ,OAAS,SAAgBne,EAAS41B,GAOxC,OANKA,IACDA,EAASlB,EAAQ/oB,UACK,MAAtB3L,EAAQ06B,YAAsB16B,EAAQtP,eAAe,eACrDokC,EAAMR,KAAKoD,UAAUrpC,OAAO8vB,OAAOne,EAAQ06B,WAAY9E,EAAOC,OAA8B,IAAII,QAAQC,SAClF,MAAtBl2B,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,eACrDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQs6B,YACrD1E,GAYX8B,EAAUtB,gBAAkB,SAAyBp2B,EAAS41B,GAC1D,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCwB,EAAUr/B,OAAS,SAAgBg+B,EAAQ3pC,GACjC2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKoD,UACrFrB,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQ06B,WAAa5F,EAAMR,KAAKoD,UAAUrpC,OAAOgK,OAAOg+B,EAAQA,EAAOR,UACvE,MACJ,KAAK,EACD71B,EAAQs6B,WAAajE,EAAOtY,SAC5B,MACJ,QACIsY,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaX03B,EAAUjB,gBAAkB,SAAyBJ,GAGjD,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC6B,EAAUhB,OAAS,SAAgB12B,GAC/B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBAEX,GAA0B,MAAtBA,EAAQ06B,YAAsB16B,EAAQtP,eAAe,cAAe,CAGhE,IAAIwF,EAAQ4+B,EAAMR,KAAKoD,UAAUrpC,OAAOqoC,OAAO12B,EAAQ06B,YACvD,GAAIxkC,EACA,MAAO,cAAgBA,EAGnC,OAA0B,MAAtB8J,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,gBAChDkkC,EAAM+B,SAAS32B,EAAQs6B,YACjB,8BACR,MAWX5C,EAAUb,WAAa,SAAoBhrB,GACvC,GAAIA,aAAkBipB,EAAMR,KAAKoD,UAC7B,OAAO7rB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKoD,UAC7B,GAAyB,MAArB7rB,EAAO6uB,WAAoB,CAC3B,GAAiC,iBAAtB7uB,EAAO6uB,WACd,MAAMruC,UAAU,+CACpB2T,EAAQ06B,WAAa5F,EAAMR,KAAKoD,UAAUrpC,OAAOwoC,WAAWhrB,EAAO6uB,YAIvE,OAFyB,MAArB7uB,EAAOyuB,aACPt6B,EAAQs6B,WAAa7hC,OAAOoT,EAAOyuB,aAChCt6B,GAYX03B,EAAUX,SAAW,SAAkB/2B,EAASnQ,GACvCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GAUb,OATIhc,EAAQonC,WACRprB,EAAOyuB,WAAa,IACE,MAAtBt6B,EAAQ06B,YAAsB16B,EAAQtP,eAAe,gBACrDmb,EAAO6uB,WAAa5F,EAAMR,KAAKoD,UAAUrpC,OAAO0oC,SAAS/2B,EAAQ06B,WAAY7qC,GACzEA,EAAQ4qC,SACR5uB,EAAO3e,MAAQ,eAEG,MAAtB8S,EAAQs6B,YAAsBt6B,EAAQtP,eAAe,gBACrDmb,EAAOyuB,WAAat6B,EAAQs6B,YACzBzuB,GAUX6rB,EAAU9Y,UAAU2N,OAAS,WACzB,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAG1DE,EAAUrpC,OAAS,WAkBf,SAASA,EAAO6mC,GACZ,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KA8LhD,OArLA4B,EAAOuwB,UAAU+b,SAAW,EAQ5BtsC,EAAOuwB,UAAUgc,MAAQ,KAUzBvsC,EAAOsd,OAAS,SAAgBupB,GAC5B,OAAO,IAAI7mC,EAAO6mC,IAYtB7mC,EAAO8vB,OAAS,SAAgBne,EAAS41B,GAOrC,OANKA,IACDA,EAASlB,EAAQ/oB,UACG,MAApB3L,EAAQ26B,UAAoB36B,EAAQtP,eAAe,aACnDklC,EAAOC,OAA8B,GAAGnS,MAAM1jB,EAAQ26B,UACrC,MAAjB36B,EAAQ46B,OAAiB56B,EAAQtP,eAAe,UAChDokC,EAAMR,KAAK2F,iBAAiB9b,OAAOne,EAAQ46B,MAAOhF,EAAOC,OAA8B,IAAII,QAAQC,SAChGN,GAYXvnC,EAAO+nC,gBAAkB,SAAyBp2B,EAAS41B,GACvD,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxC7nC,EAAOgK,OAAS,SAAgBg+B,EAAQ3pC,GAC9B2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKoD,UAAUrpC,OAC/FgoC,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQ26B,SAAWtE,EAAO3S,QAC1B,MACJ,KAAK,EACD1jB,EAAQ46B,MAAQ9F,EAAMR,KAAK2F,iBAAiB5hC,OAAOg+B,EAAQA,EAAOR,UAClE,MACJ,QACIQ,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaX3R,EAAOooC,gBAAkB,SAAyBJ,GAG9C,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtCxnC,EAAOqoC,OAAS,SAAgB12B,GAC5B,GAAuB,iBAAZA,GAAoC,OAAZA,EAC/B,MAAO,kBACX,GAAwB,MAApBA,EAAQ26B,UAAoB36B,EAAQtP,eAAe,cAC9CkkC,EAAMgC,UAAU52B,EAAQ26B,UACzB,MAAO,6BACf,GAAqB,MAAjB36B,EAAQ46B,OAAiB56B,EAAQtP,eAAe,SAAU,CAC1D,IAAIwF,EAAQ4+B,EAAMR,KAAK2F,iBAAiBvD,OAAO12B,EAAQ46B,OACvD,GAAI1kC,EACA,MAAO,SAAWA,EAE1B,OAAO,MAWX7H,EAAOwoC,WAAa,SAAoBhrB,GACpC,GAAIA,aAAkBipB,EAAMR,KAAKoD,UAAUrpC,OACvC,OAAOwd,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKoD,UAAUrpC,OAGvC,GAFuB,MAAnBwd,EAAO8uB,WACP36B,EAAQ26B,SAA6B,EAAlB9uB,EAAO8uB,UACV,MAAhB9uB,EAAO+uB,MAAe,CACtB,GAA4B,iBAAjB/uB,EAAO+uB,MACd,MAAMvuC,UAAU,iDACpB2T,EAAQ46B,MAAQ9F,EAAMR,KAAK2F,iBAAiBpD,WAAWhrB,EAAO+uB,OAElE,OAAO56B,GAYX3R,EAAO0oC,SAAW,SAAkB/2B,EAASnQ,GACpCA,IACDA,EAAU,IACd,IAAIgc,EAAS,GASb,OARIhc,EAAQonC,WACRprB,EAAO8uB,SAAW,EAClB9uB,EAAO+uB,MAAQ,MAEK,MAApB56B,EAAQ26B,UAAoB36B,EAAQtP,eAAe,cACnDmb,EAAO8uB,SAAW36B,EAAQ26B,UACT,MAAjB36B,EAAQ46B,OAAiB56B,EAAQtP,eAAe,WAChDmb,EAAO+uB,MAAQ9F,EAAMR,KAAK2F,iBAAiBlD,SAAS/2B,EAAQ46B,MAAO/qC,IAChEgc,GAUXxd,EAAOuwB,UAAU2N,OAAS,WACtB,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDnpC,EApNQ,GAuNZqpC,EA9bM,GAicjBpD,EAAKkE,mBAAqB,WAkBtB,SAASA,EAAmBtD,GACxB,GAAIA,EACA,IAAK,IAAI7S,EAAOnyB,OAAOmyB,KAAK6S,GAAazoC,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,EACpC,MAAvByoC,EAAW7S,EAAK51B,MAChBK,KAAKu1B,EAAK51B,IAAMyoC,EAAW7S,EAAK51B,KAuMhD,OA9LA+rC,EAAmB5Z,UAAUmZ,OAAS,GAQtCS,EAAmB5Z,UAAUxQ,QAAUwmB,EAAM9Q,KAAO8Q,EAAM9Q,KAAKqJ,SAAS,EAAE,GAAE,GAAS,EAUrFqL,EAAmB7sB,OAAS,SAAgBupB,GACxC,OAAO,IAAIsD,EAAmBtD,IAYlCsD,EAAmBra,OAAS,SAAgBne,EAAS41B,GAOjD,OANKA,IACDA,EAASlB,EAAQ/oB,UACC,MAAlB3L,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,WACjDklC,EAAOC,OAA8B,IAAI9X,OAAO/d,EAAQ+3B,QACrC,MAAnB/3B,EAAQoO,SAAmBpO,EAAQtP,eAAe,YAClDklC,EAAOC,OAA8B,IAAIE,MAAM/1B,EAAQoO,SACpDwnB,GAYX4C,EAAmBpC,gBAAkB,SAAyBp2B,EAAS41B,GACnE,OAAO9oC,KAAKqxB,OAAOne,EAAS41B,GAAQM,UAcxCsC,EAAmBngC,OAAS,SAAgBg+B,EAAQ3pC,GAC1C2pC,aAAkB7B,IACpB6B,EAAS7B,EAAQ7oB,OAAO0qB,IAE5B,IADA,IAAIhY,OAAiB9xB,IAAXG,EAAuB2pC,EAAO1T,IAAM0T,EAAO9W,IAAM7yB,EAAQsT,EAAU,IAAI80B,EAAMR,KAAKkE,mBACrFnC,EAAO9W,IAAMlB,GAAK,CACrB,IAAIiY,EAAMD,EAAOR,SACjB,OAAQS,IAAQ,GAChB,KAAK,EACDt2B,EAAQ+3B,OAAS1B,EAAOtY,SACxB,MACJ,KAAK,EACD/d,EAAQoO,QAAUioB,EAAON,QACzB,MACJ,QACIM,EAAOG,SAAe,EAANF,IAIxB,OAAOt2B,GAaXw4B,EAAmB/B,gBAAkB,SAAyBJ,GAG1D,OAFMA,aAAkB7B,IACpB6B,EAAS,IAAI7B,EAAQ6B,IAClBvpC,KAAKuL,OAAOg+B,EAAQA,EAAOR,WAWtC2C,EAAmB9B,OAAS,SAAgB12B,GACxC,MAAuB,iBAAZA,GAAoC,OAAZA,EACxB,kBACW,MAAlBA,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YAC5CkkC,EAAM+B,SAAS32B,EAAQ+3B,QACjB,0BACQ,MAAnB/3B,EAAQoO,SAAmBpO,EAAQtP,eAAe,cAC7CkkC,EAAMgC,UAAU52B,EAAQoO,UAAcpO,EAAQoO,SAAWwmB,EAAMgC,UAAU52B,EAAQoO,QAAQ2V,MAAQ6Q,EAAMgC,UAAU52B,EAAQoO,QAAQ4V,OAC3H,iCACR,MAWXwU,EAAmB3B,WAAa,SAAoBhrB,GAChD,GAAIA,aAAkBipB,EAAMR,KAAKkE,mBAC7B,OAAO3sB,EACX,IAAI7L,EAAU,IAAI80B,EAAMR,KAAKkE,mBAY7B,OAXqB,MAAjB3sB,EAAOksB,SACP/3B,EAAQ+3B,OAASt/B,OAAOoT,EAAOksB,SACb,MAAlBlsB,EAAOuC,UACHwmB,EAAM9Q,MACL9jB,EAAQoO,QAAUwmB,EAAM9Q,KAAKyK,UAAU1iB,EAAOuC,UAAUse,UAAW,EACrC,iBAAnB7gB,EAAOuC,QACnBpO,EAAQoO,QAAUggB,SAASviB,EAAOuC,QAAS,IACZ,iBAAnBvC,EAAOuC,QACnBpO,EAAQoO,QAAUvC,EAAOuC,QACM,iBAAnBvC,EAAOuC,UACnBpO,EAAQoO,QAAU,IAAIwmB,EAAMkC,SAASjrB,EAAOuC,QAAQ2V,MAAQ,EAAGlY,EAAOuC,QAAQ4V,OAAS,GAAG+K,aAC3F/uB,GAYXw4B,EAAmBzB,SAAW,SAAkB/2B,EAASnQ,GAChDA,IACDA,EAAU,IACd,IAAIgc,EAAS,GACb,GAAIhc,EAAQonC,SAER,GADAprB,EAAOksB,OAAS,GACZnD,EAAM9Q,KAAM,CACZ,IAAIoT,EAAO,IAAItC,EAAM9Q,KAAK,EAAG,GAAG,GAChCjY,EAAOuC,QAAUve,EAAQsnC,QAAU1+B,OAASy+B,EAAK1sB,WAAa3a,EAAQsnC,QAAU9nC,OAAS6nC,EAAKnI,WAAamI,OAE3GrrB,EAAOuC,QAAUve,EAAQsnC,QAAU1+B,OAAS,IAAM,EAS1D,OAPsB,MAAlBuH,EAAQ+3B,QAAkB/3B,EAAQtP,eAAe,YACjDmb,EAAOksB,OAAS/3B,EAAQ+3B,QACL,MAAnB/3B,EAAQoO,SAAmBpO,EAAQtP,eAAe,aACnB,iBAApBsP,EAAQoO,QACfvC,EAAOuC,QAAUve,EAAQsnC,QAAU1+B,OAASA,OAAOuH,EAAQoO,SAAWpO,EAAQoO,QAE9EvC,EAAOuC,QAAUve,EAAQsnC,QAAU1+B,OAASm8B,EAAM9Q,KAAKlF,UAAUpU,SAAS7Z,KAAKqP,EAAQoO,SAAWve,EAAQsnC,QAAU9nC,OAAS,IAAIulC,EAAMkC,SAAS92B,EAAQoO,QAAQ2V,MAAQ,EAAG/jB,EAAQoO,QAAQ4V,OAAS,GAAG+K,WAAa/uB,EAAQoO,SAC7NvC,GAUX2sB,EAAmB5Z,UAAU2N,OAAS,WAClC,OAAOz/B,KAAKoC,YAAY6nC,SAASjqC,KAAMynC,EAAUM,KAAK2C,gBAGnDgB,EA7Ne,GAgOnBlE,GAGX7oC,EAAOD,QAAUspC,G,kCCpxJjBrpC,EAAOD,QAAU,EAAjB,O,kCCFA,IAAIqvC,EAAWrvC,EA2Bf,SAASsvC,IACLD,EAAShG,KAAKkG,aACdF,EAASlG,OAAOoG,WAAWF,EAASG,cACpCH,EAASpG,OAAOsG,WAAWF,EAASI,cAtBxCJ,EAAShpB,MAAQ,UAGjBgpB,EAASlG,OAAe,EAAQ,MAChCkG,EAASG,aAAe,EAAQ,MAChCH,EAASpG,OAAe,EAAQ,MAChCoG,EAASI,aAAe,EAAQ,KAGhCJ,EAAShG,KAAe,EAAQ,MAChCgG,EAASK,IAAe,EAAQ,MAChCL,EAAS9F,MAAe,EAAQ,MAChC8F,EAASC,UAAeA,EAcxBA,K,kCClCArvC,EAAOD,QAAUipC,EAEjB,IAEIwG,EAFApG,EAAY,EAAQ,MAIpBiC,EAAYjC,EAAKiC,SACjBpU,EAAYmS,EAAKnS,KAGrB,SAASyY,EAAgB9E,EAAQ+E,GAC7B,OAAO7rC,WAAW,uBAAyB8mC,EAAO9W,IAAM,OAAS6b,GAAe,GAAK,MAAQ/E,EAAO1T,KASxG,SAAS8R,EAAOzjC,GAMZlE,KAAKwyB,IAAMtuB,EAMXlE,KAAKyyB,IAAM,EAMXzyB,KAAK61B,IAAM3xB,EAAOtE,OAGtB,IA4CQQ,EA5CJmuC,EAAqC,oBAAfztC,WACpB,SAA4BoD,GAC1B,GAAIA,aAAkBpD,YAAcgB,MAAMC,QAAQmC,GAC9C,OAAO,IAAIyjC,EAAOzjC,GACtB,MAAMxE,MAAM,mBAGd,SAAsBwE,GACpB,GAAIpC,MAAMC,QAAQmC,GACd,OAAO,IAAIyjC,EAAOzjC,GACtB,MAAMxE,MAAM,mBAGhBmf,EAAS,WACT,OAAOkpB,EAAKyG,OACN,SAA6BtqC,GAC3B,OAAQyjC,EAAO9oB,OAAS,SAAuB3a,GAC3C,OAAO6jC,EAAKyG,OAAOC,SAASvqC,GACtB,IAAIiqC,EAAajqC,GAEjBqqC,EAAarqC,KACpBA,IAGLqqC,GAwDV,SAASG,IAEL,IAAIC,EAAO,IAAI3E,EAAS,EAAG,GACvBrqC,EAAI,EACR,KAAIK,KAAK61B,IAAM71B,KAAKyyB,IAAM,GAanB,CACH,KAAO9yB,EAAI,IAAKA,EAAG,CAEf,GAAIK,KAAKyyB,KAAOzyB,KAAK61B,IACjB,MAAMwY,EAAgBruC,MAG1B,GADA2uC,EAAK1Z,IAAM0Z,EAAK1Z,IAA2B,IAArBj1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAmB,EAAJ9yB,KAAW,EAC1DK,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IACvB,OAAOkc,EAIf,OADAA,EAAK1Z,IAAM0Z,EAAK1Z,IAA6B,IAAvBj1B,KAAKwyB,IAAIxyB,KAAKyyB,SAAqB,EAAJ9yB,KAAW,EACzDgvC,EAxBP,KAAOhvC,EAAI,IAAKA,EAGZ,GADAgvC,EAAK1Z,IAAM0Z,EAAK1Z,IAA2B,IAArBj1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAmB,EAAJ9yB,KAAW,EAC1DK,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IACvB,OAAOkc,EAKf,GAFAA,EAAK1Z,IAAM0Z,EAAK1Z,IAA2B,IAArBj1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAe,MAAQ,EAC3Dkc,EAAKzZ,IAAMyZ,EAAKzZ,IAA2B,IAArBl1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAgB,KAAO,EACvDzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IACvB,OAAOkc,EAgBf,GAfIhvC,EAAI,EAeJK,KAAK61B,IAAM71B,KAAKyyB,IAAM,GACtB,KAAO9yB,EAAI,IAAKA,EAGZ,GADAgvC,EAAKzZ,IAAMyZ,EAAKzZ,IAA2B,IAArBl1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAmB,EAAJ9yB,EAAQ,KAAO,EAC9DK,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IACvB,OAAOkc,OAGf,KAAOhvC,EAAI,IAAKA,EAAG,CAEf,GAAIK,KAAKyyB,KAAOzyB,KAAK61B,IACjB,MAAMwY,EAAgBruC,MAG1B,GADA2uC,EAAKzZ,IAAMyZ,EAAKzZ,IAA2B,IAArBl1B,KAAKwyB,IAAIxyB,KAAKyyB,OAAmB,EAAJ9yB,EAAQ,KAAO,EAC9DK,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IACvB,OAAOkc,EAInB,MAAMjvC,MAAM,2BAkChB,SAASkvC,EAAgBpc,EAAKjB,GAC1B,OAAQiB,EAAIjB,EAAM,GACViB,EAAIjB,EAAM,IAAM,EAChBiB,EAAIjB,EAAM,IAAM,GAChBiB,EAAIjB,EAAM,IAAM,MAAQ,EA+BpC,SAASsd,IAGL,GAAI7uC,KAAKyyB,IAAM,EAAIzyB,KAAK61B,IACpB,MAAMwY,EAAgBruC,KAAM,GAEhC,OAAO,IAAIgqC,EAAS4E,EAAgB5uC,KAAKwyB,IAAKxyB,KAAKyyB,KAAO,GAAImc,EAAgB5uC,KAAKwyB,IAAKxyB,KAAKyyB,KAAO,IA3KxGkV,EAAO9oB,OAASA,IAEhB8oB,EAAO7V,UAAUgd,OAAS/G,EAAKjmC,MAAMgwB,UAAUpmB,UAAuCq8B,EAAKjmC,MAAMgwB,UAAUrpB,MAO3Gk/B,EAAO7V,UAAUiX,QACT3oC,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArBJ,KAAKwyB,IAAIxyB,KAAKyyB,QAAuB,EAAOzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IAAK,OAAOryB,EACvC,GAA1DA,GAASA,GAA8B,IAArBJ,KAAKwyB,IAAIxyB,KAAKyyB,OAAgB,KAAO,EAAOzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IAAK,OAAOryB,EACvC,GAA1DA,GAASA,GAA8B,IAArBJ,KAAKwyB,IAAIxyB,KAAKyyB,OAAe,MAAQ,EAAOzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IAAK,OAAOryB,EACvC,GAA1DA,GAASA,GAA8B,IAArBJ,KAAKwyB,IAAIxyB,KAAKyyB,OAAe,MAAQ,EAAOzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IAAK,OAAOryB,EACvC,GAA1DA,GAASA,GAA+B,GAAtBJ,KAAKwyB,IAAIxyB,KAAKyyB,OAAe,MAAQ,EAAOzyB,KAAKwyB,IAAIxyB,KAAKyyB,OAAS,IAAK,OAAOryB,EAGjG,IAAKJ,KAAKyyB,KAAO,GAAKzyB,KAAK61B,IAEvB,MADA71B,KAAKyyB,IAAMzyB,KAAK61B,IACVwY,EAAgBruC,KAAM,IAEhC,OAAOI,IAQfunC,EAAO7V,UAAU8E,MAAQ,WACrB,OAAuB,EAAhB52B,KAAK+oC,UAOhBpB,EAAO7V,UAAUid,OAAS,WACtB,IAAI3uC,EAAQJ,KAAK+oC,SACjB,OAAO3oC,IAAU,IAAc,EAARA,GAAa,GAqFxCunC,EAAO7V,UAAUkd,KAAO,WACpB,OAAyB,IAAlBhvC,KAAK+oC,UAchBpB,EAAO7V,UAAUmd,QAAU,WAGvB,GAAIjvC,KAAKyyB,IAAM,EAAIzyB,KAAK61B,IACpB,MAAMwY,EAAgBruC,KAAM,GAEhC,OAAO4uC,EAAgB5uC,KAAKwyB,IAAKxyB,KAAKyyB,KAAO,IAOjDkV,EAAO7V,UAAUod,SAAW,WAGxB,GAAIlvC,KAAKyyB,IAAM,EAAIzyB,KAAK61B,IACpB,MAAMwY,EAAgBruC,KAAM,GAEhC,OAAkD,EAA3C4uC,EAAgB5uC,KAAKwyB,IAAKxyB,KAAKyyB,KAAO,IAmCjDkV,EAAO7V,UAAUkX,MAAQ,WAGrB,GAAIhpC,KAAKyyB,IAAM,EAAIzyB,KAAK61B,IACpB,MAAMwY,EAAgBruC,KAAM,GAEhC,IAAII,EAAQ2nC,EAAKiB,MAAMjW,YAAY/yB,KAAKwyB,IAAKxyB,KAAKyyB,KAElD,OADAzyB,KAAKyyB,KAAO,EACLryB,GAQXunC,EAAO7V,UAAUgb,OAAS,WAGtB,GAAI9sC,KAAKyyB,IAAM,EAAIzyB,KAAK61B,IACpB,MAAMwY,EAAgBruC,KAAM,GAEhC,IAAII,EAAQ2nC,EAAKiB,MAAMrU,aAAa30B,KAAKwyB,IAAKxyB,KAAKyyB,KAEnD,OADAzyB,KAAKyyB,KAAO,EACLryB,GAOXunC,EAAO7V,UAAU4G,MAAQ,WACrB,IAAI94B,EAASI,KAAK+oC,SACdzX,EAAStxB,KAAKyyB,IACdlB,EAASvxB,KAAKyyB,IAAM7yB,EAGxB,GAAI2xB,EAAMvxB,KAAK61B,IACX,MAAMwY,EAAgBruC,KAAMJ,GAGhC,OADAI,KAAKyyB,KAAO7yB,EACRkC,MAAMC,QAAQ/B,KAAKwyB,KACZxyB,KAAKwyB,IAAI/pB,MAAM6oB,EAAOC,GAC1BD,IAAUC,EACX,IAAIvxB,KAAKwyB,IAAIpwB,YAAY,GACzBpC,KAAK8uC,OAAOjrC,KAAK7D,KAAKwyB,IAAKlB,EAAOC,IAO5CoW,EAAO7V,UAAUb,OAAS,WACtB,IAAIyH,EAAQ14B,KAAK04B,QACjB,OAAO9C,EAAKE,KAAK4C,EAAO,EAAGA,EAAM94B,SAQrC+nC,EAAO7V,UAAUqd,KAAO,SAAcvvC,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAII,KAAKyyB,IAAM7yB,EAASI,KAAK61B,IACzB,MAAMwY,EAAgBruC,KAAMJ,GAChCI,KAAKyyB,KAAO7yB,OAEZ,GAEI,GAAII,KAAKyyB,KAAOzyB,KAAK61B,IACjB,MAAMwY,EAAgBruC,YACE,IAAvBA,KAAKwyB,IAAIxyB,KAAKyyB,QAE3B,OAAOzyB,MAQX2nC,EAAO7V,UAAU4X,SAAW,SAAS0F,GACjC,OAAQA,GACJ,KAAK,EACDpvC,KAAKmvC,OACL,MACJ,KAAK,EACDnvC,KAAKmvC,KAAK,GACV,MACJ,KAAK,EACDnvC,KAAKmvC,KAAKnvC,KAAK+oC,UACf,MACJ,KAAK,EACD,KAA0C,IAAlCqG,EAA2B,EAAhBpvC,KAAK+oC,WACpB/oC,KAAK0pC,SAAS0F,GAElB,MACJ,KAAK,EACDpvC,KAAKmvC,KAAK,GACV,MAGJ,QACI,MAAMzvC,MAAM,qBAAuB0vC,EAAW,cAAgBpvC,KAAKyyB,KAE3E,OAAOzyB,MAGX2nC,EAAOsG,WAAa,SAASoB,GACzBlB,EAAekB,EACf1H,EAAO9oB,OAASA,IAChBsvB,EAAaF,aAEb,IAAIre,EAAKmY,EAAK/Q,KAAO,SAAsC,WAC3D+Q,EAAKuH,MAAM3H,EAAO7V,UAAW,CAEzBmX,MAAO,WACH,OAAOyF,EAAe7qC,KAAK7D,MAAM4vB,IAAI,IAGzCmd,OAAQ,WACJ,OAAO2B,EAAe7qC,KAAK7D,MAAM4vB,IAAI,IAGzC2f,OAAQ,WACJ,OAAOb,EAAe7qC,KAAK7D,MAAMwvC,WAAW5f,IAAI,IAGpD6f,QAAS,WACL,OAAOZ,EAAYhrC,KAAK7D,MAAM4vB,IAAI,IAGtC8f,SAAU,WACN,OAAOb,EAAYhrC,KAAK7D,MAAM4vB,IAAI,Q,iCCrZ9CjxB,EAAOD,QAAUyvC,EAGjB,IAAIxG,EAAS,EAAQ,OACpBwG,EAAarc,UAAY1uB,OAAOyb,OAAO8oB,EAAO7V,YAAY1vB,YAAc+rC,EAEzE,IAAIpG,EAAO,EAAQ,MASnB,SAASoG,EAAajqC,GAClByjC,EAAO9jC,KAAK7D,KAAMkE,GAStBiqC,EAAaF,WAAa,WAElBlG,EAAKyG,SACLL,EAAarc,UAAUgd,OAAS/G,EAAKyG,OAAO1c,UAAUrpB,QAO9D0lC,EAAarc,UAAUb,OAAS,WAC5B,IAAI4E,EAAM71B,KAAK+oC,SACf,OAAO/oC,KAAKwyB,IAAImd,UACV3vC,KAAKwyB,IAAImd,UAAU3vC,KAAKyyB,IAAKzyB,KAAKyyB,IAAM/b,KAAKqJ,IAAI/f,KAAKyyB,IAAMoD,EAAK71B,KAAK61B,MACtE71B,KAAKwyB,IAAI9U,SAAS,QAAS1d,KAAKyyB,IAAKzyB,KAAKyyB,IAAM/b,KAAKqJ,IAAI/f,KAAKyyB,IAAMoD,EAAK71B,KAAK61B,OAUxFsY,EAAaF,c,8BCjDbtvC,EAAOD,QAAU,I,kCCKPA,EA6BNkxC,QAAU,EAAQ,O,kCClCtBjxC,EAAOD,QAAUkxC,EAEjB,IAAI7H,EAAO,EAAQ,MAsCnB,SAAS6H,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAMtwC,UAAU,8BAEpBwoC,EAAKnW,aAAa/tB,KAAK7D,MAMvBA,KAAK6vC,QAAUA,EAMf7vC,KAAK8vC,iBAAmBE,QAAQF,GAMhC9vC,KAAK+vC,kBAAoBC,QAAQD,IA1DpCH,EAAQ9d,UAAY1uB,OAAOyb,OAAOkpB,EAAKnW,aAAaE,YAAY1vB,YAAcwtC,EAwE/EA,EAAQ9d,UAAUme,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcC,EAASC,GAErF,IAAKD,EACD,MAAM9wC,UAAU,6BAEpB,IAAIT,EAAOkB,KACX,IAAKswC,EACD,OAAOvI,EAAKwI,UAAUN,EAASnxC,EAAMoxC,EAAQC,EAAaC,EAAcC,GAE5E,GAAKvxC,EAAK+wC,QAKV,IACI,OAAO/wC,EAAK+wC,QACRK,EACAC,EAAYrxC,EAAKgxC,iBAAmB,kBAAoB,UAAUO,GAAS1U,UAC3E,SAAqB12B,EAAK6E,GAEtB,GAAI7E,EAEA,OADAnG,EAAKozB,KAAK,QAASjtB,EAAKirC,GACjBI,EAASrrC,GAGpB,GAAiB,OAAb6E,EAAJ,CAKA,KAAMA,aAAoBsmC,GACtB,IACItmC,EAAWsmC,EAAatxC,EAAKixC,kBAAoB,kBAAoB,UAAUjmC,GACjF,MAAO7E,GAEL,OADAnG,EAAKozB,KAAK,QAASjtB,EAAKirC,GACjBI,EAASrrC,GAKxB,OADAnG,EAAKozB,KAAK,OAAQpoB,EAAUomC,GACrBI,EAAS,KAAMxmC,GAdlBhL,EAAKyyB,KAAqB,MAiBxC,MAAOtsB,GAGL,OAFAnG,EAAKozB,KAAK,QAASjtB,EAAKirC,QACxBjwB,YAAW,WAAaqwB,EAASrrC,KAAS,QAnC1Cgb,YAAW,WAAaqwB,EAAS5wC,MAAM,oBAAsB,IA6CrEkwC,EAAQ9d,UAAUP,IAAM,SAAaif,GAOjC,OANIxwC,KAAK6vC,UACAW,GACDxwC,KAAK6vC,QAAQ,KAAM,KAAM,MAC7B7vC,KAAK6vC,QAAU,KACf7vC,KAAKkyB,KAAK,OAAOF,OAEdhyB,O,kCC3IXrB,EAAOD,QAAUsrC,EAEjB,IAAIjC,EAAO,EAAQ,MAUnB,SAASiC,EAAS/U,EAAIC,GASlBl1B,KAAKi1B,GAAKA,IAAO,EAMjBj1B,KAAKk1B,GAAKA,IAAO,EAQrB,IAAIub,EAAOzG,EAASyG,KAAO,IAAIzG,EAAS,EAAG,GAE3CyG,EAAKxO,SAAW,WAAa,OAAO,GACpCwO,EAAKC,SAAWD,EAAKjB,SAAW,WAAa,OAAOxvC,MACpDywC,EAAK7wC,OAAS,WAAa,OAAO,GAOlC,IAAI+wC,EAAW3G,EAAS2G,SAAW,mBAOnC3G,EAAS1J,WAAa,SAAoBlgC,GACtC,GAAc,IAAVA,EACA,OAAOqwC,EACX,IAAItd,EAAO/yB,EAAQ,EACf+yB,IACA/yB,GAASA,GACb,IAAI60B,EAAK70B,IAAU,EACf80B,GAAM90B,EAAQ60B,GAAM,aAAe,EAUvC,OATI9B,IACA+B,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAI8U,EAAS/U,EAAIC,IAQ5B8U,EAASxpC,KAAO,SAAcJ,GAC1B,GAAqB,iBAAVA,EACP,OAAO4pC,EAAS1J,WAAWlgC,GAC/B,GAAI2nC,EAAK8B,SAASzpC,GAAQ,CAEtB,IAAI2nC,EAAK/Q,KAGL,OAAOgT,EAAS1J,WAAWgB,SAASlhC,EAAO,KAF3CA,EAAQ2nC,EAAK/Q,KAAKkK,WAAW9gC,GAIrC,OAAOA,EAAM62B,KAAO72B,EAAM82B,KAAO,IAAI8S,EAAS5pC,EAAM62B,MAAQ,EAAG72B,EAAM82B,OAAS,GAAKuZ,GAQvFzG,EAASlY,UAAUmQ,SAAW,SAAkBrC,GAC5C,IAAKA,GAAY5/B,KAAKk1B,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAVj1B,KAAKi1B,KAAW,EACtBC,GAAMl1B,KAAKk1B,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,GAElB,OAAOl1B,KAAKi1B,GAAe,WAAVj1B,KAAKk1B,IAQ1B8U,EAASlY,UAAU8e,OAAS,SAAgBhR,GACxC,OAAOmI,EAAK/Q,KACN,IAAI+Q,EAAK/Q,KAAe,EAAVh3B,KAAKi1B,GAAkB,EAAVj1B,KAAKk1B,GAAQ8a,QAAQpQ,IAEhD,CAAE3I,IAAe,EAAVj3B,KAAKi1B,GAAQiC,KAAgB,EAAVl3B,KAAKk1B,GAAQ0K,SAAUoQ,QAAQpQ,KAGnE,IAAI7zB,EAAaJ,OAAOmmB,UAAU/lB,WAOlCi+B,EAAS6G,SAAW,SAAkBC,GAClC,OAAIA,IAASH,EACFF,EACJ,IAAIzG,GACLj+B,EAAWlI,KAAKitC,EAAM,GACtB/kC,EAAWlI,KAAKitC,EAAM,IAAM,EAC5B/kC,EAAWlI,KAAKitC,EAAM,IAAM,GAC5B/kC,EAAWlI,KAAKitC,EAAM,IAAM,MAAQ,GAEpC/kC,EAAWlI,KAAKitC,EAAM,GACtB/kC,EAAWlI,KAAKitC,EAAM,IAAM,EAC5B/kC,EAAWlI,KAAKitC,EAAM,IAAM,GAC5B/kC,EAAWlI,KAAKitC,EAAM,IAAM,MAAQ,IAQ9C9G,EAASlY,UAAUif,OAAS,WACxB,OAAOplC,OAAOC,aACO,IAAjB5L,KAAKi1B,GACLj1B,KAAKi1B,KAAO,EAAK,IACjBj1B,KAAKi1B,KAAO,GAAK,IACjBj1B,KAAKi1B,KAAO,GACK,IAAjBj1B,KAAKk1B,GACLl1B,KAAKk1B,KAAO,EAAK,IACjBl1B,KAAKk1B,KAAO,GAAK,IACjBl1B,KAAKk1B,KAAO,KAQpB8U,EAASlY,UAAU4e,SAAW,WAC1B,IAAIM,EAAShxC,KAAKk1B,IAAM,GAGxB,OAFAl1B,KAAKk1B,KAAQl1B,KAAKk1B,IAAM,EAAIl1B,KAAKi1B,KAAO,IAAM+b,KAAU,EACxDhxC,KAAKi1B,IAAQj1B,KAAKi1B,IAAM,EAAsB+b,KAAU,EACjDhxC,MAOXgqC,EAASlY,UAAU0d,SAAW,WAC1B,IAAIwB,IAAmB,EAAVhxC,KAAKi1B,IAGlB,OAFAj1B,KAAKi1B,KAAQj1B,KAAKi1B,KAAO,EAAIj1B,KAAKk1B,IAAM,IAAM8b,KAAU,EACxDhxC,KAAKk1B,IAAQl1B,KAAKk1B,KAAO,EAAqB8b,KAAU,EACjDhxC,MAOXgqC,EAASlY,UAAUlyB,OAAS,WACxB,IAAIqxC,EAASjxC,KAAKi1B,GACdic,GAASlxC,KAAKi1B,KAAO,GAAKj1B,KAAKk1B,IAAM,KAAO,EAC5Cic,EAASnxC,KAAKk1B,KAAO,GACzB,OAAiB,IAAVic,EACU,IAAVD,EACED,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBC,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,K,kCCrM7B,IAAIpJ,EAAOrpC,EA2OX,SAAS4wC,EAAM8B,EAAK3rC,EAAK4rC,GACrB,IAAK,IAAI9b,EAAOnyB,OAAOmyB,KAAK9vB,GAAM9F,EAAI,EAAGA,EAAI41B,EAAK31B,SAAUD,OACnCF,IAAjB2xC,EAAI7b,EAAK51B,KAAsB0xC,IAC/BD,EAAI7b,EAAK51B,IAAM8F,EAAI8vB,EAAK51B,KAChC,OAAOyxC,EAoBX,SAASE,EAASpyC,GAEd,SAASqyC,EAAYr+B,EAASk1B,GAE1B,KAAMpoC,gBAAgBuxC,GAClB,OAAO,IAAIA,EAAYr+B,EAASk1B,GAKpChlC,OAAO28B,eAAe//B,KAAM,UAAW,CAAEiC,IAAK,WAAa,OAAOiR,KAG9DxT,MAAM8xC,kBACN9xC,MAAM8xC,kBAAkBxxC,KAAMuxC,GAE9BnuC,OAAO28B,eAAe//B,KAAM,QAAS,CAAEI,OAAO,IAAIV,OAAQwgB,OAAS,KAEnEkoB,GACAkH,EAAMtvC,KAAMooC,GAWpB,OARCmJ,EAAYzf,UAAY1uB,OAAOyb,OAAOnf,MAAMoyB,YAAY1vB,YAAcmvC,EAEvEnuC,OAAO28B,eAAewR,EAAYzf,UAAW,OAAQ,CAAE7vB,IAAK,WAAa,OAAO/C,KAEhFqyC,EAAYzf,UAAUpU,SAAW,WAC7B,OAAO1d,KAAKd,KAAO,KAAOc,KAAKkT,SAG5Bq+B,EA9RXxJ,EAAKwI,UAAY,EAAQ,MAGzBxI,EAAK/W,OAAS,EAAQ,MAGtB+W,EAAKnW,aAAe,EAAQ,MAG5BmW,EAAKiB,MAAQ,EAAQ,KAGrBjB,EAAK5S,QAAU,EAAQ,MAGvB4S,EAAKnS,KAAO,EAAQ,MAGpBmS,EAAK0J,KAAO,EAAQ,MAGpB1J,EAAKiC,SAAW,EAAQ,MAOxBjC,EAAK2J,OAAS1B,aAA0B,IAAX,EAAA5oC,GACP,EAAAA,GACA,EAAAA,EAAOM,SACP,EAAAN,EAAOM,QAAQC,UACf,EAAAP,EAAOM,QAAQC,SAASC,MAO9CmgC,EAAK4J,OAAS5J,EAAK2J,QAAU,EAAAtqC,GACG,oBAAXG,QAA0BA,QACf,oBAAXzI,MAA0BA,MACjCkB,KAQd+nC,EAAKc,WAAazlC,OAAOwuC,OAASxuC,OAAOwuC,OAAO,IAAiC,GAOjF7J,EAAK8J,YAAczuC,OAAOwuC,OAASxuC,OAAOwuC,OAAO,IAAiC,GAQlF7J,EAAK+B,UAAYvnC,OAAOunC,WAAwC,SAAmB1pC,GAC/E,MAAwB,iBAAVA,GAAsBoqC,SAASpqC,IAAUsW,KAAK6c,MAAMnzB,KAAWA,GAQjF2nC,EAAK8B,SAAW,SAAkBzpC,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiBuL,QAQzDo8B,EAAK+J,SAAW,SAAkB1xC,GAC9B,OAAOA,GAA0B,iBAAVA,GAW3B2nC,EAAKgK,MAQLhK,EAAKiK,MAAQ,SAAepX,EAAKqX,GAC7B,IAAI7xC,EAAQw6B,EAAIqX,GAChB,QAAa,MAAT7xC,IAAiBw6B,EAAIh3B,eAAequC,MACZ,iBAAV7xC,IAAuB0B,MAAMC,QAAQ3B,GAASA,EAAMR,OAASwD,OAAOmyB,KAAKn1B,GAAOR,QAAU,IAehHmoC,EAAKyG,OAAS,WACV,IACI,IAAIA,EAASzG,EAAK5S,QAAQ,UAAUqZ,OAEpC,OAAOA,EAAO1c,UAAUogB,UAAY1D,EAAoC,KAC1E,MAAOxpC,GAEL,OAAO,MAPD,GAYd+iC,EAAKoK,aAAe,KAGpBpK,EAAKqK,oBAAsB,KAO3BrK,EAAKa,UAAY,SAAmByJ,GAEhC,MAA8B,iBAAhBA,EACRtK,EAAKyG,OACDzG,EAAKqK,oBAAoBC,GACzB,IAAItK,EAAKjmC,MAAMuwC,GACnBtK,EAAKyG,OACDzG,EAAKoK,aAAaE,GACI,oBAAfvxC,WACHuxC,EACA,IAAIvxC,WAAWuxC,IAOjCtK,EAAKjmC,MAA8B,oBAAfhB,WAA6BA,WAAwCgB,MAezFimC,EAAK/Q,KAAkC+Q,EAAK4J,OAAOW,SAAsCvK,EAAK4J,OAAOW,QAAQtb,MACtE+Q,EAAK4J,OAAO3a,MACvC+Q,EAAK5S,QAAQ,QAOzB4S,EAAKwK,OAAS,mBAOdxK,EAAKyK,QAAU,wBAOfzK,EAAK0K,QAAU,6CAOf1K,EAAK2K,WAAa,SAAoBtyC,GAClC,OAAOA,EACD2nC,EAAKiC,SAASxpC,KAAKJ,GAAO2wC,SAC1BhJ,EAAKiC,SAAS2G,UASxB5I,EAAK4K,aAAe,SAAsB7B,EAAMlR,GAC5C,IAAI+O,EAAO5G,EAAKiC,SAAS6G,SAASC,GAClC,OAAI/I,EAAK/Q,KACE+Q,EAAK/Q,KAAKqJ,SAASsO,EAAK1Z,GAAI0Z,EAAKzZ,GAAI0K,GACzC+O,EAAK1M,SAAS+N,QAAQpQ,KAkBjCmI,EAAKuH,MAAQA,EAObvH,EAAK6K,QAAU,SAAiBzR,GAC5B,OAAOA,EAAIjQ,OAAO,GAAG2hB,cAAgB1R,EAAI3iB,UAAU,IA0CvDupB,EAAKuJ,SAAWA,EAmBhBvJ,EAAK+K,cAAgBxB,EAAS,iBAoB9BvJ,EAAK0F,YAAc,SAAkBsF,GAEjC,IADA,IAAIC,EAAW,GACNrzC,EAAI,EAAGA,EAAIozC,EAAWnzC,SAAUD,EACrCqzC,EAASD,EAAWpzC,IAAM,EAO9B,OAAO,WACH,IAAK,IAAI41B,EAAOnyB,OAAOmyB,KAAKv1B,MAAOL,EAAI41B,EAAK31B,OAAS,EAAGD,GAAK,IAAKA,EAC9D,GAA0B,IAAtBqzC,EAASzd,EAAK51B,UAA+BF,IAAlBO,KAAKu1B,EAAK51B,KAAuC,OAAlBK,KAAKu1B,EAAK51B,IACpE,OAAO41B,EAAK51B,KAiB5BooC,EAAK2F,YAAc,SAAkBqF,GAQjC,OAAO,SAAS7zC,GACZ,IAAK,IAAIS,EAAI,EAAGA,EAAIozC,EAAWnzC,SAAUD,EACjCozC,EAAWpzC,KAAOT,UACXc,KAAK+yC,EAAWpzC,MAoBvCooC,EAAK2C,cAAgB,CACjBL,MAAO1+B,OACP2+B,MAAO3+B,OACP+sB,MAAO/sB,OACP4+B,MAAM,GAIVxC,EAAKkG,WAAa,WACd,IAAIO,EAASzG,EAAKyG,OAEbA,GAMLzG,EAAKoK,aAAe3D,EAAOhuC,OAASM,WAAWN,MAAQguC,EAAOhuC,MAE1D,SAAqBJ,EAAO6yC,GACxB,OAAO,IAAIzE,EAAOpuC,EAAO6yC,IAEjClL,EAAKqK,oBAAsB5D,EAAO0E,aAE9B,SAA4B7wC,GACxB,OAAO,IAAImsC,EAAOnsC,KAbtB0lC,EAAKoK,aAAepK,EAAKqK,oBAAsB,O,kCCpZvDzzC,EAAOD,QAAUmpC,EAEjB,IAEIqG,EAFAnG,EAAY,EAAQ,MAIpBiC,EAAYjC,EAAKiC,SACjBhZ,EAAY+W,EAAK/W,OACjB4E,EAAYmS,EAAKnS,KAWrB,SAASud,EAAGvjB,EAAIiG,EAAKtD,GAMjBvyB,KAAK4vB,GAAKA,EAMV5vB,KAAK61B,IAAMA,EAMX71B,KAAKozC,UAAO3zC,EAMZO,KAAKuyB,IAAMA,EAIf,SAAS8gB,KAUT,SAASC,EAAMxK,GAMX9oC,KAAKuzC,KAAOzK,EAAOyK,KAMnBvzC,KAAKwzC,KAAO1K,EAAO0K,KAMnBxzC,KAAK61B,IAAMiT,EAAOjT,IAMlB71B,KAAKozC,KAAOtK,EAAO2K,OAQvB,SAAS5L,IAML7nC,KAAK61B,IAAM,EAMX71B,KAAKuzC,KAAO,IAAIJ,EAAGE,EAAM,EAAG,GAM5BrzC,KAAKwzC,KAAOxzC,KAAKuzC,KAMjBvzC,KAAKyzC,OAAS,KASlB,IAAI50B,EAAS,WACT,OAAOkpB,EAAKyG,OACN,WACE,OAAQ3G,EAAOhpB,OAAS,WACpB,OAAO,IAAIqvB,OAIjB,WACE,OAAO,IAAIrG,IAuCvB,SAAS6L,EAAUnhB,EAAKC,EAAKC,GACzBD,EAAIC,GAAa,IAANF,EAoBf,SAASohB,EAAS9d,EAAKtD,GACnBvyB,KAAK61B,IAAMA,EACX71B,KAAKozC,UAAO3zC,EACZO,KAAKuyB,IAAMA,EA8Cf,SAASqhB,EAAcrhB,EAAKC,EAAKC,GAC7B,KAAOF,EAAI2C,IACP1C,EAAIC,KAAkB,IAATF,EAAI0C,GAAW,IAC5B1C,EAAI0C,IAAM1C,EAAI0C,KAAO,EAAI1C,EAAI2C,IAAM,MAAQ,EAC3C3C,EAAI2C,MAAQ,EAEhB,KAAO3C,EAAI0C,GAAK,KACZzC,EAAIC,KAAkB,IAATF,EAAI0C,GAAW,IAC5B1C,EAAI0C,GAAK1C,EAAI0C,KAAO,EAExBzC,EAAIC,KAASF,EAAI0C,GA2CrB,SAAS4e,EAAathB,EAAKC,EAAKC,GAC5BD,EAAIC,GAA0B,IAAdF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,GAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,GA7J5BsV,EAAOhpB,OAASA,IAOhBgpB,EAAOrS,MAAQ,SAAenzB,GAC1B,OAAO,IAAI0lC,EAAKjmC,MAAMO,IAKtB0lC,EAAKjmC,QAAUA,QACf+lC,EAAOrS,MAAQuS,EAAK0J,KAAK5J,EAAOrS,MAAOuS,EAAKjmC,MAAMgwB,UAAUpmB,WAUhEm8B,EAAO/V,UAAUgiB,MAAQ,SAAclkB,EAAIiG,EAAKtD,GAG5C,OAFAvyB,KAAKwzC,KAAOxzC,KAAKwzC,KAAKJ,KAAO,IAAID,EAAGvjB,EAAIiG,EAAKtD,GAC7CvyB,KAAK61B,KAAOA,EACL71B,MA8BX2zC,EAAS7hB,UAAY1uB,OAAOyb,OAAOs0B,EAAGrhB,WACtC6hB,EAAS7hB,UAAUlC,GAxBnB,SAAuB2C,EAAKC,EAAKC,GAC7B,KAAOF,EAAM,KACTC,EAAIC,KAAe,IAANF,EAAY,IACzBA,KAAS,EAEbC,EAAIC,GAAOF,GA0BfsV,EAAO/V,UAAUiX,OAAS,SAAsB3oC,GAW5C,OARAJ,KAAK61B,MAAQ71B,KAAKwzC,KAAOxzC,KAAKwzC,KAAKJ,KAAO,IAAIO,GACzCvzC,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQy1B,IACD71B,MASX6nC,EAAO/V,UAAU8E,MAAQ,SAAqBx2B,GAC1C,OAAOA,EAAQ,EACTJ,KAAK8zC,MAAMF,EAAe,GAAI5J,EAAS1J,WAAWlgC,IAClDJ,KAAK+oC,OAAO3oC,IAQtBynC,EAAO/V,UAAUid,OAAS,SAAsB3uC,GAC5C,OAAOJ,KAAK+oC,QAAQ3oC,GAAS,EAAIA,GAAS,MAAQ,IAsBtDynC,EAAO/V,UAAUib,OAAS,SAAsB3sC,GAC5C,IAAIuuC,EAAO3E,EAASxpC,KAAKJ,GACzB,OAAOJ,KAAK8zC,MAAMF,EAAejF,EAAK/uC,SAAU+uC,IAUpD9G,EAAO/V,UAAUmX,MAAQpB,EAAO/V,UAAUib,OAQ1ClF,EAAO/V,UAAUyd,OAAS,SAAsBnvC,GAC5C,IAAIuuC,EAAO3E,EAASxpC,KAAKJ,GAAOswC,WAChC,OAAO1wC,KAAK8zC,MAAMF,EAAejF,EAAK/uC,SAAU+uC,IAQpD9G,EAAO/V,UAAUkd,KAAO,SAAoB5uC,GACxC,OAAOJ,KAAK8zC,MAAMJ,EAAW,EAAGtzC,EAAQ,EAAI,IAehDynC,EAAO/V,UAAUmd,QAAU,SAAuB7uC,GAC9C,OAAOJ,KAAK8zC,MAAMD,EAAc,EAAGzzC,IAAU,IASjDynC,EAAO/V,UAAUod,SAAWrH,EAAO/V,UAAUmd,QAQ7CpH,EAAO/V,UAAU2d,QAAU,SAAuBrvC,GAC9C,IAAIuuC,EAAO3E,EAASxpC,KAAKJ,GACzB,OAAOJ,KAAK8zC,MAAMD,EAAc,EAAGlF,EAAK1Z,IAAI6e,MAAMD,EAAc,EAAGlF,EAAKzZ,KAU5E2S,EAAO/V,UAAU4d,SAAW7H,EAAO/V,UAAU2d,QAQ7C5H,EAAO/V,UAAUkX,MAAQ,SAAqB5oC,GAC1C,OAAOJ,KAAK8zC,MAAM/L,EAAKiB,MAAMnW,aAAc,EAAGzyB,IASlDynC,EAAO/V,UAAUgb,OAAS,SAAsB1sC,GAC5C,OAAOJ,KAAK8zC,MAAM/L,EAAKiB,MAAMvU,cAAe,EAAGr0B,IAGnD,IAAI2zC,EAAahM,EAAKjmC,MAAMgwB,UAAUxwB,IAChC,SAAwBixB,EAAKC,EAAKC,GAChCD,EAAIlxB,IAAIixB,EAAKE,IAGf,SAAwBF,EAAKC,EAAKC,GAChC,IAAK,IAAI9yB,EAAI,EAAGA,EAAI4yB,EAAI3yB,SAAUD,EAC9B6yB,EAAIC,EAAM9yB,GAAK4yB,EAAI5yB,IAQ/BkoC,EAAO/V,UAAU4G,MAAQ,SAAqBt4B,GAC1C,IAAIy1B,EAAMz1B,EAAMR,SAAW,EAC3B,IAAKi2B,EACD,OAAO71B,KAAK8zC,MAAMJ,EAAW,EAAG,GACpC,GAAI3L,EAAK8B,SAASzpC,GAAQ,CACtB,IAAIoyB,EAAMqV,EAAOrS,MAAMK,EAAM7E,EAAOpxB,OAAOQ,IAC3C4wB,EAAOzlB,OAAOnL,EAAOoyB,EAAK,GAC1BpyB,EAAQoyB,EAEZ,OAAOxyB,KAAK+oC,OAAOlT,GAAKie,MAAMC,EAAYle,EAAKz1B,IAQnDynC,EAAO/V,UAAUb,OAAS,SAAsB7wB,GAC5C,IAAIy1B,EAAMD,EAAKh2B,OAAOQ,GACtB,OAAOy1B,EACD71B,KAAK+oC,OAAOlT,GAAKie,MAAMle,EAAKG,MAAOF,EAAKz1B,GACxCJ,KAAK8zC,MAAMJ,EAAW,EAAG,IAQnC7L,EAAO/V,UAAUqX,KAAO,WAIpB,OAHAnpC,KAAKyzC,OAAS,IAAIH,EAAMtzC,MACxBA,KAAKuzC,KAAOvzC,KAAKwzC,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCrzC,KAAK61B,IAAM,EACJ71B,MAOX6nC,EAAO/V,UAAUkiB,MAAQ,WAUrB,OATIh0C,KAAKyzC,QACLzzC,KAAKuzC,KAASvzC,KAAKyzC,OAAOF,KAC1BvzC,KAAKwzC,KAASxzC,KAAKyzC,OAAOD,KAC1BxzC,KAAK61B,IAAS71B,KAAKyzC,OAAO5d,IAC1B71B,KAAKyzC,OAASzzC,KAAKyzC,OAAOL,OAE1BpzC,KAAKuzC,KAAOvzC,KAAKwzC,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCrzC,KAAK61B,IAAO,GAET71B,MAOX6nC,EAAO/V,UAAUsX,OAAS,WACtB,IAAImK,EAAOvzC,KAAKuzC,KACZC,EAAOxzC,KAAKwzC,KACZ3d,EAAO71B,KAAK61B,IAOhB,OANA71B,KAAKg0C,QAAQjL,OAAOlT,GAChBA,IACA71B,KAAKwzC,KAAKJ,KAAOG,EAAKH,KACtBpzC,KAAKwzC,KAAOA,EACZxzC,KAAK61B,KAAOA,GAET71B,MAOX6nC,EAAO/V,UAAU6J,OAAS,WAItB,IAHA,IAAI4X,EAAOvzC,KAAKuzC,KAAKH,KACjB5gB,EAAOxyB,KAAKoC,YAAYozB,MAAMx1B,KAAK61B,KACnCpD,EAAO,EACJ8gB,GACHA,EAAK3jB,GAAG2jB,EAAKhhB,IAAKC,EAAKC,GACvBA,GAAO8gB,EAAK1d,IACZ0d,EAAOA,EAAKH,KAGhB,OAAO5gB,GAGXqV,EAAOoG,WAAa,SAASgG,GACzB/F,EAAe+F,EACfpM,EAAOhpB,OAASA,IAChBqvB,EAAaD,e,kCC9cjBtvC,EAAOD,QAAUwvC,EAGjB,IAAIrG,EAAS,EAAQ,OACpBqG,EAAapc,UAAY1uB,OAAOyb,OAAOgpB,EAAO/V,YAAY1vB,YAAc8rC,EAEzE,IAAInG,EAAO,EAAQ,MAQnB,SAASmG,IACLrG,EAAOhkC,KAAK7D,MAwChB,SAASk0C,EAAkB3hB,EAAKC,EAAKC,GAC7BF,EAAI3yB,OAAS,GACbmoC,EAAKnS,KAAKG,MAAMxD,EAAKC,EAAKC,GACrBD,EAAI0f,UACT1f,EAAI0f,UAAU3f,EAAKE,GAEnBD,EAAIuD,MAAMxD,EAAKE,GA3CvByb,EAAaD,WAAa,WAOtBC,EAAa1Y,MAAQuS,EAAKqK,oBAE1BlE,EAAaiG,iBAAmBpM,EAAKyG,QAAUzG,EAAKyG,OAAO1c,qBAAqBhxB,YAAiD,QAAnCinC,EAAKyG,OAAO1c,UAAUxwB,IAAIpC,KAClH,SAA8BqzB,EAAKC,EAAKC,GACxCD,EAAIlxB,IAAIixB,EAAKE,IAIb,SAA+BF,EAAKC,EAAKC,GACzC,GAAIF,EAAI6hB,KACN7hB,EAAI6hB,KAAK5hB,EAAKC,EAAK,EAAGF,EAAI3yB,aACvB,IAAK,IAAID,EAAI,EAAGA,EAAI4yB,EAAI3yB,QAC3B4yB,EAAIC,KAASF,EAAI5yB,OAQ7BuuC,EAAapc,UAAU4G,MAAQ,SAA4Bt4B,GACnD2nC,EAAK8B,SAASzpC,KACdA,EAAQ2nC,EAAKoK,aAAa/xC,EAAO,WACrC,IAAIy1B,EAAMz1B,EAAMR,SAAW,EAI3B,OAHAI,KAAK+oC,OAAOlT,GACRA,GACA71B,KAAK8zC,MAAM5F,EAAaiG,iBAAkBte,EAAKz1B,GAC5CJ,MAeXkuC,EAAapc,UAAUb,OAAS,SAA6B7wB,GACzD,IAAIy1B,EAAMkS,EAAKyG,OAAOpqC,WAAWhE,GAIjC,OAHAJ,KAAK+oC,OAAOlT,GACRA,GACA71B,KAAK8zC,MAAMI,EAAmBre,EAAKz1B,GAChCJ,MAWXkuC,EAAaD,c,y+CC/Eb,cACA,UAEA,2BAqBA,OAnBQ,YAAA5uC,KAAN,W,oFAEM,YAAAC,qBAAN,SAA2B+0C,EAAiCtxC,G,uGAMpDuxC,EAAU,IAAI,EAAAC,QAAQxxC,GAGA,iBAAjBsxC,EAAP,MACF,GAAMC,EAAQE,UAAUH,I,cAAxB,S,aAEA,SAAMC,EAAQE,UAAUH,I,OAAxB,S,iBAGF,MAAO,CAAP,EAAO,IAAI,EAAAI,qBAAqBH,YAEpC,EArBA,GAuBa,EAAAI,cAAgB,IAAIC,G,y/CC5BjC,cACA,UACA,UACA,UACA,UAEA,UAQa,EAAAC,gBAAkB,WAa7B,IAZoC,iBAAzB,EAAA70C,IAAIE,KAAK40C,aAA4B,EAAA90C,IAAIE,KAAK40C,YAAc,KACrE,EAAA90C,IAAIE,KAAK40C,YAAc,GAGI,kBAAlB,EAAA90C,IAAIE,KAAK60C,OAClB,EAAA/0C,IAAIE,KAAK60C,MAAO,GAGY,kBAAnB,EAAA/0C,IAAIE,KAAK80C,QAClB,EAAAh1C,IAAIE,KAAK80C,OAAQ,GAGgB,iBAAxB,EAAAh1C,IAAIE,KAAK+0C,aAA4BzyC,OAAOunC,UAAU,EAAA/pC,IAAIE,KAAK+0C,aAAe,EAAAj1C,IAAIE,KAAK+0C,YAAc,EAAG,CACjH,IAAMC,EAA0C,oBAAdz5B,UAA4B,EAAA05B,OAAOt1C,OAAS4b,UAAUsE,oBACxF,EAAA/f,IAAIE,KAAK+0C,WAAat+B,KAAKqJ,IAAI,EAAGrJ,KAAKC,MAAMs+B,GAAsB,GAAK,MAI5E,+BA+BA,OA9BQ,YAAA51C,KAAN,W,0FAKE,OAHA,EAAAu1C,kBAGA,GAAM,EAAAO,Y,cAAN,S,YAII,YAAA71C,qBAAN,SAA2B+0C,EAAiCtxC,G,0GAG9B,iBAAjBsxC,EAAP,MACmB,oBAAVhrB,MAAP,MAEO,GAAM,EAAA+rB,UAAU,EAAA9sC,SAAV,CAAoB+rC,I,cAAnCnwC,EAAS,S,aAGQ,SAAMmlB,MAAMgrB,I,OACT,SADH,SACkB5qB,e,OAA7BA,EAAc,SACpBvlB,EAAS,IAAIpD,WAAW2oB,G,oCAG1BvlB,EAASmwC,E,iBAIX,UADMzxC,EAAU,IAAI,EAAAyyC,sCACNb,UAAUtwC,EAAQnB,I,OAChC,OADA,SACO,CAAP,EAAO6D,QAAQ+iB,QAAQ/mB,YAE3B,EA/BA,GAiCa,EAAA0yC,YAAc,IAAIC,G,4ZClE/B,aACA,cACA,UACA,UAEA,EAAAt2C,gBAAgB,QAAS,EAAAy1C,cAAe,GACxC,EAAAz1C,gBAAgB,OAAQ,EAAAq2C,YAAa,I,qHCNrC,iBACE,WAAYvK,GACV3nC,OAAOoyC,OAAOx1C,KAAM+qC,GAWxB,OAPE,sBAAW,uBAAQ,C,IAAnB,sBAKE,OAJK/qC,KAAKy1C,YACRz1C,KAAKy1C,UACDryC,OAAOC,oBAAoBrD,MAAM01C,OAAOnxC,KAAI,SAAArF,GAAQ,SAAI,EAAiCA,MAASgG,KAAK,MAEtGlF,KAAKy1C,W,gCAEhB,EAbA,GAmBa,EAAAE,4BAA8B,SAAoC5K,GAC3E,WAAI6K,EAA0B7K,K,2aCnBlC,cAEO8K,EADP,QACgBC,YAAYC,aAAaC,IAEzC,UACA,UAqBA,aACE,WAAY30B,G,QAEV,GADArhB,KAAKi2C,YAAc,IAAIr1C,IACnBygB,QAAiD,C,IACnD,IAAmB,QAAAA,GAAU,8BAAE,CAA1B,IAAM60B,EAAI,QACTA,aAAgB,EAAA1O,KAAKW,eACvBnoC,KAAKi2C,YAAY30C,IAAI40C,EAAKh3C,KAAM,CAACi3C,EAAUC,SAASF,GAAOC,EAAUE,QAAQH,KACpEA,aAAgBL,EAAOM,WAChCn2C,KAAKi2C,YAAY30C,IAAI40C,EAAKh3C,OAAS,CAACi3C,EAAUC,SAASF,GAAOC,EAAUE,QAAQH,M,iGAGpF,GAAIl2C,KAAKi2C,YAAY5zC,KAAOgf,EAAWzhB,OACrC,MAAM,IAAIF,MAAM,+BAqOxB,OAhOE,YAAA4B,IAAA,SAAIqC,EAAahC,EAA0BvB,GACzCJ,KAAKi2C,YAAY30C,IAAIqC,EAAK,CAACvD,EAAOuB,KAEpC,YAAA20C,OAAA,SAAO3yC,GACL3D,KAAKi2C,YAAYK,OAAO3yC,IAE1B,YAAA4yC,SAAA,SAAS5yC,EAAas2B,GACpB,OAAOj6B,KAAKiC,IAAI0B,EAAK,QAASs2B,IAGhC,YAAAuc,OAAA,SAAO7yC,EAAas2B,GAClB,OAAOj6B,KAAKiC,IAAI0B,EAAK,MAAOs2B,IAG9B,YAAAwc,UAAA,SAAU9yC,EAAas2B,GACrB,OAAOj6B,KAAKiC,IAAI0B,EAAK,SAAUs2B,IAGjC,YAAAyc,UAAA,SAAU/yC,EAAas2B,GACrB,OAAOj6B,KAAKiC,IAAI0B,EAAK,SAAUs2B,IAGjC,YAAA0c,UAAA,SAAUhzC,EAAas2B,GACrB,OAAOj6B,KAAKiC,IAAI0B,EAAK,SAAUs2B,IAGjC,YAAA2c,QAAA,SAAQjzC,EAAas2B,GACnB,OAAOj6B,KAAKiC,IAAI0B,EAAK,OAAQs2B,IAG/B,YAAA4c,WAAA,SAAWlzC,EAAas2B,GACtB,OAAOj6B,KAAKiC,IAAI0B,EAAK,UAAWs2B,IAGlC,YAAA6c,WAAA,SAAWnzC,EAAas2B,GACtB,OAAOj6B,KAAKiC,IAAI0B,EAAK,UAAWs2B,IAG1B,YAAAh4B,IAAR,SACI0B,EAAahC,EAA0Bs4B,GACzC,IAAM8c,EAAe/2C,KAAKi2C,YAAYh0C,IAAI0B,GAC1C,QAAqBlE,IAAjBs3C,EAA4B,CAC9B,QAAqBt3C,IAAjBw6B,EACF,OAAOA,EAET,MAAM,IAAIv6B,MAAM,iCAAiCiE,GAEnD,GAAIozC,EAAa,KAAOp1C,EACtB,MAAM,IAAIjC,MAAM,2BAA2BiC,EAAI,YAAYo1C,EAAa,IAE1E,OAAOA,EAAa,IAGP,EAAAV,QAAf,SAAuBH,GACrB,IAAMv0C,EAAOu0C,aAAgB,EAAA1O,KAAKW,eAAiB,EAAOxmC,KAAQu0C,EAA0Bv0C,OAC5F,OAAQA,GACN,KAAK,EAAA6lC,KAAKW,eAAesC,cAAcuM,MACrC,MAAO,QACT,KAAK,EAAAxP,KAAKW,eAAesC,cAAcwM,IACrC,MAAO,MACT,KAAK,EAAAzP,KAAKW,eAAesC,cAAcyM,OACrC,MAAO,SACT,KAAK,EAAA1P,KAAKW,eAAesC,cAAc0M,OACrC,MAAO,SACT,KAAK,EAAA3P,KAAKW,eAAesC,cAAc2M,OACrC,MAAO,SACT,KAAK,EAAA5P,KAAKW,eAAesC,cAAc4M,KACrC,MAAO,OACT,KAAK,EAAA7P,KAAKW,eAAesC,cAAc6M,QACrC,MAAO,UACT,KAAK,EAAA9P,KAAKW,eAAesC,cAAc8M,QACrC,MAAO,UACT,QACE,MAAM,IAAI73C,MAAM,wCAAwC,EAAA8nC,KAAKW,eAAesC,cAAc9oC,MAIjF,EAAAy0C,SAAf,SAAwBF,GACtB,IAAMsB,EAAWtB,aAAgB,EAAA1O,KAAKW,eAAiB+N,EAAKv0C,KAAQu0C,EAA0Bv0C,OAC9F,GAAI61C,IAAa,EAAAhQ,KAAKW,eAAesC,cAAcgN,OAASD,IAAa,EAAAhQ,KAAKW,eAAesC,cAAciN,OACzG,MAAM,IAAIh4C,MAAM,wCAGlB,IAAMU,EAAQJ,KAAK23C,gBAAgBzB,GAGnC,GAAIsB,IAAa,EAAAhQ,KAAKW,eAAesC,cAAcwM,KAAO,EAAAW,SAAS/X,OAAOz/B,GACxE,OAAO,EAAAw3C,SAASC,aAAaz3C,GAI/B,GAAIo3C,IAAa,EAAAhQ,KAAKW,eAAesC,cAAc4M,KAAM,CAIvD,IAHA,IAAMS,EAAO13C,EACP23C,EAAwB,IAAIj2C,MAAcg2C,EAAIl4C,QAE3CD,EAAI,EAAGA,EAAIm4C,EAAIl4C,OAAQD,IAAK,CACnC,IAAMq4C,EAAYF,EAAIn4C,GACtBo4C,EAAYp4C,GAAK,EAAAi4C,SAASC,aAAaG,GAGzC,OAAOD,EAIT,GAAIP,IAAa,EAAAhQ,KAAKW,eAAesC,cAAc0M,OACjD,OAAOjB,aAAgB,EAAA1O,KAAKW,eAAiB,EAAA5mC,OAAO02C,UAAU73C,GACjB,EAAAmB,OAAO22C,cAAc93C,GAIpE,GAAIo3C,IAAa,EAAAhQ,KAAKW,eAAesC,cAAc8M,QAAS,CAC1D,GAAIrB,aAAgB,EAAA1O,KAAKW,eAEvB,OADqB/nC,EACDmE,KAAI,SAAAnE,GAAS,SAAAmB,OAAO02C,UAAU73C,MAC7C,GAAI81C,aAAgBL,EAAOM,UAEhC,OADqB/1C,EACDmE,KAAI,SAAAnE,GAAS,SAAAmB,OAAO22C,cAAc93C,MAK1D,GAAIo3C,IAAa,EAAAhQ,KAAKW,eAAesC,cAAcyM,QAG7ChB,aAAgB,EAAA1O,KAAKW,eAAgB,CACvC,IAAMgQ,EAAa/3C,EACnB,OAAOouC,OAAOhuC,KAAK23C,EAAWj0C,OAAQi0C,EAAWh0C,WAAYg0C,EAAW/zC,YAAYsZ,WAKxF,OAAI85B,IAAa,EAAAhQ,KAAKW,eAAesC,cAAc6M,SAG7CpB,aAAgB,EAAA1O,KAAKW,eACH/nC,EACDmE,KACf,SAAA4zC,GAAc,OAAA3J,OAAOhuC,KAAK23C,EAAWj0C,OAAQi0C,EAAWh0C,WAAYg0C,EAAW/zC,YAAYsZ,cAI5Ftd,GAGM,EAAAu3C,gBAAf,SAA+BzB,GAC7B,OAAOA,aAAiB,EAAA1O,KAAmB,eAAIxnC,KAAKo4C,8BAA8BlC,GACnCl2C,KAAKq4C,6BAA6BnC,IAGpE,EAAAkC,8BAAf,SAA6ClC,GAC3C,OAAQA,EAAKv0C,MACX,KAAK,EAAA6lC,KAAKW,eAAesC,cAAcuM,MACrC,OAAOd,EAAKrvC,EACd,KAAK,EAAA2gC,KAAKW,eAAesC,cAAcwM,IACrC,OAAOf,EAAKv2C,EACd,KAAK,EAAA6nC,KAAKW,eAAesC,cAAcyM,OACrC,OAAOhB,EAAKxvC,EACd,KAAK,EAAA8gC,KAAKW,eAAesC,cAAc0M,OACrC,OAAOjB,EAAKxwC,EACd,KAAK,EAAA8hC,KAAKW,eAAesC,cAAcgN,MACrC,OAAOvB,EAAK9uC,EACd,KAAK,EAAAogC,KAAKW,eAAesC,cAAc2M,OACrC,OAAOlB,EAAK7N,OACd,KAAK,EAAAb,KAAKW,eAAesC,cAAc4M,KACrC,OAAOnB,EAAK5N,KACd,KAAK,EAAAd,KAAKW,eAAesC,cAAc6M,QACrC,OAAOpB,EAAK3N,QACd,KAAK,EAAAf,KAAKW,eAAesC,cAAc8M,QACrC,OAAOrB,EAAK1N,QACd,KAAK,EAAAhB,KAAKW,eAAesC,cAAciN,OACrC,OAAOxB,EAAKzN,OACd,QACE,MAAM,IAAI/oC,MAAM,+BAA+B,EAAA8nC,KAAKW,eAAesC,cAAcyL,EAAKv0C,SAI7E,EAAA02C,6BAAf,SAA4CnC,GAC1C,OAAQA,EAAKv0C,QACX,KAAKk0C,EAAOpL,cAAcuM,MACxB,OAAOd,EAAKrvC,IACd,KAAKgvC,EAAOpL,cAAcwM,IACxB,OAAOf,EAAKv2C,IACd,KAAKk2C,EAAOpL,cAAcyM,OACxB,OAAOhB,EAAKxvC,IACd,KAAKmvC,EAAOpL,cAAc0M,OACxB,OAAOjB,EAAKxwC,IACd,KAAKmwC,EAAOpL,cAAcgN,MACxB,OAAOvB,EAAK9uC,IACd,KAAKyuC,EAAOpL,cAAc2M,OACxB,OAAOlB,EAAKoC,cACd,KAAKzC,EAAOpL,cAAc4M,KAExB,IADA,IAAM/O,EAAO,GACJ3oC,EAAI,EAAGA,EAAIu2C,EAAKqC,aAAc54C,IACrC2oC,EAAKxoC,KAAKo2C,EAAK5N,KAAK3oC,IAEtB,OAAO2oC,EAET,KAAKuN,EAAOpL,cAAc6M,QACxB,IAAM/O,EAAU,GAChB,IAAS5oC,EAAI,EAAGA,EAAIu2C,EAAKsC,gBAAiB74C,IACxC4oC,EAAQzoC,KAAKo2C,EAAK3N,QAAQ5oC,IAE5B,OAAO4oC,EAET,KAAKsN,EAAOpL,cAAc8M,QACxB,IAAM/O,EAAU,GAChB,IAAS7oC,EAAI,EAAGA,EAAIu2C,EAAKuC,gBAAiB94C,IACxC6oC,EAAQ1oC,KAAKo2C,EAAK1N,QAAQ7oC,IAE5B,OAAO6oC,EAST,QACE,MAAM,IAAI9oC,MAAM,+BAA+Bm2C,EAAOpL,cAAcyL,EAAKv0C,WAKjF,EAjPA,GAAa,EAAAw0C,a,qzDC3Bb,cA0EMuC,EAAsC,IAAI93C,IAgChD,SAAe+3C,EAAeC,G,gHAGW,KAFjCC,EAAa,EAAA15C,SAEGy5C,KAeLhe,EAf+Cie,EAAWD,GAqBvE,eAJExyC,EAAIw0B,IAIuC,mBAAjBx0B,EAAE0yC,YAC9B,yBAA0B1yC,GAAuC,mBAA3BA,EAAE9G,sBACxC,YAAa8G,GAA0B,mBAAdA,EAAE2yC,UAtBvB,EAAUF,EAAWD,GAEP,iBADhBv5C,EAAO,EAAQy5C,eACa,SAAUz5C,EACjC,GAAMA,GADX,OAHF,M,OAIAA,EAAO,S,iBAET,GAAIA,EAEF,OADAq5C,EAAcp3C,IAAIs3C,EAAa,GACxB,CAAP,EAAO,G,iBAIX,MAAO,CAAP,OAAOn5C,GAGT,IAAmBm7B,EAEXx0B,QAlDK,EAAAjH,QAAqC,CAChDe,MAAO,IAAI,EAAA84C,cAOb,0BAAsB7zC,EAAe8zC,G,uHAC9BA,EAAD,MACK,CAAP,EAAO9zC,EAAe,CAAC,W,OAEjB+zC,EAAwB,iBAATD,EAAoB,CAACA,GAAQA,E,wCAExB,IAAAC,GAAK,W,sCAApBN,EAAW,SACdxY,EAAQsY,EAAcz2C,IAAI22C,IAEvB,CAAP,EAAOxY,GAGO,GAAMuY,EAAeC,K,OACrC,GADM,EAAU,SAEd,MAAO,CAAP,EAAO,G,kMAKb,MAAM,IAAIl5C,MAAM,wC,yGCvGlB,cAEA,UAGA,UAEA,UAOA,2BAyEA,OAtEE,sBAAI,wBAAS,C,IAAb,WACE,OAAO,EAAAK,IAAIG,MAAMi5C,W,IAEnB,SAAc/4C,GACZ,EAAAL,IAAIG,MAAMi5C,UAAY/4C,G,gCAGxB,sBAAI,iCAAkB,C,IAAtB,WACE,OAAO,EAAAL,IAAIG,MAAMk5C,oB,IAEnB,SAAuBh5C,GACrB,EAAAL,IAAIG,MAAMk5C,mBAAqBh5C,G,gCAGjC,sBAAI,+BAAgB,C,IAApB,WACE,OAAO,EAAAL,IAAIG,MAAMm5C,kB,IAEnB,SAAqBj5C,GACnB,EAAAL,IAAIG,MAAMm5C,iBAAmBj5C,G,gCAG/B,sBAAI,mBAAI,C,IAAR,WACE,OAAO,EAAAL,IAAIG,MAAMo5C,M,IAEnB,SAASl5C,GACP,EAAAL,IAAIG,MAAMo5C,KAAOl5C,G,gCAGnB,sBAAI,oBAAK,C,IAAT,WACE,OAAO,EAAAL,IAAIG,MAAMsE,O,IAEnB,SAAUpE,GACR,EAAAL,IAAIG,MAAMsE,MAAQpE,G,gCAGpB,YAAA04C,WAAA,WACE,IAsBE,OArBA94C,KAAKu5C,UAAY,EAAAC,mBAAmBx5C,KAAKm5C,WACF,iBAA5Bn5C,KAAKo5C,qBACdp5C,KAAKo5C,mBAAqB,IAES,iBAA1Bp5C,KAAKq5C,mBACdr5C,KAAKq5C,iBAAmB,QAED,kBAAdr5C,KAAKs5C,OACdt5C,KAAKs5C,MAAO,GAEY,kBAAft5C,KAAKwE,QACdxE,KAAKwE,OAAQ,GAGf,EAAAi1C,OAAOC,WAAW,EAAA35C,KAElB,EAAA05C,OAAOE,QACH,eACA,gCAAgC35C,KAAKu5C,UAAS,6BAC1Cv5C,KAAKo5C,mBAAkB,uBAAuBp5C,KAAKq5C,iBAAgB,WAAWr5C,KAAKs5C,KAAI,YACvFt5C,KAAKwE,MAAK,MACX,EACP,MAAOQ,GAEP,OADA,EAAAy0C,OAAOG,QAAQ,eAAgB,sCAAsC50C,IAC9D,IAGX,YAAA1F,qBAAA,SAAqBu6C,GACnB,OAAO,IAAI,EAAAC,oBAAoB95C,KAAM65C,IAEvC,YAAAd,QAAA,WACE/4C,KAAKu5C,UAAUR,WAEnB,EAzEA,GAAa,EAAAC,gB,ylCCdb,cAEA,UACA,UACA,UAEA,UAMA,cAGE,WAAYa,G,OACV,YAAMA,IAAQ,KAsyClB,OA1yCmC,OAMjC,YAAAE,aAAA,WACE,OAAO,EAAP,eACK/5C,KAAKg6C,kBACLh6C,KAAKi6C,kBACLj6C,KAAKk6C,SACLl6C,KAAKm6C,aAELn6C,KAAKo6C,sBACLp6C,KAAKq6C,6BACLr6C,KAAKs6C,6BAGZ,YAAAC,eAAA,WACE,MAAO,IAMC,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAQ,eAAe,6PAe7B,YAAAP,eAAV,WAEE,MAAO,CACLA,eAAgB,IAAI,EAAAO,eAAe,uPAe7B,YAAAF,yBAAV,WACE,IAAMG,EAAez6C,KAAK65C,QAAQa,oBAClC,OAAID,EAAaE,SACR36C,KAAK46C,+BAA+BH,GAEpCz6C,KAAK66C,iCAAiCJ,IAOvC,YAAAG,+BAAV,SAAyCH,GACvC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAa3hC,MAAO2hC,EAAa1hC,QAChDglB,EAA2C,GAC3Ckd,EAAW,kBACjB,OAAQH,EAASl7C,QACf,KAAK,EACHm+B,EAAOkd,GAAYj7C,KAAKk7C,wBACxB,MACF,KAAK,EACHnd,EAAOkd,GAAYj7C,KAAKm7C,wBAAwBL,EAAsBE,GACtE,MACF,KAAK,EACHjd,EAAOkd,GAAYj7C,KAAKo7C,wBAAwBN,EAA8BE,GAC9E,MACF,KAAK,EACHjd,EAAOkd,GACHj7C,KAAKq7C,wBAAwBP,EAAsCE,GACvE,MACF,QACEjd,EAAOkd,GAAYj7C,KAAKs7C,wBAAwBR,EAAUE,GAE9D,IAGMO,EAA4B,+CAHrB,EAAAC,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAKjCwpB,OAAM,yBAKjB,OADA/M,EAAkC,oBAAI,IAAI,EAAAyc,eAAee,GAClDxd,GAMC,YAAA8c,iCAAV,SAA2CJ,GACzC,IAAMK,EAAWL,EAAaM,cACxBC,EAAc,CAACP,EAAa3hC,MAAO2hC,EAAa1hC,QAChDglB,EAA2C,GAC3Ckd,EAAW,kBACjB,OAAQH,EAASl7C,QACf,KAAK,EACHm+B,EAAOkd,GAAYj7C,KAAKk7C,wBACxB,MACF,KAAK,EACHnd,EAAOkd,GAAYj7C,KAAKy7C,0BAA0BX,EAAsBE,GACxE,MACF,KAAK,EACHjd,EAAOkd,GACHj7C,KAAK07C,0BAA0BZ,EAA8BE,GACjE,MACF,KAAK,EACHjd,EAAOkd,GACHj7C,KAAK27C,0BAA0Bb,EAAsCE,GACzE,MACF,KAAK,EACHjd,EAAOkd,GAAYj7C,KAAK47C,0BACpBd,EAA8CE,GAClD,MACF,KAAK,EACHjd,EAAOkd,GAAYj7C,KAAK67C,0BACpBf,EAAsDE,GAC1D,MACF,KAAK,EACHjd,EAAOkd,GAAYj7C,KAAK87C,0BACpBhB,EAA8DE,GAClE,MACF,QACE,MAAM,IAAIt7C,MAAM,sCAAsCo7C,EAASl7C,QAEnE,IAGMm8C,EAAyB,oDAHlB,EAAAP,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAK/BwpB,OAAM,0CAKnB,OADA/M,EAA+B,iBAAI,IAAI,EAAAyc,eAAeuB,GAC/Che,GAMC,YAAAmd,sBAAV,WACE,OAAO,IAAI,EAAAV,eAAe,sEAUlB,YAAAW,wBAAV,SAAkCrN,EAAiBkO,GACjD,IAAMC,EAAiBD,EACnBE,EAAS,GACb,OAA0B,IAAtBD,EAAe,IACjBC,EAAS,iFAE4BD,EAAe,GAAE,8BAG/C,IAAI,EAAAzB,eAAe0B,IAGF,IAAtBD,EAAe,IACjBC,EAAS,iFAE4BD,EAAe,GAAE,8BAG/C,IAAI,EAAAzB,eAAe0B,KAG5BA,EAAS,6HAG2BD,EAAe,GAAE,KAAKA,EAAe,GAAE,2CAC1CA,EAAe,GAAE,qCAG3C,IAAI,EAAAzB,eAAe0B,KAMlB,YAAAd,wBAAV,SAAkCtN,EAAyBkO,GACzD,IAAIE,EAAS,GACb,GAAI,EAAAC,UAAUC,YAAYtO,EAAOkO,GAM/B,OALAE,EAAS,uFAEkCF,EAAS,GAAE,KAAKA,EAAS,GAAE,yBAG/D,IAAI,EAAAxB,eAAe0B,GAG5B,IAAMD,EAAiBD,EAEjBK,EAAqB3lC,KAAKC,KAAKm3B,EAAM,GAAK,GAyBhD,OAdAoO,EAAS,8HAG0BD,EAAe,GAAE,KAAKA,EAAe,GAAE,6CAEzCA,EAAe,GAAE,0GAGtBI,EAAkB,0CACjBA,EAAkB,yDAKxC,IAAI,EAAA7B,eAAe0B,IAMlB,YAAAb,wBAAV,SAAkCvN,EAAiCkO,GACjE,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCK,EAAqB3lC,KAAKC,KAAKm3B,EAAM,GAAK,GAC1CwO,EAAgBD,EAAqB3lC,KAAKC,KAAKm3B,EAAM,GAAK,GAC1DoO,EAAS,8HAGoBD,EAAe,GAAE,KAAKA,EAAe,GAAE,2CACzCA,EAAe,GAAE,+CAE1BK,EAAa,6BAChBA,EAAa,6FAGND,EAAkB,0CACjBA,EAAkB,4DAK/C,OAAO,IAAI,EAAA7B,eAAe0B,IAMlB,YAAAZ,wBAAV,SAAkCxN,EAA0BkO,GAS1D,IARA,IAAMC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IAExCK,EAAqB3lC,KAAKC,KAAKm3B,EAAMA,EAAMluC,OAAS,GAAK,GACzD08C,EAAgBD,EAAqB3lC,KAAKC,KAAKm3B,EAAMA,EAAMluC,OAAS,GAAK,GAC3E28C,EAAiBD,EACjBE,EAAU,GACVC,EAAS,UAEJt1C,EAAI,EAAGA,EAAI2mC,EAAMluC,OAAS,EAAGuH,IAEpCq1C,EAAU,gBACHr1C,EAAC,eAFRo1C,GAAkBzO,EAAMA,EAAMluC,OAASuH,EAAI,IAEP,sBACxBA,EAAC,MAAMo1C,EAAc,UAC/BC,EACFC,EAAS,IAAIt1C,EAAC,KAAOs1C,EAEvB,IAAMP,EAAS,eACPpO,EAAMluC,OAAM,2GAEaq8C,EAAe,GAAE,KAAKA,EAAe,GAAE,yCACzCA,EAAe,GAAE,6BAE1CO,EAAO,+BAESF,EAAa,2BAChBA,EAAa,yFAGND,EAAkB,wCACjBA,EAAkB,4BAE5BvO,EAAMluC,OAAM,IAAI68C,EAAM,oBAGvC,OAAO,IAAI,EAAAjC,eAAe0B,IAMlB,YAAAT,0BAAV,SAAoC3N,EAAiBkO,GACnD,IAAME,EAAS,4HAGoBF,EAAS,GAAE,KAAKA,EAAS,GAAE,sCAClCA,EAAS,GAAE,oCAGvC,OAAO,IAAI,EAAAxB,eAAe0B,IAMlB,YAAAR,0BAAV,SAAoC5N,EAAyBkO,GAC3D,IAAME,EAAS,8HAGoBF,EAAS,GAAE,KAAKA,EAAS,GAAE,2CAC7BA,EAAS,GAAE,6CACpBlO,EAAM,GAAE,oCACJA,EAAM,GAAE,sDAIpC,OAAO,IAAI,EAAA0M,eAAe0B,IAMlB,YAAAP,0BAAV,SAAoC7N,EAAiCkO,GACnE,IAAIE,EACEQ,EAAO5O,EAAMluC,OAEfua,EAAU,KACVuiC,EAAO,IACTviC,EAAU,KAGZA,EAAU,IAAIrY,MAAM46C,EAAO,IACnBA,EAAO,GAAK5O,EAAM4O,EAAO,GACjC,IAAK,IAAI/8C,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/Bwa,EAAQxa,GAAKwa,EAAQxa,EAAI,GAAKmuC,EAAMnuC,EAAI,GAE1C,IAAMg9C,EAAkB,CAAC,IAAK,IAAK,KAC7BC,EACFziC,EACK5V,KAAI,SAACs4C,EAAQl9C,GAKZ,MAJc,OAAOg9C,EAAgBh9C,GAAE,cAAck9C,EAItC,MAHDl9C,IAAMwa,EAAQva,OAAS,EACjC,OAAO+8C,EAAgBh9C,EAAI,GAAE,cAAcg9C,EAAgBh9C,GAAE,MAAMk9C,EACnE,YAAYF,EAAgBh9C,GAAE,MAAMk9C,GACf,OAE1B33C,KAAK,IAWd,OATAg3C,EAAS,8HAG0BF,EAAS,GAAE,KAAKA,EAAS,GAAE,2CAC7BA,EAAS,GAAE,6BACpCY,EAAsB,wDAIvB,IAAI,EAAApC,eAAe0B,IAMlB,YAAAN,0BAAV,SAAoC9N,EAAyCkO,GAE3E,IAAIE,EACEQ,EAAO5O,EAAMluC,OAEfua,EAAU,KACVuiC,EAAO,IACTviC,EAAU,KAGZA,EAAU,IAAIrY,MAAM46C,EAAO,IACnBA,EAAO,GAAK5O,EAAM4O,EAAO,GACjC,IAAK,IAAI/8C,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/Bwa,EAAQxa,GAAKwa,EAAQxa,EAAI,GAAKmuC,EAAMnuC,EAAI,GAE1C,IAAMg9C,EAAkB,CAAC,IAAK,IAAK,IAAK,MAClCC,EACFziC,EACK5V,KAAI,SAACs4C,EAAQl9C,GAKZ,MAJc,OAAOg9C,EAAgBh9C,GAAE,cAAck9C,EAItC,MAHDl9C,IAAMwa,EAAQva,OAAS,EACjC,OAAO+8C,EAAgBh9C,EAAI,GAAE,cAAcg9C,EAAgBh9C,GAAE,MAAMk9C,EACnE,YAAYF,EAAgBh9C,GAAE,MAAMk9C,GACf,OAE1B33C,KAAK,IAWd,OATAg3C,EAAS,4HAG0BF,EAAS,GAAE,KAAKA,EAAS,GAAE,2CAC7BA,EAAS,GAAE,6BACpCY,EAAsB,4DAIvB,IAAI,EAAApC,eAAe0B,IAMlB,YAAAL,0BAAV,SAAoC/N,EAAiDkO,GAEnF,IAAIE,EACEQ,EAAO5O,EAAMluC,OAEfua,EAAU,KACVuiC,EAAO,IACTviC,EAAU,KAGZA,EAAU,IAAIrY,MAAM46C,EAAO,IACnBA,EAAO,GAAK5O,EAAM4O,EAAO,GACjC,IAAK,IAAI/8C,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/Bwa,EAAQxa,GAAKwa,EAAQxa,EAAI,GAAKmuC,EAAMnuC,EAAI,GAE1C,IAAMg9C,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,MACxCC,EACFziC,EACK5V,KAAI,SAACs4C,EAAQl9C,GAKZ,MAJc,OAAOg9C,EAAgBh9C,GAAE,cAAck9C,EAItC,MAHDl9C,IAAMwa,EAAQva,OAAS,EACjC,OAAO+8C,EAAgBh9C,EAAI,GAAE,cAAcg9C,EAAgBh9C,GAAE,MAAMk9C,EACnE,YAAYF,EAAgBh9C,GAAE,MAAMk9C,GACf,OAE1B33C,KAAK,IAWd,OATAg3C,EAAS,4HAG0BF,EAAS,GAAE,KAAKA,EAAS,GAAE,2CAC7BA,EAAS,GAAE,6BACpCY,EAAsB,gEAIvB,IAAI,EAAApC,eAAe0B,IAMlB,YAAAJ,0BAAV,SAAoChO,EAAyDkO,GAG3F,IAAIE,EACEQ,EAAO5O,EAAMluC,OAEfua,EAAU,KACVuiC,EAAO,IACTviC,EAAU,KAGZA,EAAU,IAAIrY,MAAM46C,EAAO,IACnBA,EAAO,GAAK5O,EAAM4O,EAAO,GACjC,IAAK,IAAI/8C,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/Bwa,EAAQxa,GAAKwa,EAAQxa,EAAI,GAAKmuC,EAAMnuC,EAAI,GAE1C,IAAMg9C,EAAkB,CAAC,IAAK,IAAK,IAAK,KAAM,KAAM,MAC9CC,EACFziC,EACK5V,KAAI,SAACs4C,EAAQl9C,GAKZ,MAJc,OAAOg9C,EAAgBh9C,GAAE,cAAck9C,EAItC,MAHDl9C,IAAMwa,EAAQva,OAAS,EACjC,OAAO+8C,EAAgBh9C,EAAI,GAAE,cAAcg9C,EAAgBh9C,GAAE,MAAMk9C,EACnE,YAAYF,EAAgBh9C,GAAE,MAAMk9C,GACf,OAE1B33C,KAAK,IAWd,OATAg3C,EAAS,yHAGyBF,EAAS,GAAE,KAAKA,EAAS,GAAE,0CAC7BA,EAAS,GAAE,4BACpCY,EAAsB,iEAItB,IAAI,EAAApC,eAAe0B,IAMlB,YAAA9B,mBAAV,WACE,IAAMrc,EAA2C,GAC7Ckd,EAAW,aACfld,EAAOkd,GAAY,IAAI,EAAAT,eAAe,yWAUtCzc,EADAkd,EAAW,kBACQ,IAAI,EAAAT,eAAe,6RAStCzc,EADAkd,EAAW,kBACQ,IAAI,EAAAT,eAAe,6VAStCzc,EADAkd,EAAW,kBACQ,IAAI,EAAAT,eAAe,kZAUtCS,EAAW,gBACX,IAAM6B,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAK5C,OAJAyc,EAAOkd,GAAY,IAAI,EAAAT,eAAe,0FAErBsC,EAAKC,UAAS,sCAExBhf,GAMC,YAAAsc,0BAAV,sBACQtc,EAA2C,GAC3C0c,EAAez6C,KAAK65C,QAAQa,oBAsBlC,OArBA16C,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACshC,EAAat9C,GACxD,IAAM+lB,EAAc,EAAKm0B,QAAQqD,oBAAoBv9C,GAC/Cs7C,EAAW,EAAAkC,2CAA2CF,GACxDv3B,EAAYi1B,SACd5c,EAAOkd,GAAY,EAAKmC,0BAA0BnC,EAAUgC,EAAav3B,GAEzEqY,EAAOkd,GAAY,EAAKoC,4BAA4BpC,EAAUgC,EAAav3B,GAG7E,IAAM43B,EAAmB,EAAAC,sDAAsDN,GAC3Ev3B,EAAYq1B,cAAcn7C,QAAU66C,EAAaM,cAAcn7C,SAC7D8lB,EAAYi1B,SACd5c,EAAOuf,GACH,EAAKE,+BAA+BF,EAAkB53B,EAAa+0B,EAAcwC,GAErFlf,EAAOuf,GACH,EAAKG,iCAAiCH,EAAkB53B,EAAa+0B,EAAcwC,OAKtFlf,GAMC,YAAAyf,+BAAV,SACIvC,EAAkBv1B,EAA4B+0B,EAA6Bv7C,GAC7E,IAYIw+C,EAZEC,EAAUj4B,EAAYq1B,cACtBD,EAAWL,EAAaM,cACxB6C,EAAU1+C,EACV2+C,EAAiB,EAAAV,2CAA2CS,GAE5DE,EAASH,EAAQ/9C,OACjBm+C,EAAUjD,EAASl7C,OAEnBo+C,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAS7C,GAExDn5C,EAAO,EAAAw8C,kBAAkBJ,GACzBK,EAAWL,EAAUD,EAErBO,EAAS,EAAAC,gBAGbZ,EADa,IAAXI,EACc,GACPC,EAAU,GAAKC,EAAcp+C,QAAU,EAChC,cAEAo+C,EAAcz5C,KAAI,SAAAwC,GAAK,gBAAUs3C,EAAOt3C,EAAIq3C,GAAS,WAASl5C,KAAK,MAErF,IAAIq5C,EAEFA,EADER,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQp5C,KAAI,SAACmC,EAAG/G,GAAM,gBAAU0+C,EAAO1+C,EAAIy+C,MAAal5C,KAAK,MAGvF,IAAI4lC,EAAS,sBAEP0T,EAA2B,IADlB,EAAAC,UAAUp8C,KAAKs7C,GAGxBe,EAA6B,IADnB,EAAAD,UAAUp8C,KAAKy4C,GAG/B,GAAe,IAAXgD,GAAiBU,GAAkBE,GAIhC,GAAIF,IAAkBE,EAEzB5T,EADc,IAAZiT,EACO,2EAIA,yDAIN,GAAIC,EAAcp+C,OAAQ,CAC/B,IAAM++C,EAAOb,EAAS,EAChBc,EAAOd,EAAS,EAElBE,EAAc39C,QAAQs+C,IAAS,GAAKX,EAAc39C,QAAQu+C,IAAS,EACrE9T,EAAS,8BACAkT,EAAc39C,QAAQs+C,IAAS,EACxC7T,EAAS,2EAEAkT,EAAc39C,QAAQu+C,IAAS,IACxC9T,EAAS,sDAvBXA,EAAS,iEA2BX,IAKMoR,EAAS,gBACNjB,EAAQ,iBACXt5C,EAFS,wEAJY08C,EAAON,EAAU,GAAE,qBACjCM,EAAON,EAAU,GAAE,aAAaM,EAAON,EAAU,GAAE,qBACnDM,EAAON,EAAU,GAEf,gCAITL,EAAa,gCACMG,EAAc,IAAIU,EAAqB,eAC1DzT,EAAM,kBAGZ,OAAO,IAAI,EAAA0P,eAAe0B,EAAQ,CAAC,iCAM3B,YAAAuB,iCAAV,SACIxC,EAAkBv1B,EAA4B+0B,EAA6Bv7C,GAC7E,IAAM87C,EAAc,CAACP,EAAa3hC,MAAO2hC,EAAa1hC,QAChD8lC,EAAa,CAACn5B,EAAY5M,MAAO4M,EAAY3M,QAC7C+kC,EAASp4B,EAAYq1B,cAAcn7C,OACnCm+C,EAAUtD,EAAaM,cAAcn7C,OACrC+9C,EAAUj4B,EAAYq1B,cACtBD,EAAWL,EAAaM,cACxB8C,EAAiB,EAAAV,2CAA2Cj+C,GAElE,GAAI4+C,IAAWC,GAAW,EAAA5B,UAAUC,YAAYyC,EAAY7D,GAAc,CACxE,IAAM,EAAS,qBACHC,EAAQ,0CACS/7C,EAAI,uCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAGrC,IAAM74C,EAAO,EAAAw8C,kBAAkBJ,GACzBC,EAAgB,EAAAC,cAAcC,iBAAiBP,EAAS7C,GACxDsD,EAAWL,EAAUD,EAErBO,EAAS,EAAAC,gBAeTpC,EAAS,mBACHjB,EAAQ,mBACZt5C,EAAI,4CAfG,IAAXm8C,EACc,GACPC,EAAU,GAAKC,EAAcp+C,QAAU,EAChC,cAEAo+C,EAAcz5C,KAAI,SAAAwC,GAAK,gBAAUs3C,EAAOt3C,EAAIq3C,GAAS,WAASl5C,KAAK,OAWhE,sBACN24C,EAAc,KATzBE,EAAU,GAAKD,EAAS,EACF,SAEAp4B,EAAYq1B,cAAcx2C,KAAI,SAACmC,EAAG/G,GAAM,gBAAU0+C,EAAO1+C,EAAIy+C,MAAal5C,KAAK,OAMnD,wBAGtD,OAAO,IAAI,EAAAs1C,eAAe0B,EAAQ,CAAC,iCAM3B,YAAAkB,0BAAV,SAAoCnC,EAAkB/7C,EAAcwmB,GAClE,OAAQA,EAAYq1B,cAAcn7C,QAChC,KAAK,EACH,OAAOI,KAAK8+C,uBAAuB7D,EAAU/7C,GAC/C,KAAK,EACH,OAAOc,KAAK++C,mBAAmB9D,EAAU/7C,EAAMwmB,GACjD,KAAK,EACH,OAAO1lB,KAAKg/C,mBAAmB/D,EAAU/7C,EAAMwmB,GACjD,KAAK,EACH,OAAO1lB,KAAKi/C,mBAAmBhE,EAAU/7C,EAAMwmB,GACjD,QACE,OAAO1lB,KAAKk/C,mBAAmBjE,EAAU/7C,EAAMwmB,KAO3C,YAAA23B,4BAAV,SAAsCpC,EAAkB/7C,EAAcwmB,GACpE,IAAMooB,EAAQpoB,EAAYq1B,cAC1B,OAAQjN,EAAMluC,QACZ,KAAK,EACH,OAAOI,KAAKm/C,yBAAyBlE,EAAU/7C,EAAMwmB,GACvD,KAAK,EACH,OAAO1lB,KAAKo/C,qBAAqBnE,EAAU/7C,EAAMwmB,GACnD,KAAK,EACH,OAAO1lB,KAAKq/C,qBAAqBpE,EAAU/7C,EAAMwmB,GACnD,KAAK,EACH,OAAO1lB,KAAKs/C,qBAAqBrE,EAAU/7C,EAAMwmB,GACnD,KAAK,EACH,OAAO1lB,KAAKu/C,qBAAqBtE,EAAU/7C,EAAMwmB,GACnD,KAAK,EACH,OAAO1lB,KAAKw/C,qBAAqBvE,EAAU/7C,EAAMwmB,GACnD,KAAK,EACH,OAAO1lB,KAAKy/C,qBAAqBxE,EAAU/7C,EAAMwmB,GACnD,QAEE,MAAM,IAAIhmB,MAAM,yBAAyBouC,EAAMluC,OAAM,QAOjD,YAAAk/C,uBAAV,SAAiC7D,EAAkB/7C,GACjD,IACMg9C,EAAS,oBACFjB,EAAQ,4BAFR,EAAAO,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAGtBy7B,UAAS,IAAI79C,EAAI,oCAGvC,OAAO,IAAI,EAAAs7C,eAAe0B,IAMlB,YAAA6C,mBAAV,SAA6B9D,EAAkB/7C,EAAcwmB,GAC3D,IAAMs2B,EAAW,CAACt2B,EAAY5M,MAAO4M,EAAY3M,QAC3CkjC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCc,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAOtC46B,EALgB,QAAQjB,EAAQ,yDAElCgB,EAAe,GAAE,KAAKA,EAAe,GAAE,2BAChCa,EAAKC,UAAS,IAAI79C,EAAI,gBAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,gCAM3B,YAAA8C,mBAAV,SAA6B/D,EAAkB/7C,EAAcwmB,GAC3D,IAAMooB,EAAQpoB,EAAYq1B,cACpBiB,EAAW,CAACt2B,EAAY5M,MAAO4M,EAAY3M,QAC3C+jC,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SACtCo+B,EAAU1D,EAAS,GACnB2D,EAAU3D,EAAS,GAEzB,GAAgB,MAAZA,GAAoB,EAAAG,UAAUC,YAAYtO,EAAOkO,GAAW,CAC9D,IAAM,EAAgB,QAAQf,EAAQ,4EACS0E,EAAO,OAAOD,EAAO,wBACzD5C,EAAKC,UAAS,IAAI79C,EAAI,kBAGjC,OAAO,IAAI,EAAAs7C,eAAe,GAE5B,IAAMyB,EAAiBD,EACjB4D,EAAelpC,KAAKC,KAAKm3B,EAAM,GAAK,GAKpCoO,EAJgB,QAAQjB,EAAQ,wDACTgB,EAAe,GAAE,KAAKA,EAAe,GAAE,KAAK2D,EAAY,8BAC1E9C,EAAKC,UAAS,IAAI79C,EAAI,gBAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,gCAM3B,YAAA+C,mBAAV,SAA6BhE,EAAkB/7C,EAAcwmB,GAC3D,IAAMooB,EAAQpoB,EAAYq1B,cACpBiB,EAAW,CAACt2B,EAAY5M,MAAO4M,EAAY3M,QAC3CkjC,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxCc,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAE5C,GAAiB,IAAbwsB,EAAM,GAAU,CAClB,IAAM+R,EAAgB/R,EAAMrlC,MAAM,GAE5Bq3C,EAAgB,EAAAC,kBAAkBjS,EAAO+R,GAGzCG,EAAgCC,KAAK9gB,MAAM8gB,KAAKC,UAAUx6B,IAChEs6B,EAAejF,cAAgB+E,EAC/B,IAAMK,EAAiBngD,KAAKo9C,0BAA0BnC,EAAU/7C,EAAM8gD,GAKhE,EAJmBG,EAAeC,YAAW,gBAC5CnF,EAAQ,+CACJA,EAAQ,IAAI,EAAAoF,kBAPR,CAAC,IAAK,MAAO,OAFX,CAAC,EAAG,IASqC,eAG1D,OAAO,IAAI,EAAA7F,eAAe,EAAQ2F,EAAeG,cAEnD,IAAMZ,EAAUzD,EAAe,GACzB0D,EAAU1D,EAAe,GAEzB2D,EAAelpC,KAAKC,KAAKm3B,EAAM,GAAK,GAOpCoO,EAJgB,QAAQjB,EAAQ,yEAEhC0E,EAAO,KAAKD,EAAO,KAJHE,EAAelpC,KAAKC,KAAKm3B,EAAM,GAAK,GAIf,KAAK8R,EAAY,iCACjD9C,EAAKC,UAAS,IAAI79C,EAAI,UAEjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,gCAK3B,YAAAgD,mBAAV,SAA6BjE,EAAkB/7C,EAAcwmB,GAa3D,IAZA,IAAMooB,EAAQpoB,EAAYq1B,cACpB2B,EAAO5O,EAAMluC,OACbo8C,EAAW,CAACt2B,EAAY5M,MAAO4M,EAAY3M,QAC3C+jC,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAEtC26B,EAAiB,CAACD,EAAS,GAAIA,EAAS,IACxC0D,EAAUzD,EAAe,GACzB0D,EAAU1D,EAAe,GACzB2D,EAAelpC,KAAKC,KAAKm3B,EAAM4O,EAAO,GAAK,GAC7CJ,EAAgBsD,EAAelpC,KAAKC,KAAKm3B,EAAM4O,EAAO,GAAK,GAC3D9rB,EAAS,0BACTC,EAAQ,OAAOyrB,EAAa,kBAAkBsD,EAAY,eACrDz4C,EAAI,EAAGA,EAAIu1C,EAAO,EAAGv1C,IAC5BypB,EAAS,QAAQzpB,EAAC,KAAOypB,EAEzBC,EAAQ,IAAI1pB,EAAC,OADbm1C,GAAiBxO,EAAM4O,EAAOv1C,EAAI,IACF,MAAQ0pB,EAE1C,IAOMqrB,EAPgB,QAAQjB,EAAQ,IAAIrqB,EAAM,0BAChCC,EAAK,+BACE8uB,EAAO,sCACAA,EAAO,yDACYA,EAAO,KAAKD,EAAO,oBACzD5C,EAAKC,UAAS,IAAI79C,EAAI,gBAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,IAMlB,YAAAiD,yBAAV,SAAmClE,EAAkB/7C,EAAcwmB,GAC3D,QAAqB,CAACA,EAAY5M,MAAO4M,EAAY3M,QAAO,GAA3D2mC,EAAO,KAAEC,EAAO,KACvB,GAAgB,IAAZD,GAA6B,IAAZC,EAAe,CAClC,IAAM,EAAS,qBACH1E,EAAQ,0CACS/7C,EAAI,oCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAGrC,IAAM0B,EAAS,mBACHjB,EAAQ,8BACD/7C,EAAI,gCAAgCwgD,EAAO,KAAKC,EAAO,sCAC7CD,EAAO,KAAKC,EAAO,YAAYzgD,EAAI,sCACnCA,EAAI,4BAGjC,OAAO,IAAI,EAAAs7C,eACP0B,EAAQ,CAAC,yBAA0B,4BAA6B,gCAM5D,YAAAkD,qBAAV,SAA+BnE,EAAkB/7C,EAAcwmB,GAC7D,IAAM66B,EAAQ76B,EAAY5M,MACpB0nC,EAAQ96B,EAAY3M,OAE1B,GAAc,IAAVynC,GAAyB,IAAVD,EAAa,CAC9B,IAAM,EAAS,mBACLtF,EAAQ,iDACS/7C,EAAI,gCAG/B,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAGrC,GAAc,IAAVgG,EAAa,CACf,IAAM,EAAS,qBACHvF,EAAQ,oEAC0BsF,EAAK,+CACtBrhD,EAAI,gCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAErC,GAAc,IAAV+F,EAAa,CACf,IAAM,EAAS,qBACHtF,EAAQ,yEAC+BuF,EAAK,0CAC3BthD,EAAI,gCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAErC,IAAM0B,EAAS,mBACHjB,EAAQ,iDACSsF,EAAK,KAAKC,EAAK,6CACfthD,EAAI,4BAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,yBAA0B,+BAOrD,YAAAmD,qBAAV,SAA+BpE,EAAkB/7C,EAAcwmB,GAC7D,IAAMooB,EAAQpoB,EAAYq1B,cAGpBiB,EAAW,CAACt2B,EAAY3M,OAAQ2M,EAAY5M,OAElD,GAAgB,MAAZkjC,GAAoB,EAAAG,UAAUC,YAAYtO,EAAOkO,GAAW,CAC9D,IAEM,EAAS,qBACHf,EAAQ,gFAHJe,EAAS,GAIiC,OAH1CA,EAAS,GAG+C,0CAC3C98C,EAAI,gCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,8BAG/B,MAAuB,EAAAiG,aAAa3S,GAAnC4S,EAAQ,WAAEC,EAAQ,WACnBd,EAAgBa,EACtB,GAAIb,EAAcjgD,OAASkuC,EAAMluC,OAAQ,CACvC,IAAMkgD,EAAgB,EAAAC,kBAAkBjS,EAAO+R,GAEzCG,EAAgCC,KAAK9gB,MAAM8gB,KAAKC,UAAUx6B,IAChEs6B,EAAejF,cAAgB+E,EAE/B,IACM,EAAS,eACT9/C,KAAKq9C,4BAA4BpC,EAAU/7C,EAAM8gD,GAAgBI,YAAW,qBACtEnF,EAAQ,4CACLA,EAAQ,IAAI,EAAAoF,kBAJZ,CAAC,MAAO,OAI8BM,GAAS,4BAG9D,OAAO,IAAI,EAAAnG,eAAe,EAAQ,CAAC,8BAGrC,IAAMkF,EAAU1D,EAAS,GACnB2D,EAAU3D,EAAS,GACzB,GAAgB,IAAZ2D,EAAe,CACjB,IAAM,EAAS,qBACH1E,EAAQ,gDACD/7C,EAAI,gCAAgCwgD,EAAO,KAAKC,EAAO,2DAC1BzgD,EAAI,WAAW4uC,EAAM,GAAE,8DAC3B4R,EAAO,0CACtBxgD,EAAI,gCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,4BAA6B,+BAGlE,GAAgB,IAAZkF,EAAe,CACjB,IAAM,EAAS,qBACHzE,EAAQ,gDACD/7C,EAAI,gCAAgCwgD,EAAO,KAAKC,EAAO,2DAC1BzgD,EAAI,WAAW4uC,EAAM,GAAE,yDAChC6R,EAAO,+CACjBzgD,EAAI,gCAGjC,OAAO,IAAI,EAAAs7C,eAAe,EAAQ,CAAC,4BAA6B,+BAGlE,IAAM0B,EAAS,mBACHjB,EAAQ,qDACMnN,EAAM,GAAE,2CACL4R,EAAO,KAAKC,EAAO,6CACnBzgD,EAAI,4BAGjC,OAAO,IAAI,EAAAs7C,eACP0B,EAAQ,CAAC,yBAA0B,4BAA6B,gCAO5D,YAAAoD,qBAAV,SAA+BrE,EAAkB/7C,EAAcwmB,GAC7D,IAAMooB,EAAQpoB,EAAYq1B,cACpB6F,EAAU9S,EAAM,GAAKA,EAAM,GAC3B+S,EAAU/S,EAAM,GAEhB,EAAuB,EAAA2S,aAAa3S,GAAnC4S,EAAQ,WAAEC,EAAQ,WACnBd,EAAgBa,EACtB,GAAIb,EAAcjgD,OAASkuC,EAAMluC,OAAQ,CACvC,IAAMkgD,EAAgB,EAAAC,kBAAkBjS,EAAO+R,GAGzCG,EAAgCC,KAAK9gB,MAAM8gB,KAAKC,UAAUx6B,IAChEs6B,EAAejF,cAAgB+E,EAC/B,IAAMgB,EAAU9gD,KAAKq9C,4BAA4BpC,EAAU/7C,EAAM8gD,GAE3De,EAAUJ,EAASK,UACnB,EAAS,eACTF,EAAQV,YAAW,qBACbnF,EAAQ,uDACLA,EAAQ,IAAI,EAAAoF,kBAVZ,CAAC,QAAS,MAAO,OAUqBU,GAAQ,4BAG7D,OAAO,IAAI,EAAAvG,eAAe,EAAQsG,EAAQR,cAG5C,IAEMpE,EAAS,qBACDjB,EAAQ,qJAEQ2F,EAAO,YAAYC,EAAO,6CALxCn7B,EAAY5M,MAMU,KALtB4M,EAAY3M,OAKsB,+CACnB7Z,EAAI,8BAGnC,OAAO,IAAI,EAAAs7C,eACP0B,EAAQ,CAAC,yBAA0B,4BAA6B,gCAO5D,YAAAqD,qBAAV,SAA+BtE,EAAkB/7C,EAAcwmB,GAC7D,IAAMooB,EAAQpoB,EAAYq1B,cACpBkG,EAAUnT,EAAM,GAChB+S,EAAU/S,EAAM,GAAKmT,EAyBrB/E,EAAS,mBACHjB,EAAQ,4EAzBJnN,EAAM,GAAK+S,EA0BM,YAAYA,EAAO,8BAC/BI,EAAO,6CALZv7B,EAAY5M,MAMQ,KALpB4M,EAAY3M,OAKoB,6CACnB7Z,EAAI,4BAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,yBAA0B,+BAMrD,YAAAsD,qBAAV,SAA+BvE,EAAkB/7C,EAAcwmB,GAC7D,IAAMooB,EAAQpoB,EAAYq1B,cACpBmG,EAAUpT,EAAM,GAChBmT,EAAUnT,EAAM,GAAKoT,EACrBL,EAAU/S,EAAM,GAAKmT,EACrBL,EAAU9S,EAAM,GAAK+S,EAErB,EAAuB,EAAAJ,aAAa3S,GAAnC4S,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS9gD,OAASkuC,EAAMluC,OAAQ,CAClC,IAAMkgD,EAAgB,EAAAC,kBAAkBjS,EAAO4S,GAGzCV,EAAgCC,KAAK9gB,MAAM8gB,KAAKC,UAAUx6B,IAChEs6B,EAAejF,cAAgB+E,EAE/B,IAAM,EAAS,eACT9/C,KAAKq9C,4BAA4BpC,EAAU/7C,EAAM8gD,GAAgBI,YAAW,qBACtEnF,EAAQ,+EACLA,EAAQ,IAAI,EAAAoF,kBARZ,CAAC,MAAO,MAAO,QAAS,SAAU,UAQIM,GAAS,4BAG9D,OAAO,IAAI,EAAAnG,eAAe,EAAQ,CAAC,4BAA6B,2BAGlE,IAEM0B,EAAS,mBACHjB,EAAQ,wFACM2F,EAAO,YAAYC,EAAO,cAAcI,EAAO,0BACxDC,EAAO,8CALRx7B,EAAY5M,MAMQ,KALpB4M,EAAY3M,OAKoB,6CACnB7Z,EAAI,4BAGjC,OAAO,IAAI,EAAAs7C,eAAe0B,EAAQ,CAAC,4BAA6B,4BAMxD,YAAAuD,qBAAV,SAA+BxE,EAAkB/7C,EAAcwmB,GAC7D,IAAMooB,EAAQpoB,EAAYq1B,cACpBoG,EAAUrT,EAAM,GAChBoT,EAAUpT,EAAM,GAAKqT,EACrBF,EAAUnT,EAAM,GAAKoT,EACrBL,EAAU/S,EAAM,GAAKmT,EACrBL,EAAU9S,EAAM,GAAK+S,EAErB,EAAuB,EAAAJ,aAAa3S,GAAnC4S,EAAQ,WAAEC,EAAQ,WACzB,GAAID,EAAS9gD,OAASkuC,EAAMluC,OAAQ,CAClC,IAAMkgD,EAAgB,EAAAC,kBAAkBjS,EAAO4S,GAGzCV,EAAgCC,KAAK9gB,MAAM8gB,KAAKC,UAAUx6B,IAChEs6B,EAAejF,cAAgB+E,EAE/B,IAAM,EAAS,iBACP9/C,KAAKq9C,4BAA4BpC,EAAU/7C,EAAM8gD,GAAgBI,YAAW,uBACtEnF,EAAQ,4GAELA,EAAQ,IAAI,EAAAoF,kBATd,CAAC,MAAO,MAAO,QAAS,SAAU,SAAU,UASJM,GAAS,gCAGhE,OAAO,IAAI,EAAAnG,eAAe,EAAQ,CAAC,4BAA6B,2BAGlE,IAEM0B,EAAS,qBACDjB,EAAQ,mHAEM2F,EAAO,YAAYC,EAAO,cAAcI,EAAO,4BACxDC,EAAO,eAAeC,EAAO,gDANhCz7B,EAAY5M,MAOU,KANtB4M,EAAY3M,OAMsB,+CACnB7Z,EAAI,gCAGnC,OAAO,IAAI,EAAAs7C,eACP0B,EAAQ,CAAC,yBAA0B,4BAA6B,gCAS5D,YAAAhC,MAAV,WAQE,IAPA,IAAMpP,EAAS9qC,KAAK65C,QAAQa,oBACtBgC,EAAO5R,EAAOgD,MAAMluC,OACpBua,EAAU2wB,EAAO3wB,QACjBinC,EAAStW,EAAOhyB,MAChBuoC,EAASvW,EAAO/xB,OAEhBuoC,EAAe,GACZ3hD,EAAI,EAAGA,EAAI+8C,EAAO,IAAK/8C,EAC9B2hD,EAAaxhD,KAAK,eACZH,EAAC,gBAAgBwa,EAAQxa,GAAE,KACjC2hD,EAAaxhD,KAAK,yBACFH,EAAC,OAAOwa,EAAQxa,GAAE,KAEpC2hD,EAAaxhD,KAAK,gBACV48C,EAAO,GAAC,eAChB,IAAM6E,EAAO,gDAC4B7E,EAAI,wDACA0E,EAAM,KAAKC,EAAM,eACxDC,EAAap8C,KAAK,IAAG,qDAEUw3C,EAAI,iBACnC4E,EAAap8C,KAAK,IAAG,kBAG3B,MAAO,CAACg1C,MAAO,IAAI,EAAAM,eAAe+G,EAAM,CAAC,iCAQjC,YAAApH,UAAV,sBACQpc,EAA2C,GAcjD,OAbA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GACjD,IAAM2a,EAAS,EAAKu/B,QAAQqD,oBAAoBv9C,GAE1C+8C,GADQpiC,EAAOygC,cAAcn7C,OAAS,EAAI0a,EAAOygC,cAAgBzgC,EAAOwzB,OAC3DluC,OACfq7C,EAAW,IAAI/7C,EACnB6+B,EAAOkd,GAAY,IAAI,EAAAT,eACnB,EAAKgH,mBAAmBtiD,EAAMw9C,EAAMpiC,EAAOxB,MAAOwB,EAAOvB,QAAQ,GACjE,CAAC,6BAA6BkiC,EAAY,6BAA8B,8BAE5Eld,EADAkd,GAAsB,MACH,IAAI,EAAAT,eACnB,EAAKgH,mBAAmBtiD,EAAMw9C,EAAMpiC,EAAOxB,MAAOwB,EAAOvB,QAAQ,GACjE,CAAC,6BAA6BkiC,EAAY,6BAA8B,iCAEvEld,GASC,YAAAyjB,mBAAV,SAA6BC,EAAiB/E,EAAc5jC,EAAeC,EAAgByO,GAEzF,IAAItoB,EAAO,IAAIuiD,EAKf,OAJIj6B,IACFtoB,GAAc,MAGT,mBACKA,EAAI,UAAUw9C,EAAI,+CACMx9C,EAAI,wDACK4Z,EAAK,KAAKC,EAAM,+CAJhD,EAAAyiC,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAKDy7B,UAAS,IAAI0E,EAAO,6DAavD,YAAAC,mBAAV,SAA6BD,EAAiB/E,EAAc5jC,EAAeC,EAAgByO,GAEzF,IAAItoB,EAAO,IAAIuiD,EAAO,QAKtB,OAJIj6B,IACFtoB,GAAc,MAGT,kBACIA,EAAI,UAAUw9C,EAAI,gDACQ+E,EAAO,wDACC3oC,EAAK,KAAKC,EAAM,wBAJhD,EAAAyiC,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAKxBy7B,UAAS,IAAI0E,EAAO,mCAI5C,EA1yCA,CAAmC,EAAAE,SAAtB,EAAAC,iB,gCCRb,IAAYC,E,oKAAAA,EAAA,EAAAA,eAAA,EAAAA,aAAY,KACtB,6BACA,+BAaW,EAAAC,YACX,SACWvI,EAAgCyD,EAAiCE,EACjExC,GADA,KAAAnB,YAAgC,KAAAyD,cAAiC,KAAAE,sBACjE,KAAAxC,uBAES,EAAAiH,QACpB,SAAmB9H,GAAA,KAAAA,WAMR,EAAAW,eACX,SAAmB4F,EAA4BE,GAA5B,KAAAF,cAA4B,KAAAE,gBAKjD,iBAGE,WAAmBphD,EAAckhD,EAAsBE,GAApC,KAAAphD,OAEfc,KAAKsgD,aADHA,GAGkB,GAGlBF,IACFpgD,KAAKogD,YAAcA,GAQzB,OALE,YAAA2B,cAAA,SAAcn6C,GACRA,GACF5H,KAAKsgD,aAAaxgD,KAAK8H,IAG7B,EAnBA,GAAa,EAAAo6C,qBAsBb,+BA0DA,OAzDS,EAAAC,mBAAP,SAA0BC,GACxB,IAAKA,GAA0B,IAAjBA,EAAMtiD,OAClB,MAAO,GAGT,GAAqB,IAAjBsiD,EAAMtiD,OACR,OAAOsiD,EAGT,IAAMC,EAAa,IAAIC,IACjBC,EAAmB,IAAID,IACvBrkB,EAAS,IAAIj8B,MAGnB,OADA9B,KAAKsiD,mBAAmBJ,EAAOC,EAAYE,EAAkBtkB,GACtDA,GAGM,EAAAukB,mBAAf,SACIC,EAAkCJ,EAAyBE,EAC3DtkB,GACF,IAAK,IAAIp+B,EAAI,EAAGA,EAAI4iD,EAAW3iD,SAAUD,EACvCK,KAAKwiD,YAAYD,EAAW5iD,GAAIwiD,EAAYE,EAAkBtkB,IAInD,EAAAykB,YAAf,SACIhkD,EAA0B2jD,EAAyBE,EAA+BtkB,GAEpF,GAAKv/B,IAAQ6jD,EAAiBI,IAAIjkD,EAAKU,MAAvC,CAKA,GAAIijD,EAAWM,IAAIjkD,EAAKU,MACtB,MAAM,IAAIQ,MAAM,oFAIlByiD,EAAW/9B,IAAI5lB,EAAKU,MAGpB,IAAMohD,EAAe9hD,EAAK8hD,aAC1B,GAAIA,GAAgBA,EAAa1gD,OAAS,EACxC,IAAK,IAAID,EAAI,EAAGA,EAAI2gD,EAAa1gD,SAAUD,EACzCK,KAAKwiD,YAAYlC,EAAa3gD,GAAIwiD,EAAYE,EAAkBtkB,GAKpEA,EAAOj+B,KAAKtB,GAGZ6jD,EAAiBj+B,IAAI5lB,EAAKU,MAG1BijD,EAAW7L,OAAO93C,EAAKU,QAE3B,EA1DA,GAAa,EAAAwjD,+B,8yBC3Db,cAMA,cACE,WAAY7I,G,OACV,YAAMA,IAAQ,KAuFlB,OAzFqC,OAInC,YAAAE,aAAA,WACE,OAAO,EAAP,KAAW/5C,KAAK2iD,iBAAoB3iD,KAAK4iD,kBAE3C,YAAArI,eAAA,WACE,MAAO,IAEC,YAAAoI,cAAV,WACE,MAAO,CACLtxB,OAAQ,IAAI,EAAAmpB,eAAe,mGAMrB,YAAAoI,cAAV,WACE,MAAO,CACLr3C,OAAQ,IAAI,EAAAivC,eAAe,sFAUrB,YAAAqI,YAAV,WACE,IAAMC,EAAaC,EAAgBhsB,iBAAmB,uBAAyB,GAC/E,MAAO,CACL1F,OAAQ,IAAI,EAAAmpB,eAAe,kmBAYvBsI,EAAU,oHAWR,YAAAE,YAAV,WACE,IAAMF,EAAaC,EAAgBhsB,iBAAmB,uBAAyB,GAC/E,MAAO,CACLxrB,OAAQ,IAAI,EAAAivC,eAAe,uJAGrBsI,EAAU,uYAcb,EAAA/rB,eAAP,WACE,IAAM5vB,EAAI,IAAInD,YAAY,GACpBsC,EAAI,IAAIlF,YAAY+F,GACpBV,EAAI,IAAI3F,WAAWqG,GAEzB,GADAb,EAAE,GAAK,WACM,MAATG,EAAE,GACJ,OAAO,EAET,GAAa,MAATA,EAAE,GACJ,OAAO,EAET,MAAM,IAAI/G,MAAM,uBAEpB,EAzFA,CAAqC,EAAAiiD,SAAxB,EAAAoB,mB,+yBCNb,cACA,UAOA,cACE,WAAYlJ,G,OACV,YAAMA,IAAQ,KA+BlB,OAjCsC,OAIpC,YAAAE,aAAA,WACE,OAAO,EAAP,KAAW/5C,KAAKijD,gBAAmBjjD,KAAKkjD,oBAE1C,YAAA3I,eAAA,WACE,MAAO,IAEC,YAAA0I,aAAV,WACE,IAAMnG,EAAO,EAAAtB,QAAQx7C,KAAK65C,QAAQN,UAAUj4B,SAC5C,MAAO,CACL2hC,aAAc,IAAI,EAAAzI,eACd,2DAEIsC,EAAKhS,OAAM,yCAGf,CAAC,sBAGC,YAAAoY,gBAAV,WACE,MAAO,CACLA,gBAAiB,IAAI,EAAA1I,eACjB,wGAKA,CAAC,sBAGX,EAjCA,CAAsC,EAAAmH,SAAzB,EAAAwB,oB,yGCRb,IAAMC,EAAwB,qFAK9B,0BAA+BC,GAG7B,IAFA,IACI/mC,EADEgnC,EAAiG,GAE/C,QAAhDhnC,EAAQ8mC,EAAsBG,KAAKF,KAAmB,CAC5D,IAAMzyB,EAAStU,EAAM,GACD9C,MAAM,KACNjV,KAAI,SAAAmC,GACH,IAAM88C,EAAS98C,EAAE+8C,OAAOjqC,MAAM,KAC9B,OAAIgqC,GAA4B,IAAlBA,EAAO5jD,OACZ,CAAC+B,KAAM6hD,EAAO,GAAItkD,KAAMskD,EAAO,IAEjC,QAERE,QAAO,SAAApgD,GAAK,OAAM,OAANA,KAChCggD,EAAWhnC,EAAM,IAAM,CAACsU,OAAM,EAAE2wB,KAAMjlC,EAAM,IAE9C,IAAK,IAAM,KAAQgnC,EAGjB,IAFA,IAAMK,EArBc,6DAqBgBn7C,QAAQ,WAAY,GAClDo7C,EAAQ,IAAIrlC,OAAOolC,EAAa,M,aAEpC,IAAMhiD,EAAO2a,EAAM,GACbunC,EAAWvnC,EAAM,GACjBsU,EAAStU,EAAM,GAAG9C,MAAM,KACxBsqC,EAAW,EAAYniD,EAAI,IAAIkiD,EAAQ,IAAM,GAC/CE,EAAkBT,EAAW,GAAM/B,KACnCyC,EAAiB,GACrBV,EAAW,GAAM1yB,OAAOjV,SAAQ,SAACrY,EAAG3D,GAC9B2D,IACF0gD,GAAqB1gD,EAAE3B,KAAI,IAAI2B,EAAEpE,KAAI,MAAM0xB,EAAOjxB,GAAE,UAKxD,IAAMskD,EAAc,WAClBH,EAAQ,uBAFVC,GADAA,EAAaC,EAAc,MAAMD,GACfv7C,QAAQ,SAAaq7C,EAAQ,QAIpC,oBAGXR,EAASA,EAAO76C,QAAQ8T,EAAM,GAAI2nC,IApBI,QAAhC3nC,EAAQsnC,EAAML,KAAKF,K,IAwB7B,OADAA,EAASA,EAAO76C,QAAQ46C,EAAuB,M,kbC/CjD,cACA,UACA,UACA,UAYA,aAKE,WACI7J,EAAyByD,EAA0BE,EACnDxC,GAFJ,WAHS,KAAAwJ,KAAkC,GAClC,KAAAC,8BAA6E,GAKpFnkD,KAAK65C,QAAU,IAAI,EAAAiI,YAAYvI,EAAWyD,EAAaE,EAAqBxC,GAG5Et3C,OAAOmyB,KAAK,EAAA6uB,cAAczoC,SAAQ,SAACzc,GACjC,IAAMmlD,EAAM,IAAI,EAAAD,aAAallD,GAAM,EAAK26C,SACxC,EAAKqK,KAAKhlD,GAAQmlD,KAIpB,IAAM9/C,EAAMvE,KAAKmkD,8BACjB,IAAK,IAAMG,KAAWtkD,KAAKkkD,KAAM,CAC/B,IACMK,EADMvkD,KAAKkkD,KAAKI,GACIvK,eAC1B,IAAK,IAAM+G,KAAWyD,EAAe,CACnC,IAAM5gD,EAAM2gD,EAAU,IAAMxD,EACxB0D,OAAW,EACXjgD,EAAIZ,IACN6gD,EAAcjgD,EAAIZ,IACNy8C,YAAcmE,EAAczD,GAASV,aAEjDoE,EAAc,IAAI,EAAAxC,mBAAmBr+C,EAAK4gD,EAAczD,GAASV,aACjE77C,EAAIZ,GAAO6gD,GAEb,IAAMlE,EAAeiE,EAAczD,GAASR,aAC5C,GAAIA,EACF,IAAK,IAAI3gD,EAAI,EAAGA,EAAI2gD,EAAa1gD,SAAUD,EACzC,GAAK4E,EAAI+7C,EAAa3gD,IAKpB6kD,EAAYzC,cAAcx9C,EAAI+7C,EAAa3gD,SALlB,CACzB,IAAMiI,EAAO,IAAI,EAAAo6C,mBAAmB1B,EAAa3gD,IACjD4E,EAAI+7C,EAAa3gD,IAAMiI,EACvB48C,EAAYzC,cAAcn6C,MA2ExC,OAjEE,YAAA68C,WAAA,WACE,IAAMzH,EAAch9C,KAAK65C,QAAQmD,YAC7Bd,EAASc,EAAY0H,aAWzB,OARK1kD,KAAK65C,QAAQmD,YAAY2H,UAC5BzI,EAAYA,EAAM,WAChB,EAAA0I,yBAAyB5kD,KAAK65C,QAAQN,UAAUj4B,QAASthB,KAAK65C,QAAQa,oBAAoB5M,MAAMluC,SAGpGs8C,EAAS,EAAA2I,eAAe3I,GAGd,EAAA4I,sBAAsB9kD,KAAK65C,QAAQN,UAAUj4B,SAAQ,SAC7DthB,KAAK+kD,YAAY/H,EAAYz5C,WAAYy5C,EAAYgI,WAAU,SAC/DhlD,KAAKilD,WAAW/I,GAAO,SACvBA,GAGM,YAAA+I,WAAV,SAAqB5B,GACnB,IAAM6B,EAAmBllD,KAAKmlD,kCAAkC9B,GAEhE,GAAgC,IAA5B6B,EAAiBtlD,OACnB,MAAO,GAIT,IADA,IAAIwlD,EAAW,GACNzlD,EAAI,EAAGA,EAAIulD,EAAiBtlD,SAAUD,EAAG,CAChD,IAAIulD,EAAiBvlD,GAAGygD,YAGtB,MAAM,IAAI1gD,MAAM,8CAA8CwlD,EAAiBvlD,GAAGT,MAFlFkmD,GAAYF,EAAiBvlD,GAAGygD,YAAc,KAMlD,OAAOgF,GAED,YAAAD,kCAAR,SAA0C9B,GAA1C,WACQnB,EAA8B,GASpC,OAPA9+C,OAAOmyB,KAAKv1B,KAAKmkD,+BAA+BxoC,SAAQ,SAAA0pC,GACtD,IAAMvE,EAAUuE,EAAgB7rC,MAAM,KAAK,IACV,IAA7B6pC,EAAOhjD,QAAQygD,IACjBoB,EAAMpiD,KAAK,EAAKqkD,8BAA8BkB,OAI3C,EAAA3C,4BAA4BT,mBAAmBC,IAG9C,YAAA6C,YAAV,SAAsBO,EAAqBN,G,YACnCO,EAAyB,GAC/B,GAAID,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChBD,EAAazlD,KAAK,qBAAqB0lD,EAAO,M,iGAGlD,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMnB,EAAQ,QACjB0B,EAAazlD,KACT,WAAW+jD,EAASliD,KAAI,IAAIkiD,EAAS3kD,MAAO2kD,EAAS4B,YAAc,IAAI5B,EAAS4B,YAAW,IAAM,IAAE,M,iGAG3G,OAAOF,EAAargD,KAAK,OAE7B,EAhHA,GAAa,EAAAwgD,oB,yGCfb,cAEA,UACA,UACA,UACA,UAEa,EAAAtB,aAAwE,CACnF,SAAY,EAAArB,gBACZ,UAAa,EAAAI,iBACb,IAAO,EAAAwC,WACP,WAAc,EAAAC,kBACd,YAAe,EAAAhE,gB,gzBCZjB,cAMA,cACE,WAAY/H,G,OACV,YAAMA,IAAQ,KA0JlB,OA5JuC,OAIrC,YAAAE,aAAA,WACE,OAAO,EAAP,WACK/5C,KAAK6lD,cACL7lD,KAAK8lD,oBACL9lD,KAAK+lD,mBACL/lD,KAAKgmD,mBACLhmD,KAAKimD,qBAGZ,YAAA1L,eAAA,WACE,MAAO,IAEC,YAAAsL,WAAV,sBACQK,EAAalmD,KAAK65C,QAAQa,oBAAoB5M,MAAMluC,OACpDm+B,EAA2C,GAqBjD,OApBA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GACjD,IAAMmuC,EAAQ,EAAK+L,QAAQqD,oBAAoBv9C,GAAGo7C,cAClD,GAAIjN,EAAMluC,QAAUsmD,EAAY,CAK9B,IAJA,IAAMxJ,EAAO5O,EAAMluC,OACbumD,EAAYD,EAAaxJ,EACzBzB,EAAW,gBAAgB/7C,EAC7BknD,EAAQ,GACH,EAAI,EAAG,EAAI1J,IAAQ,EAC1B0J,GAAS,2BACK,EAAC,sCAAqCD,EAAY,GAAC,OAAOrY,EAAM,GAAE,qBAGlF,IAAMyT,EAAO,kBACNtG,EAAQ,wBAAwBiL,EAAU,0BAA0BxJ,EAAI,mBAC3E0J,EAAK,wBAGTroB,EAAOkd,GAAY,IAAI,EAAAT,eAAe+G,OAGnCxjB,GAEC,YAAA+nB,iBAAV,sBACQI,EAAalmD,KAAK65C,QAAQa,oBAAoB5M,MAAMluC,OACpDm+B,EAA2C,GAuBjD,OAtBA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GACjD,IAAMmuC,EAAQ,EAAK+L,QAAQqD,oBAAoBv9C,GAAGmuC,MAClD,KAAMA,EAAMluC,OAAS,GAAKkuC,EAAMluC,OAASsmD,GAAa,CAKpD,IAJA,IAAMxJ,EAAO5O,EAAMluC,OACbumD,EAAYD,EAAaxJ,EACzBzB,EAAW,sBAAsB/7C,EACnCknD,EAAQ,GACH,EAAI,EAAG,EAAI1J,EAAO,IAAK,EAC9B0J,GAAS,2BACK,EAAC,sCAAqCD,EAAY,GAAC,OAAOrY,EAAM,GAAE,qBAGlF,IAAMyT,EAAO,kBACNtG,EAAQ,uBAAuBiL,EAAU,0BAA0BxJ,EAAI,mBAC1E0J,EAAK,4BACO1J,EAAO,GAAC,uBAAsBwJ,EAAa,GAAC,8BAC5CxJ,EAAO,GAAC,uBAAsBwJ,EAAa,GAAC,0BAG5DnoB,EAAOkd,GAAY,IAAI,EAAAT,eAAe+G,OAGnCxjB,GAEC,YAAAioB,gBAAV,sBACQjoB,EAA2C,GAWjD,OAVA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GACjD,IAAMmuC,EAAQ,EAAK+L,QAAQqD,oBAAoBv9C,GAAGmuC,MAC5C3zB,EAAU,EAAK0/B,QAAQqD,oBAAoBv9C,GAAGwa,QAC9CuiC,EAAO5O,EAAMluC,OACfq7C,EAAW,mBAAmB/7C,EAClC6+B,EAAOkd,GAAY,IAAI,EAAAT,eAAeoL,EAAkBS,oBAAoBpL,EAAUyB,EAAMviC,IAE5F4jB,EADAkd,EAAW,mBAAmB/7C,EAAI,MAE9B,IAAI,EAAAs7C,eAAeoL,EAAkBS,oBAAoBpL,EAAUyB,EAAMviC,EAAQ1R,QAAQu4C,eAExFjjB,GAEF,EAAAsoB,oBAAP,SAA2BnnD,EAAcw9C,EAAcviC,GAErD,IADA,IAAIisC,EAAQ,GACHzmD,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/BymD,GAAS,+BACazmD,EAAC,OAAOwa,EAAQxa,GAAE,cAG1C,MAAO,eACCT,EAAI,gBAAgBw9C,EAAI,0CAE1B0J,EAAK,6CAKH,YAAAL,gBAAV,sBACQhoB,EAA2C,GAWjD,OAVA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GACjD,IAAMmuC,EAAQ,EAAK+L,QAAQqD,oBAAoBv9C,GAAGmuC,MAC5C3zB,EAAU,EAAK0/B,QAAQqD,oBAAoBv9C,GAAGwa,QAC9CuiC,EAAO5O,EAAMluC,OACfq7C,EAAW,mBAAmB/7C,EAClC6+B,EAAOkd,GAAY,IAAI,EAAAT,eAAeoL,EAAkBU,sBAAsBrL,EAAUyB,EAAMviC,IAE9F4jB,EADAkd,EAAW,mBAAmB/7C,EAAI,MAE9B,IAAI,EAAAs7C,eAAeoL,EAAkBU,sBAAsBrL,EAAUyB,EAAMviC,EAAQ1R,QAAQu4C,eAE1FjjB,GAEF,EAAAuoB,sBAAP,SAA6BpnD,EAAcw9C,EAAcviC,GAEvD,IADA,IAAMmnC,EAAe,GACZ3hD,EAAI,EAAGA,EAAI+8C,EAAO,IAAK/8C,EAC9B2hD,EAAaxhD,KAAK,mBACRH,EAAC,gBAAgBwa,EAAQxa,GAAE,KACrC2hD,EAAaxhD,KAAK,+BACIH,EAAC,OAAOwa,EAAQxa,GAAE,KAI1C,OAFA2hD,EAAaxhD,KAAK,oBACN48C,EAAO,GAAC,eACb,gBACEx9C,EAAI,gCAAgCw9C,EAAI,iBAC3C4E,EAAap8C,KAAK,IAAG,qBAInB,YAAA+gD,iBAAV,sBACQloB,EAA2C,GA0BjD,OAzBA/9B,KAAK65C,QAAQmD,YAAYz5C,WAAWoY,SAAQ,SAACzc,EAAMS,GAKjD,IAJA,IAAMmuC,EAAQ,EAAK+L,QAAQqD,oBAAoBv9C,GAAGmuC,MAC5C4O,EAAO5O,EAAMluC,OACbq7C,EAAW,oBAAoB/7C,EACjCqnD,EAAY,GACP,EAAI,EAAG,EAAI7J,IAAQ,EAC1B6J,GAAa,mBACL,EAAC,OAAOzY,EAAM,GAAE,IAE1B,IAAMyT,EAAO,kBACJtG,EAAQ,8BAA8ByB,EAAI,6BACnCA,EAAI,iBACd6J,EAAS,4BACG7J,EAAI,sOAUtB3e,EAAOkd,GAAY,IAAI,EAAAT,eAAe+G,MAEjCxjB,GAEX,EA5JA,CAAuC,EAAA4jB,SAA1B,EAAAiE,qB,6KCOb,IAAMY,EAAoB,CACxBllC,QAAS,GACTypB,UAAW,YACX0b,cAAe,UACfC,YAAa,UACb3J,UAAW,YACXjS,OAAQ,eACR6b,kBAAmB,IAEfC,EAAoB,CACxBtlC,QAAS,kBACTypB,UAAW,KACX0b,cAAe,MACfC,YAAa,KACb3J,UAAW,UACXjS,OAAQ,cACR6b,kBAAmB,yBAGrB,SAAgBnL,EAAQl6B,GACtB,OAAmB,IAAZA,EAAgBklC,EAAcI,EADvC,YAIA,iCAAsCtlC,GACpC,IAAMw7B,EAAOtB,EAAQl6B,GACrB,OAAUw7B,EAAKx7B,QAAO,yCAEhBw7B,EAAK/R,UAAS,0BACd+R,EAAK/R,UAAS,gCAEd+R,EAAK2J,cAAa,8IAS1B,iCAAsCnlC,GACpC,IAAMw7B,EAAOtB,EAAQl6B,GACrB,OAAUw7B,EAAKx7B,QAAO,+FAIlBw7B,EAAK4J,YAAW,yBAChB5J,EAAK6J,kBAAiB,sZA8B5B,oCAAyCrlC,EAAculC,GAErD,MAAO,sCAESA,EAAiB,sFAHpBrL,EAAQl6B,GAMZwpB,OAAM,wB,yyBChGjB,cAOA,cACE,WAAY+O,G,OACV,YAAMA,IAAQ,KAoGlB,OAtGgC,OAI9B,YAAAU,eAAA,WACE,MAAO,IAET,YAAAR,aAAA,WACE,OAAO,EAAP,SAAW/5C,KAAK8mD,sBAAyB9mD,KAAK+mD,WAAc/mD,KAAKgnD,cAAiBhnD,KAAKinD,eAE/E,YAAAH,mBAAV,WACE,IACMpK,EADe18C,KAAK65C,QAAQa,oBACR5M,MAAMluC,OAC1BsnD,EAAmC,CAAC9iC,IAAK,KAAMoe,IAAK,KAAMhB,IAAK,KAAMc,IAAK,MAC1EvE,EAA2C,GACjD,IAAK,IAAM,KAAQmpB,EAAQ,CAGzB,IAFA,IAAMC,EAAW,EAAI,MACjBC,EAAkB,GACbznD,EAAI,EAAGA,EAAI+8C,IAAQ/8C,EAC1BynD,GAAmB,oBACVznD,EAAC,KAAKunD,EAAO,GAAK,QAAQvnD,EAAC,iBAGtC,IAAM4hD,EAAO,kBACJ4F,EAAK,YAAYzK,EAAI,mBAAmBA,EAAI,mBAC/C0K,EAAe,wBAGrBrpB,EAAOopB,GAAS,IAAI,EAAA3M,eAAe+G,GAGrC,OAAOxjB,GAEC,YAAAgpB,QAAV,WAIE,IAHA,IACMrK,EADe18C,KAAK65C,QAAQa,oBACR5M,MAAMluC,OAC5BwnD,EAAkB,GACbznD,EAAI,EAAGA,EAAI+8C,IAAQ/8C,EAC1BynD,GAAmB,kBACVznD,EAAC,WAAWA,EAAC,eAGxB,IAAM4hD,EAAO,gCACY7E,EAAI,mBAAmBA,EAAI,iBAC9C0K,EAAe,oBAGrB,MAAO,CAACL,QAAS,IAAI,EAAAvM,eAAe+G,KAG5B,YAAAyF,WAAV,WASE,IARA,IACMtK,EADe18C,KAAK65C,QAAQa,oBACR5M,MAAMluC,OAC5BwmD,EAAQ,+CAEK1J,EAAI,0EAIZ/8C,EAAI,EAAGA,EAAI+8C,EAAO,IAAK/8C,EAC9BymD,GAAS,+BACazmD,EAAC,oBACbA,EAAC,2BAOb,IAAM4hD,EAAO,qCACiB7E,EAAI,wCALlC0J,GAAS,kCAEG1J,EAAO,GAAC,wBAIT,sBAGX,MAAO,CAACsK,WAAY,IAAI,EAAAxM,eAAe+G,KAE/B,YAAA0F,WAAV,WASE,IARA,IACMvK,EADe18C,KAAK65C,QAAQa,oBACR5M,MAAMluC,OAC5BwmD,EAAQ,gDAEM1J,EAAI,uEAIb/8C,EAAI,EAAGA,EAAI+8C,EAAO,IAAK/8C,EAC9BymD,GAAS,+BACazmD,EAAC,2BACNA,EAAC,aAOpB,IAAM4hD,EAAO,gCACY7E,EAAI,6BAL7B0J,GAAS,yCAEU1J,EAAO,GAAC,gBAIhB,kBAGX,MAAO,CAACuK,WAAY,IAAI,EAAAzM,eAAe+G,KAE3C,EAtGA,CAAgC,EAAAI,SAAnB,EAAAgE,c,qtDCNb,cACA,UACA,UACA,UACA,UAEA,UACA,UAGA,UACA,UAeA,aAGE,WAAmBrR,GAAA,KAAAA,UACjBt0C,KAAKqnD,uBAAyB,IAAIzmD,IAClCZ,KAAKsnD,yBAA2B,IAAI1mD,IAiRxC,OA3QE,YAAA2mD,+BAAA,SAA+BzZ,EAA0B0Z,GACvD,OAAO,EAAAD,+BAA+BvnD,KAAKs0C,QAAQmT,eAAgB3Z,EAAO0Z,IAG5E,YAAAE,eAAA,SAAeC,EAAwCC,GACrD,GAAIA,EAAOhoD,OAAS+nD,EAAQpkD,WAAW3D,OACrC,MAAM,IAAIF,MAAM,mCAAmCioD,EAAQpkD,WAAW3D,OAAM,KAE9E,GAAI+nD,EAAQpkD,WAAW3D,SAAW+nD,EAAQE,WAAWjoD,OACnD,MAAM,IAAIF,MAAM,+CAKlB,IADA,IAAMooD,EAAmC,GAChCnoD,EAAI,EAAGA,EAAIgoD,EAAQpkD,WAAW3D,SAAUD,EAC/CmoD,EAAkBnoD,GAAKK,KAAK+nD,uBAAuBH,EAAOjoD,GAAIgoD,EAAQE,WAAWloD,IAGnF,IAAMgE,EAzCN,SAACq5C,EAA4C8K,GAC3C,IAAMF,EACFE,EAAkBvjD,KAAI,SAAAyjD,GAAW,OAAGA,EAAQjN,cAAc71C,KAAK,KAAI,IAAI8iD,EAAQlvC,MAAK,IAAIkvC,EAAQjvC,UAC3F7T,KAAK,KACVvB,EAAMq5C,EAAY99C,KAKtB,OAJI89C,EAAYiL,YACdtkD,GAAO,IAAMq5C,EAAYiL,UAAY,KAEvCtkD,EAAO,IAAMikD,EAiCHM,CAAwBP,EAASG,GACzCK,EAAWnoD,KAAKs0C,QAAQ8T,eAAeC,YAAY1kD,GACjDq5C,EAAcmL,EAChBA,EAASnL,YACsC,mBAAtC2K,EAA8B1lD,IAAsB0lD,EAA8B1lD,MAC9B0lD,EAG3DjN,EAAsB,EAAA4N,mCACxBtoD,KAAKs0C,QAAQmT,eAAgBzK,EAAYlS,OAAOjpC,KAAMm7C,EAAYlS,OAAO0c,aACvEe,EAAoBvoD,KAAKwoD,kBAAkB9N,EAAqBsC,EAAYlS,OAAOnpC,MAQzF,OANKwmD,IACHA,EAAWnoD,KAAKs0C,QAAQ8T,eAAerjC,MAAMi4B,EAAa8K,EAAmBS,GAC7EvoD,KAAKs0C,QAAQ8T,eAAeK,YAAY9kD,EAAKwkD,IAG/CnoD,KAAK0oD,WAAWP,EAAUL,EAAmBS,GACtCA,GAGT,YAAA9kD,IAAA,SAAIkkD,EAA4BC,GAE9B,OAD0B5nD,KAAK0nD,eAAeC,EAASC,GAC9Be,QAGnB,YAAAD,WAAR,SAAmBP,EAAoBP,EAAuB9c,GAE5D,IAAK,IAAInrC,EAAI,EAAGA,EAAIioD,EAAOhoD,SAAUD,EACnC,KAAMioD,EAAOjoD,GAAGg7C,WAAcwN,EAASnL,YAAY6K,WAAWloD,KAAO,EAAAipD,YAAYC,QAC/E,MAAM,IAAInpD,MAAM,SAASC,EAAC,kCAK9B,KAAMmrC,EAAO6P,WAAcwN,EAASnL,YAAYlS,OAAO0c,cAAgB,EAAAoB,YAAYC,QACjF,MAAM,IAAInpD,MAAM,uCAGlBM,KAAKs0C,QAAQ8T,eAAe3kD,IAAI0kD,EAAUP,EAAQ9c,IAc5C,YAAAid,uBAAR,SAA+BY,EAAgBnB,GAC7C,IAAItwC,EAAKlX,KAAK8oD,eAAeH,EAAOI,OAAQvB,IAAgB,EAAAoB,YAAYC,QAExE,IAAK3xC,IAEHA,EAAKlX,KAAK8oD,eAAeH,EAAOI,OAAQvB,IAAgB,EAAAoB,YAAYC,SAElE,OAAIrB,IAAgB,EAAAoB,YAAYC,OACvB7oD,KAAKs5C,KAAKpiC,GAEVlX,KAAKgpD,OAAO9xC,GAKzB,IAAKA,EAAI,CACP,IAAMoD,EAAS,EAAAguC,mCAAmCtoD,KAAKs0C,QAAQmT,eAAgBkB,EAAO9mD,KAAM2lD,GAE5F,GAAIA,IAAgB,EAAAoB,YAAYK,oBAAqB,CACnD,IAEMnb,EAAQ6a,EAAO9mD,KACrB,GAAqB,IAAjBisC,EAAMluC,OAAc,CAQtB,IAAMspD,EAAsB,CAACpb,EAAM,GAAIp3B,KAAKC,KAAMm3B,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAV/D,IAWTqb,EACF,EAAAb,mCAAmCtoD,KAAKs0C,QAAQmT,eAAgByB,EAAqB1B,GACrFtjD,EAASykD,EAAOS,WACpB,GAAItb,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAdjB,GAcmC,EAAG,CACnD,IAAMub,EAAiBvb,EAAM,GACvBwb,EAAaxb,EAAM,GAAKA,EAAM,GAAKA,EAAM,GACzCyb,EAjBO,EAiBM7yC,KAAKC,KAlBd,EAkBmB2yC,EAjBhB,GAmBbplD,EAAS,IAAIrD,aADGwoD,EAAiBE,GAEjC,IAAK,IAAI1iD,EAAI,EAAGA,EAAIwiD,IAAkBxiD,EAAG,CACvC,IAAM2iD,EAAY3iD,EAAIyiD,EAChBG,EAAY5iD,EAAI0iD,EAAa1iD,EAvB3B,EAuBuCyiD,EAC/CplD,EAAO5C,IAAIqnD,EAAOS,WAAW19C,SAAS89C,EAAWA,EAAYF,GAAaG,IAG9E,OAAOzpD,KAAKwoD,kBAAkBW,EAAgBR,EAAOhnD,KAAMuC,EAAQykD,EAAQ,IAI/E,GAAInB,IAAgB,EAAAoB,YAAYC,OAAQ,CACtC,IAAMa,EACF,EAAAC,6BAA6B3pD,KAAKs0C,QAAQmT,eAAgBkB,EAAO9mD,KAAM,EAAG,GAAI,CAAC+nD,WAAW,IACxFC,EAAsB7pD,KAAKwoD,kBAC7BkB,EAAuBf,EAAOhnD,KAAMgnD,EAAOS,WAAYT,EAAQ,GACnEzxC,EAAKlX,KAAKs5C,KAAKuQ,QAEf3yC,EAAKlX,KAAKwoD,kBAAkBluC,EAAQquC,EAAOhnD,KAAMgnD,EAAOS,WAAYT,EAAQ,GAGhF,OAAOzxC,GAYT,YAAA4yC,sCAAA,SACIxvC,EAAuBmyB,EAA2B7qC,EAAyB+mD,GAC7E,OAAO3oD,KAAKwoD,kBAAkBluC,EAAQmyB,EAAU7qC,EAAM+mD,EAAQ,IAGxD,YAAAH,kBAAR,SACIluC,EAAuBmyB,EAA2B7qC,EAA0B+mD,EAC5EoB,GACF,EAAAtQ,OAAOE,QAAQ,mBAAoB,iCAAiCsG,KAAKC,UAAU5lC,GAAO,KAC1F,IAAM0tC,EAAUhoD,KAAKs0C,QAAQ0V,eAAeC,wBAAwBxd,EAAUnyB,EAAQ1Y,EAAMmoD,GAC5F,OAAO/pD,KAAKkqD,6BAA6B5vC,EAAQmyB,EAAUub,EAASW,IAGtE,YAAAwB,gBAAA,SAAgBhkC,EAAeikC,GAC7B,IAAMC,EAAUrqD,KAAK+nD,uBAAuB5hC,EAAO,EAAAyiC,YAAY0B,UACzDC,EAAkC,CACtCC,SAAUH,EAAQG,SAClBzxC,OAAQsxC,EAAQtxC,OAChBD,MAAOuxC,EAAQvxC,MAEfg1B,MAA+B,IAAxBsc,EAAaxqD,OAAewqD,EAAe,CAAC,GACnDjwC,QAAS,EAAAskC,UAAUgM,eAAeL,GAClCrP,cAAeqP,GAGjB,OADuBpqD,KAAKkqD,6BAA6BK,EAAkBpkC,EAAMxkB,KAAM0oD,EAAQrC,SACzEW,QAGxB,YAAA+B,cAAA,SAAcvkC,EAAeikC,GAC3B,IAAMC,EAAUrqD,KAAK+nD,uBAAuB5hC,EAAO,EAAAyiC,YAAYC,QAG/D,GAAI,EAAA8B,eAAexkC,EAAMtkB,KAAMuoD,GAAe,CAC5C,IAAMG,EAAkC,CACtCC,SAAUH,EAAQG,SAClBzxC,OAAQsxC,EAAQtxC,OAChBD,MAAOuxC,EAAQvxC,MAEfg1B,MAA+B,IAAxBsc,EAAaxqD,OAAewqD,EAAe,CAAC,GACnDjwC,QAAS,EAAAskC,UAAUgM,eAAeL,GAClCrP,cAAeqP,EACfzP,UAAU,GAGZ,OADuB36C,KAAKkqD,6BAA6BK,EAAkBpkC,EAAMxkB,KAAM0oD,EAAQrC,SACzEW,OAGxB,IAAMiC,EAAqB,EAAAC,cAAc1kC,EAAMtkB,MACzCipD,EAAsB,EAAAD,cAAcT,GAEpCW,EAAsB/qD,KAAK0qD,cAAcvkC,EAAOykC,GAChDI,EAAuBhrD,KAAKyD,IAC9B,EAAAwnD,uCAAuCjrD,KAAM+qD,EAAqBD,GAAsB,CAACC,IAE7F,OADqB/qD,KAAK0qD,cAAcM,EAAsBZ,IAIxD,YAAAF,6BAAR,SACI5vC,EAAuBmyB,EAA2Bub,EAAuBW,EAAiBuC,GAD9F,WAEQC,EAAW,OACZ7wC,GAAM,CACTquC,OAAQA,GACJ,IAAI,EAAApnD,OACI+Y,EAAOygC,cAAetO,GAAU,SAAC2e,GAAmB,SAAKC,YAAYF,MACrE,SAAOC,GAAc,gEAAK,SAAAprD,KAAKsrD,iBAAiBH,iBAAc1rD,EAAWyrD,GACrFlD,QAAO,IAGT,OADAhoD,KAAKurD,eAAeJ,EAAYxC,OAAOI,OAAQoC,EAAa7wC,EAAOqgC,UAC5DwQ,GAGD,YAAArC,eAAR,SAAuBoC,EAAqBvQ,GAC1C,YAD0C,IAAAA,OAAA,GACnC36C,KAAKs0C,QAAQkX,cAAcN,GAC9BlrD,KAAKs0C,QAAQwU,eAAeoC,EAAUvQ,GACtCA,EAAW36C,KAAKqnD,uBAAuBplD,IAAIipD,GAAYlrD,KAAKsnD,yBAAyBrlD,IAAIipD,IAE/F,YAAAK,eAAA,SAAeL,EAAqBh0C,EAAiByjC,QAAA,IAAAA,OAAA,GAC/C36C,KAAKs0C,QAAQkX,cAAcN,GAC7BlrD,KAAKs0C,QAAQiX,eAAeL,EAAUh0C,EAAIyjC,IAEzCA,EAAW36C,KAAKqnD,uBAAyBrnD,KAAKsnD,0BAA0BhmD,IAAI4pD,EAAUh0C,IAG3F,YAAAu0C,sBAAA,SAAsB9C,EAAgBhO,GACpC,YADoC,IAAAA,OAAA,KAC3B36C,KAAK8oD,eAAeH,EAAOI,OAAQpO,IAG9C,YAAA5B,QAAA,sBACE/4C,KAAKs0C,QAAQ0V,eAAe0B,sBAC5B1rD,KAAKqnD,uBAAuB1rC,SAAQ,SAAAzE,GAAM,SAAKo9B,QAAQ0V,eAAe2B,eAAez0C,MACrFlX,KAAKqnD,uBAAyB,IAAIzmD,IAClCZ,KAAKsnD,yBAAyB3rC,SAAQ,SAAAzE,GAAM,SAAKo9B,QAAQ0V,eAAe2B,eAAez0C,MACvFlX,KAAKsnD,yBAA2B,IAAI1mD,KAGtC,YAAAyqD,YAAA,SAAYF,GACV,OAAIA,EAAYxQ,SACP36C,KAAKqrD,YAAYrrD,KAAKgpD,OAAOmC,IAEjCnrD,KAAKs0C,QAAQn1C,QAAQo6C,UAAUqS,2BAG7B5rD,KAAKs0C,QAAQ0V,eAAeqB,YAAYF,EAAaA,EAAYxC,OAAOhnD,KAAMwpD,EAAYX,UAFxFxqD,KAAKs0C,QAAQ0V,eAAe6B,wBAAwB,EAAAC,cAAc9rD,KAAMmrD,KAK7E,YAAAG,iBAAN,SAAuBH,G,mEACrB,OAAIA,EAAYxQ,SACP,CAAP,EAAO36C,KAAKsrD,iBAAiBtrD,KAAKgpD,OAAOmC,KAEtCnrD,KAAKs0C,QAAQn1C,QAAQo6C,UAAUqS,2BAG7B,CAAP,EAAO5rD,KAAKs0C,QAAQ0V,eAAesB,iBAAiBH,EAAaA,EAAYxC,OAAOhnD,KAAMwpD,EAAYX,WAF7F,CAAP,EAAOxqD,KAAKs0C,QAAQ0V,eAAe6B,wBAAwB,EAAAC,cAAc9rD,KAAMmrD,YAKnF,YAAA7R,KAAA,SAAKnzB,GAEH,OAD0BnmB,KAAK0nD,eAAe,EAAAqE,4BAA4B/rD,KAAMmmB,EAAMwiC,QAAS,CAACxiC,EAAMwiC,UAIxG,YAAAK,OAAA,SAAO7iC,GAEL,OAD0BnmB,KAAK0nD,eAAe,EAAAsE,8BAA8BhsD,KAAMmmB,EAAMwiC,QAAS,CAACxiC,EAAMwiC,UAG5G,EAtRA,GAAa,EAAAsD,yB,gpBCzBb,cACA,aACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aACA,UACA,UAEa,EAAAC,uBAAuD,CAClE,CAAC,MAAO,GAAI,KAAMC,EAAS1tC,KAC3B,CAAC,OAAQ,GAAI,KAAM0tC,EAASC,MAC5B,CAAC,MAAO,GAAI,KAAMC,EAAUjoC,KAC5B,CAAC,MAAO,GAAI,KAAMioC,EAAU9lB,KAC5B,CAAC,OAAQ,GAAI,KAAM4lB,EAASG,MAC5B,CAAC,OAAQ,GAAI,KAAMH,EAASI,MAE5B,CAAC,cAAe,GAAI,OAAQ,EAAAC,YAAa,EAAAC,4BACzC,CAAC,qBAAsB,GAAI,KAAM,EAAA5nC,mBAAoB,EAAA6nC,mCACrD,CAAC,OAAQ,GAAI,KAAMP,EAASx1C,MAC5B,CAAC,OAAQ,GAAI,OAAQw1C,EAASQ,KAAMR,EAASS,qBAC7C,CAAC,SAAU,GAAI,KAAM,EAAAvnC,OAAQ,EAAAwnC,uBAC7B,CAAC,OAAQ,GAAI,KAAM,EAAAC,KAAM,EAAAC,qBACzB,CAAC,MAAO,GAAI,KAAMZ,EAASa,KAC3B,CAAC,MAAO,GAAI,KAAMX,EAAU/pB,KAC5B,CAAC,UAAW,GAAI,KAAM6pB,EAASc,UAC/B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,6BACzC,CAAC,QAAS,GAAI,KAAMd,EAAUe,OAC9B,CAAC,MAAO,GAAI,KAAMjB,EAASkB,IAAKlB,EAASmB,oBACzC,CAAC,MAAO,GAAI,KAAMnB,EAASoB,KAC3B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,QAAS,GAAI,KAAMtB,EAAS54B,OAC7B,CAAC,SAAU,GAAI,KAAM,EAAAm6B,OAAQ,EAAAC,uBAC7B,CAAC,OAAQ,GAAI,OAAQ,EAAA1nC,KAAM,EAAA2nC,uBAC3B,CAAC,OAAQ,GAAI,MAAO,EAAA3nC,KAAM,EAAA4nC,wBAC1B,CAAC,oBAAqB,GAAI,KAAM,EAAAC,kBAAmB,EAAAC,kCACnD,CAAC,gBAAiB,GAAI,KAAM,EAAAC,eAC5B,CAAC,UAAW,GAAI,KAAM3B,EAAU4B,SAChC,CAAC,WAAY,GAAI,KAAM9B,EAASc,UAChC,CAAC,cAAe,GAAI,KAAM,EAAAiB,YAAa,EAAAC,4BACvC,CAAC,wBAAyB,GAAI,KAAM,EAAAC,sBAAuB,EAAAC,sCAC3D,CAAC,YAAa,GAAI,KAAMlC,EAAS9lC,UAAW8lC,EAASmC,0BACrD,CAAC,OAAQ,GAAI,KAAMjC,EAAUkC,MAC7B,CAAC,MAAO,GAAI,KAAMpC,EAAS5hD,KAC3B,CAAC,SAAU,GAAI,KAAM,EAAAikD,OAAQ,EAAAC,uBAE7B,CAAC,UAAW,GAAI,MAAO,EAAAC,QAAS,EAAAC,wBAChC,CAAC,MAAO,GAAI,KAAMtC,EAAU7qB,KAC5B,CAAC,MAAO,GAAI,KAAM2qB,EAAStrB,KAC3B,CAAC,MAAO,GAAI,KAAMsrB,EAAShoB,KAC3B,CAAC,KAAM,GAAI,KAAMkoB,EAAU7lB,IAC3B,CAAC,MAAO,GAAI,OAAQ,EAAAvN,IAAK,EAAA21B,oBACzB,CAAC,MAAO,GAAI,KAAMvC,EAAU54B,KAC5B,CAAC,QAAS,GAAI,KAAM44B,EAAUwC,OAC9B,CAAC,eAAgB,GAAI,KAAM,EAAAC,aAAc,EAAAC,uBACzC,CAAC,YAAa,GAAI,KAAM,EAAAC,UAAW,EAAAD,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAE,WAAY,EAAAF,uBACrC,CAAC,YAAa,GAAI,KAAM,EAAAG,UAAW,EAAAH,uBACnC,CAAC,aAAc,GAAI,KAAM,EAAAI,WAAY,EAAAJ,uBACrC,CAAC,YAAa,GAAI,KAAM,EAAAK,UAAW,EAAAL,uBACnC,CAAC,kBAAmB,GAAI,KAAM,EAAAM,mBAAoB,EAAAN,uBAClD,CAAC,OAAQ,GAAI,KAAM5C,EAAStlC,MAC5B,CAAC,UAAW,GAAI,KAAM,EAAAQ,SACtB,CAAC,SAAU,GAAI,KAAM,EAAAioC,OAAQ,EAAAC,0BAC7B,CAAC,SAAU,GAAI,MAAO,EAAAD,OAAQ,EAAAE,0BAC9B,CAAC,QAAS,GAAI,KAAM,EAAA1hB,OACpB,CAAC,UAAW,GAAI,KAAMqe,EAASsD,SAC/B,CAAC,MAAO,GAAI,KAAMtD,EAASuD,KAC3B,CAAC,QAAS,GAAI,MAAO,EAAAC,UACrB,CAAC,QAAS,GAAI,MAAO,EAAAlnD,MAAO,EAAAmnD,sBAC5B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAK/B,CAAC,QAAS,GAAI,KAAM,EAAAt2C,MAAO,EAAAu2C,sBAC3B,CAAC,OAAQ,GAAI,KAAM5D,EAAS6D,MAC5B,CAAC,UAAW,GAAI,KAAM,EAAAC,QAAS,EAAAC,wBAC/B,CAAC,MAAO,GAAI,KAAM7D,EAAU7pB,KAC5B,CAAC,MAAO,GAAI,KAAM,EAAA2tB,KAClB,CAAC,MAAO,GAAI,KAAMhE,EAASiE,KAC3B,CAAC,OAAQ,GAAI,KAAMjE,EAASkE,MAC5B,CAAC,OAAQ,GAAI,KAAM,EAAAC,MACnB,CAAC,YAAa,GAAI,KAAM,EAAA9oC,UAAW,EAAA+oC,0BACnC,CAAC,WAAY,GAAI,MAAO,EAAAC,SAAU,EAAAC,2BAClC,CAAC,WAAY,GAAI,IAAK,EAAAD,SAAU,EAAAE,2BAChC,CAAC,YAAa,GAAI,KAAM,EAAAC,UAAW,EAAAC,0BACnC,CAAC,MAAO,GAAI,KAAMvE,EAAU5lB,O,wqBChH9B,aAIA,UAEA,UAQMoqB,EAAoC,CACxC3xD,KAAM,qBACNqE,WAAY,CAAC,IAAK,QAAS,IAAK,OAAQ,YACxCskD,WACI,CAAC,EAAAe,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,WAG9F,EAAAzlC,mBACT,SAACisC,EAAyClJ,EAAkBvmC,GAS1D,OARA0vC,EAAenJ,GAQR,CAPQkJ,EAAiBrtD,IAAI,EAAD,KAE1BotD,GAAiC,CACpC5I,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAgvD,EAAoCH,EAAkBlJ,EAAQvmC,MAE3EumC,KAIG,EAAA8E,kCACT,SAAC9kD,GACC,IAAM+c,EAAU/c,EAAKyZ,WAAWk1B,SAAS,UAAW,MAC9C2a,EAAWtpD,EAAKyZ,WAAWk1B,SAAS,WAAY,IAChD4a,EAAUvpD,EAAKyZ,WAAWm1B,OAAO,UAAW,GAClD,OAAO,EAAAb,4BAA4B,CAAChxB,QAAO,EAAEusC,SAAQ,EAAEC,QAAO,KAGpE,IAAMF,EACF,SAACH,EAAyClJ,EAAkBvmC,GAEtD,IAAMy7B,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1Do7B,EAAOkL,EAAO,GAAG/lD,KAAKjC,OACtB,IACFkxD,EAAiBvJ,+BAA+BK,EAAO,GAAG/lD,KAAM,EAAA+mD,YAAY0B,UAAS,GACnF5F,EAAe,yBACThI,EAAI,gEAHC,KAIgC,KAJnB,KAImC,yCACvCI,EAAKC,UAAS,yDACfD,EAAKC,UAAS,4DACVD,EAAKC,UAAS,yDACrBD,EAAKC,UAAS,wFAEsB17B,EAAWsD,QAAO,iBAE5E,OAAO,EAAP,KACKksC,GAAiC,CACpC/lB,OAAQ,CAACjpC,KAAM+lD,EAAO,GAAG/lD,KAAMF,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC9E5F,aAAY,KAIlBqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,yCAGlB,IAAMwM,EAAI07C,EAAO,GACXpjC,EAAQojC,EAAO,GACfvhD,EAAIuhD,EAAO,GACXwJ,EAAOxJ,EAAO,GACdyJ,EAAOzJ,EAAO,GAIpB,GAAI17C,EAAErK,KAAKjC,OAAS,GAA2B,IAAtB4kB,EAAM3iB,KAAKjC,QAAkC,IAAlByG,EAAExE,KAAKjC,QAAqC,IAArBwxD,EAAKvvD,KAAKjC,QAC5D,IAArByxD,EAAKxvD,KAAKjC,OACZ,MAAM,IAAIF,MAAM,wBAElB,GAAI8kB,EAAM3iB,KAAK,KAAOqK,EAAErK,KAAK,IAAMwE,EAAExE,KAAK,KAAOqK,EAAErK,KAAK,IAAMuvD,EAAKvvD,KAAK,KAAOqK,EAAErK,KAAK,IAClFwvD,EAAKxvD,KAAK,KAAOqK,EAAErK,KAAK,GAC1B,MAAM,IAAInC,MAAM,wBAElB,GAAgB,YAAXwM,EAAEvK,MAAiC,YAAXuK,EAAEvK,MAAuC,YAAf6iB,EAAM7iB,MAAqC,YAAf6iB,EAAM7iB,MACzE,YAAX0E,EAAE1E,MAAiC,YAAX0E,EAAE1E,MAAsC,YAAdyvD,EAAKzvD,MAAoC,YAAdyvD,EAAKzvD,MACpE,YAAd0vD,EAAK1vD,MAAoC,YAAd0vD,EAAK1vD,KACnC,MAAM,IAAIjC,MAAM,iC,0SCzFpB,cACA,UACA,UAEA,UAEA,SAAgB4xD,IAUd,MAAO,CAAC/P,KARK,4HAQCriD,KATD,OASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBC,IAUd,MAAO,CAACjQ,KARK,4HAQCriD,KATD,OASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBE,IAUd,MAAO,CAAClQ,KARK,4HAQCriD,KATD,OASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBG,IAUd,MAAO,CAACnQ,KARK,4HAQCriD,KATD,OASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBI,IAUd,MAAO,CAACpQ,KARK,oJAQCriD,KATD,SASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBK,IAad,MAAO,CAACrQ,KAXK,oNAWCriD,KAZD,WAYOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBM,IAad,MAAO,CAACtQ,KAXK,4OAWCriD,KAZD,QAYOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBO,IAed,MAAO,CAACvQ,KAbK,mTAaCriD,KAdD,OAcOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBQ,IAed,MAAO,CAACxQ,KAbK,iTAaCriD,KAdD,MAcOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBS,IAed,MAAO,CAACzQ,KAbK,mTAaCriD,KAdD,OAcOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBU,IACd,OAoBF,SAA2B9K,GACzB,IAAMjoD,EAAUioD,OAShB,MAAO,CAAC5F,KARK,oIAQCriD,KAAI,EAAEyC,KAAM,EAAAkgD,aAAa0P,YA9BhCW,GAET,SAAgBC,IAed,MAAO,CAAC5Q,KAbK,+SAaCriD,KAdD,SAcOyC,KAAM,EAAAkgD,aAAa0P,YA/JzC,YAYA,YAYA,YAYA,YAYA,cAYA,gBAeA,aAeA,YAiBA,WAiBA,YAiBA,YAGA,cA+BA,IAAMa,EACF,SAACxvD,EAAgCglD,EAAkByK,EAClDC,EAAoDtB,QAApD,IAAAsB,MAAoC1K,EAAO,GAAGjmD,MAC7C,IAAM6lD,EAAc5kD,EAAQ0xC,QAAQgF,KAAO,EAAAsP,YAAYC,OAAS,EAAAD,YAAY0B,SAC5E,MAAO,CACLprD,KAAMmzD,EAASnzD,KACfqE,WAAY,CAAC,IAAK,KAClBskD,WAAY,CAACL,EAAaA,GAC1BS,UAAW+I,EACX/uD,IAAK,WAAM,OAAAswD,EAAwB3vD,EAASglD,EAAQyK,EAAUC,MAIhEC,EACF,SAAC3vD,EAAgCglD,EAAkByK,EAClDC,QAAA,IAAAA,MAAoC1K,EAAO,GAAGjmD,MAC7C,IAAM6lD,EAAc5kD,EAAQ0xC,QAAQgF,KAAO,EAAAsP,YAAYC,OAAS,EAAAD,YAAY0B,SACtEkI,GAAe,EAAA/T,UAAUgU,SAAS7K,EAAO,GAAG/lD,KAAM+lD,EAAO,GAAG/lD,MAC9D6wD,EAAc9K,EAAO,GAAG/lD,KAEtB8wD,EAAmB/vD,EAAQ0xC,QAAQgF,KAEzC,GAAIkZ,EAAa,CACf,IAAMI,EAAkB,EAAA3U,cAAc4U,UAAUjL,EAAO,GAAG/lD,KAAM+lD,EAAO,GAAG/lD,MAAM,GAChF,IAAK+wD,EACH,MAAM,IAAIlzD,MAAM,gDAGlB,IAAMwmD,GADNwM,EAAcE,GACiBhzD,OACzBkzD,EAAkC,IAA1BlL,EAAO,GAAG/lD,KAAKjC,OAAegoD,EAAO,GAAG/lD,KAAKjC,OAAS,EAC9DmzD,EAAkC,IAA1BnL,EAAO,GAAG/lD,KAAKjC,OAAegoD,EAAO,GAAG/lD,KAAKjC,OAAS,EAC9DozD,EAAmC,IAA1BpL,EAAO,GAAG/lD,KAAKjC,OAAe,qCAAuC,mBAC9EqzD,EAAmC,IAA1BrL,EAAO,GAAG/lD,KAAKjC,OAAe,qCAAuC,mBAE9E,EAAO,EAAA47C,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SACjD,EAAeqxC,EAAmB,WACxCN,EAAS9Q,KAAI,0HAIG8Q,EAASnzD,KAAI,oBAC3B,EAAK4rC,OAAM,sBAE2B,WACxCunB,EAAS9Q,KAAI,qCACa2E,EAAU,8BACrB4M,EAAK,4BACLC,EAAK,eAClBC,EAAM,aACNC,EAAM,oBACCZ,EAASnzD,KAAI,yCAGtB,MAAO,CACLA,KAAMmzD,EAASnzD,KACfqE,WAAY,CAAC,IAAK,KAClBskD,WAAY,CAACL,EAAaA,GAC1B1c,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAM2wD,EAAkB9K,YAAW,GAC/D9C,aAAY,EACZC,QAASgO,GAGb,IAAM7V,EAAO,EAAAtB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SACjDojC,EAAe,SACrB2N,EAAS9Q,KAAI,wCAEDzE,EAAKC,UAAS,oCACdD,EAAKC,UAAS,wCACVsV,EAASnzD,KAAI,oBAC3B49C,EAAKhS,OAAM,0BAIb,MAAO,CACL5rC,KAAMmzD,EAASnzD,KACfqE,WAAY,CAAC,IAAK,KAClBskD,WAAY,CAACL,EAAaA,GAC1B1c,OAAQ,CAACjpC,KAAM+lD,EAAO,GAAG/lD,KAAMF,KAAM2wD,EAAkB9K,YAAW,GAClE9C,aAAY,EACZC,SAAS,IAIJ,EAAAvgC,IAAM,SAACxhB,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQ0J,KAAY1J,KAE3E,EAAArhB,IAAM,SAAC3jC,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQkK,IAAW,QAASlK,KAEnF,EAAAtlB,IAAM,SAAC1/B,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQ4J,KAAY5J,KAE3E,EAAAwF,MAAQ,SAACxqD,EAAgCglD,GACtC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQ+J,IAAa,QAAS/J,KAErF,EAAAqG,QAAU,SAACrrD,EAAgCglD,GACxC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQgK,IAAe,QAAShK,KAEvF,EAAA2G,KAAO,SAAC3rD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQiK,IAAY,QAASjK,KAEpF,EAAApmB,IAAM,SAAC5+B,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQ6J,KAAY7J,KAE3E,EAAAphB,GAAK,SAAC5jC,EAAgCglD,GACnC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQmK,IAAU,QAASnK,KAElF,EAAAn0B,IAAM,SAAC7wB,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQqK,KAAYrK,KAE3E,EAAAiH,MAAQ,SAACjsD,EAAgCglD,GACtC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQuK,KAAcvK,KAE7E,EAAAplB,IAAM,SAAC5/B,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQ8J,KAAY9J,KAE3E,EAAAnhB,IAAM,SAAC7jC,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAI2uD,EAA8BxvD,EAASglD,EAAQoK,IAAW,QAASpK,M,wWC1ShG,cAEA,UACA,UAGA,UAoHa,EAAAsL,oCACT,SAACtwD,EAAgCglD,EAAkBvmC,GACjD,IApHqC8xC,EAAoBlL,EAoHnDmL,GApH+BD,EAoHcvL,EAAOhoD,OApHDqoD,EAoHS5mC,EAAW2vC,SApHE,CACnF9xD,KAAM,kBACNqE,WAAYzB,MAAMtB,KAAK,CAACZ,OAAQuzD,IAAa,SAAC7vD,EAAG3D,GAAM,UAAIA,KAC3DkoD,WAAY/lD,MAAMqxD,GAAYt8C,KAAK,EAAA+xC,YAAYC,QAC/CZ,UAAS,IAiHL,OAAO,EAAP,KAAWmL,GAAQ,CAAEnxD,IAAK,WAAM,OA7GlC,SAACW,EAAgCwwD,EAA2BxL,EAAkBljC,GAC5E,IAAM2uC,EAAazL,EAAO,GAAG/lD,KAAK4G,QAClC,GAAIic,GAAQ2uC,EAAWzzD,QAAU8kB,GAAS,EAAI2uC,EAAWzzD,OACvD,MAAM,IAAIF,MAAM,gEAEdglB,EAAO,IACTA,EAAO2uC,EAAWzzD,OAAS8kB,GAK7B,IADA,IAAMguC,EAAcW,EAAW5qD,MAAM,GAC5B9I,EAAI,EAAGA,EAAIioD,EAAOhoD,OAAQD,IAEjC,IADA,IAAM2zD,EAAa1L,EAAOjoD,GAAGkC,KAAK4G,QACzB8qD,EAAY,EAAGA,EAAYF,EAAWzzD,OAAQ2zD,IAErD,GAAIA,IAAc7uC,EAChBguC,EAAYhuC,IAAS4uC,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAI7zD,MAAM,oCAKtB,IAAMg9C,EAAOgW,EAAY9yD,OACnB68C,EAAS,EAAA+W,YAAY,SAAU9W,GAC/B+W,EAAQ,EAAAtV,kBAAkBzB,GAC1BgX,EAAgB,EAAAC,oBAEhBC,EAAShM,EAAOrjD,KAAI,SAAA5E,GAAK,OAAAA,EAAEkC,QAC3B2oD,EAAW,EAAAlM,cAAc5B,GACzBmX,EAAoB,IAAI/xD,MAAM8xD,EAAOh0D,OAAS,GAGpD,IADAi0D,EAAQ,GAAKD,EAAO,GAAGlvC,GACd/kB,EAAI,EAAGA,EAAIk0D,EAAQj0D,OAAQD,IAClCk0D,EAAQl0D,GAAKk0D,EAAQl0D,EAAI,GAAKi0D,EAAOj0D,GAAG+kB,GAG1C,IAAMovC,EAAUtJ,EAAS9lC,GACnBqvC,EAAevJ,EAAS/hD,OAAO,GAC/BurD,EAAcxJ,EAAStlD,OAEzB+uD,EAAkB,OAAOH,EAAO,MAAMD,EAAQ,GAAE,sDAEtCG,EAAW,WAAWD,EAAa7uD,OAAM,iBAEvD,IAASvF,EAAI,EAAGA,EAAIk0D,EAAQj0D,OAAQD,IAAK,CACvC,IAAM,EAAQk0D,EAAQl0D,EAAI,GAC1Bs0D,GAAmB,qBACTH,EAAO,MAAMD,EAAQl0D,GAAE,QAAQm0D,EAAO,OAAOD,EAAQl0D,EAAI,GAAE,8DAEvDA,EAAC,IAAIu0D,EAA0B1J,EAAUsJ,EAAS,GAAM,4BACvDI,EAA0BH,EAAcD,EAAS,GAAM,qBAGxE,IAAMK,EAAYN,EAAQj0D,OACpB+N,EAAQkmD,EAAQA,EAAQj0D,OAAS,GACvCq0D,GAAmB,uDAELE,EAAS,IAAID,EAA0B1J,EAAUsJ,EAASnmD,GAAM,0BAC/DumD,EAA0BH,EAAcD,EAASnmD,GAAM,MAEtE,IAAMmvC,EAAO,EAAAtB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SAEjDojC,EAAe,eACfgP,EAAa,8BACElJ,EAASjmD,KAAI,SAAA4F,GAAK,aAASA,KAAE,oBAC1C8pD,EAAe,yDAIfR,EAAK,kEACgBjJ,EAAS9N,EAAO,GAAE,yBAChC8N,EAAS9N,EAAO,GAAE,aAAa8N,EAAS9N,EAAO,GAAE,yBACjD8N,EAAS9N,EAAO,GAAE,0DAEGD,EAAM,kCAElCA,EAAOC,EAAO,GAAE,MAAMD,EAAOC,EAAO,GAAE,0BAClCD,EAAOC,EAAO,GAAE,MAAMgW,EAAYhW,EAAO,GAAE,0CACzBD,EAAM,oCAG5BA,EAAOC,EAAO,GAAE,MAAMD,EAAOC,EAAO,GAAE,0BAClCD,EAAOC,EAAO,GAAE,MAAMgW,EAAYhW,EAAO,GAAE,0CACzBD,EAAM,oCAG5BA,EAAOC,EAAO,GAAE,MAAMD,EAAOC,EAAO,GAAE,0BAClCD,EAAOC,EAAO,GAAE,MAAMgW,EAAYhW,EAAO,GAAE,wBAC3CD,EAAOC,EAAO,GAAE,MAAMgW,EAAYhW,EAAO,GAAE,0CACzBD,EAAM,kCAE5BK,EAAKhS,OAAM,oCAInB,OAAO,EAAP,KACKsoB,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAYC,QAC3EnE,aAAY,EACZC,SAAS,IAOqByP,CAA8BxxD,EAASwwD,EAAUxL,EAAQvmC,EAAWqD,UAG1G,IAAMwvC,EAA4B,SAAC1J,EAAoBsJ,EAAiBnmD,GACtE,IAAM0mD,EAAa7J,EAASnqD,QAAQyzD,GAQpC,OAPYtJ,EAASjmD,KAAI,SAACkC,EAAG6tD,GAC3B,OAAIA,IAAQD,EACA5tD,EAAC,MAAMkH,EAEVlH,KAGAvB,S,oqBC1Ib,aAKA,UAEA,UAMa,EAAAmgB,OACT,SAACyrC,EAAyClJ,EAAkBvmC,GAE1D,OADA0vC,EAAenJ,GACXkJ,EAAiBxc,QAAQgF,MAAQsO,EAAO,GAAG/lD,KAAKjC,OAAS,EAGpD,CADHkxD,EAAiBrtD,IAAI,EAAAyvD,oCAAoCpC,EAAkBlJ,EAAQvmC,GAAaumC,IAK7F,CADHkJ,EAAiBrtD,IAAI8wD,EAAsCzD,EAAkBlJ,EAAQvmC,GAAaumC,KAK9G,IAwEM2M,EACF,SAAC3xD,EAAgCglD,EAAkBvmC,GACjD,IA1EuC8xC,EAAoBlL,EA0ErDmL,GA1EiCD,EA0EcvL,EAAOhoD,OA1EDqoD,EA0ES5mC,EAAW2vC,SA1EE,CACrF9xD,KAAM,SACNqE,WAAYzB,MAAMtB,KAAK,CAACZ,OAAQuzD,IAAa,SAAC7vD,EAAG3D,GAAM,UAAIA,KAC3DkoD,WAAY/lD,MAAMqxD,GAAYt8C,KAAK,EAAA+xC,YAAY0B,UAC/CrC,UAAS,IAuEL,OAAO,EAAP,KAAWmL,GAAQ,CAAEnxD,IAAK,WAAM,OAnElC,SAACW,EAAgCwwD,EAA2BxL,EAAkBljC,GAC5E,IAAM2uC,EAAazL,EAAO,GAAG/lD,KAAK4G,QAClC,GAAIic,GAAQ2uC,EAAWzzD,QAAU8kB,GAAS,EAAI2uC,EAAWzzD,OACvD,MAAM,IAAIF,MAAM,gEAEdglB,EAAO,IACTA,EAAO2uC,EAAWzzD,OAAS8kB,GAK7B,IADA,IAAMguC,EAAcW,EAAW5qD,MAAM,GAC5B9I,EAAI,EAAGA,EAAIioD,EAAOhoD,OAAQD,IAEjC,IADA,IAAM2zD,EAAa1L,EAAOjoD,GAAGkC,KAAK4G,QACzB8qD,EAAY,EAAGA,EAAYF,EAAWzzD,OAAQ2zD,IAErD,GAAIA,IAAc7uC,EAChBguC,EAAYhuC,IAAS4uC,EAAWC,QAG7B,GAAIF,EAAWE,KAAeD,EAAWC,GAC5C,MAAM,IAAI7zD,MAAM,oCAKtB,IAAMg9C,EAAOgW,EAAY9yD,OAEnB40D,EAAmB,IAAI1yD,MAAc8lD,EAAOhoD,QAC9C60D,EAAc,EAClB,IAAS90D,EAAI,EAAGA,EAAI60D,EAAiB50D,SAAUD,EAC7C80D,GAAe7M,EAAOjoD,GAAGkC,KAAK6iB,GAC9B8vC,EAAiB70D,GAAK80D,EAGxB,IAAIC,EAGFA,EADE9M,EAAOhoD,OAAS,EACsB+0D,EAA4CH,GAE5CI,EAA4CJ,GAGtF,IAEM9P,EAAe,aAFqBmQ,EAAqCjN,EAAOhoD,OAAQ88C,GAGzD,aAFWoY,EAA2CN,GAGhD,aACvCE,EAAqC,uCACXhY,EAAI,0EAC2Bh4B,EAAI,iEAGjDA,EAAI,eAAeA,EAAI,mKAKvC,OAAO,EAAP,KACK0uC,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,IAOkBqQ,CAAgCnyD,EAASwwD,EAAUxL,EAAQvmC,EAAWqD,UAGtGiwC,EAA8C,SAACH,GAGnD,MAAO,sDAFYA,EAAiBjwD,KAAI,SAAClC,EAAM1C,GAAM,kBAAY0C,EAAI,aAAa1C,EAAC,UAGlEuF,KAAK,IAAG,WAKrB0vD,EAA8C,SAACJ,GACjD,OAAAG,EAA4CH,IAE1CK,EAAuC,SAACG,EAAyBC,GAErE,IADA,IAAMC,EAAsB,CAAC,mEAAmED,EAAU,QACjGt1D,EAAI,EAAGA,EAAIq1D,IAAmBr1D,EAC3B,IAANA,EACFu1D,EAAUp1D,KACN,yBACuBH,EAAC,gBAAgBA,EAAC,gBACpCA,IAAMq1D,EAAkB,EACjCE,EAAUp1D,KACN,qBACmBH,EAAC,gBAExBu1D,EAAUp1D,KACN,8BAC4BH,EAAC,gBAAgBA,EAAC,gBAMtD,OAHAu1D,EAAUp1D,KACN,OAEGo1D,EAAUhwD,KAAK,OAGlB4vD,EAA6C,SAACN,GAElD,IADA,IAAMU,EAAsB,CAAC,sDACpBv1D,EAAI,EAAGA,EAAI60D,EAAiB50D,SAAUD,EACnC,IAANA,EACFu1D,EAAUp1D,KACN,kBACgBH,EAAC,cAAc60D,EAAiB70D,GAAE,OAC7CA,IAAM60D,EAAiB50D,OAAS,EACzCs1D,EAAUp1D,KACN,mBACiB00D,EAAiB70D,GAAE,OAExCu1D,EAAUp1D,KACN,uBACqBH,EAAC,cAAc60D,EAAiB70D,GAAE,OAO/D,OAJAu1D,EAAUp1D,KACN,OAGGo1D,EAAUhwD,KAAK,OAGX,EAAA2nD,sBAAkE,SAACjlD,GAC5E,SAAA+tC,4BAA4B,CAACjxB,KAAM9c,EAAKyZ,WAAWm1B,OAAO,WAE9D,IAAMua,EAAiB,SAACnJ,G,QACtB,IAAKA,GAAUA,EAAOhoD,OAAS,EAC7B,MAAM,IAAIF,MAAM,kBAGlB,IAAMy1D,EAAYvN,EAAO,GAAGjmD,KACtByzD,EAAsBxN,EAAO,GAAG/lD,KAAKjC,OAG3C,GAAkB,WAAdu1D,EACF,MAAM,IAAIz1D,MAAM,sC,IAGlB,IAAoB,QAAAkoD,GAAM,8BAAE,CAAvB,IAAMzhC,EAAK,QAEd,GAAIA,EAAMxkB,OAASwzD,EACjB,MAAM,IAAIz1D,MAAM,oCAIlB,GAAIymB,EAAMtkB,KAAKjC,SAAWw1D,EACxB,MAAM,IAAI11D,MAAM,6C,mdC5LtB,cAEA,UAEA,UAEA,UACA,UAyEa,EAAA21D,2CACT,SAACvE,EAAyClJ,EAA2BvmC,GAE/D,IA1EwCi0C,EAAkBrN,EA0EpDmL,GA1EkCkC,EA0EkB1N,EAAOhoD,OAAS,EA1EhBqoD,EA0EmB5mC,EAAW2vC,SA1ES,CACzG9xD,KAAM,cACNqE,WAAY+xD,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDzN,WAAYyN,EAAU,CAAC,EAAA1M,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACzD,CAAC,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACzDrC,UAAS,IAsED,OAAO,EAAP,KACKmL,GAAQ,CACXnxD,IAAK,WAAM,OApEnB,SAAC6uD,EAAyClJ,EAA2BwL,EACpE/xC,GACC,IACMk0C,EADU3N,EAAOhoD,OAAS,EACF,oCAAsC,GAC9D41D,EAAS5N,EAAO,GAAG/lD,KAAK4G,QACxBgtD,EAAS7N,EAAO,GAAG/lD,KAAK4G,QACxBitD,EAAyBD,EAAO,GAAKp0C,EAAWs0C,MACtD,EAAAlc,OAAOE,QACH,cACA,WAAWt4B,EAAWhH,QAAO,eAAegH,EAAWjH,UAAS,WAAWiH,EAAWs0C,MAAK,iBACvFt0C,EAAWu0C,YAAW,UAAUv0C,EAAWw0C,KAAI,aAAax0C,EAAWlH,SAC/E,IAAMu4C,EACF,EAAAoD,qBAAqBN,EAAQC,EAAQp0C,EAAWjH,UAAWiH,EAAWw0C,KAAMx0C,EAAWlH,SACrF2iC,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D,EAAwC,EAAAy0C,qBAAqB10C,GAA5D20C,EAAkB,qBAAEC,EAAe,kBAEpCvR,EAAe,mCACKrjC,EAAWlH,QAAQ,GAAE,KAAKkH,EAAWlH,QAAQ,GAAE,kCAClDkH,EAAWw0C,KAAK,GAAE,KAAKx0C,EAAWw0C,KAAK,GAAE,SAClEG,EAAkB,mNAMgBN,EAAsB,0EAGhBD,EAAO,GAAE,2DACdA,EAAO,GAAE,yDACRA,EAAO,GAAE,iEACDp0C,EAAWjH,UAAU,GAAE,8CAE/Bo7C,EAAO,GAAE,gFAITC,EAAO,GAAE,gEACDp0C,EAAWjH,UAAU,GAAE,4CAC/Bo7C,EAAO,GAAE,4PAU3CD,EAAW,SACXU,EAAe,SACfnZ,EAAKhS,OAAM,qCAGX,OAAO,EAAP,KACKsoB,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,EACZC,SAAS,IAUMuR,CAAqCpF,EAAkBlJ,EAAQwL,EAAU/xC,Q,iICpFhG,cACA,UACA,SAEa,EAAA80C,sBACT,SAACrF,EAAyClJ,EAA2BvmC,GACnE,IAAM+0C,EAASxO,EAAO,GAAG/lD,KACnBw0D,EAASzO,EAAO,GAAG/lD,KACnB6wD,EACF,EAAAoD,qBAAqBM,EAAQC,EAAQh1C,EAAWjH,UAAWiH,EAAWw0C,KAAMx0C,EAAWlH,SACrFm8C,EAAYxF,EAAiBpG,cAAc9C,EAAO,GAAI,CAACwO,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACrFG,EAAYzF,EAAiBpG,cAAc9C,EAAO,GAAI,CAACyO,EAAO,GAAIA,EAAO,KAEzEG,EAAe5O,EAAOhoD,OAAS,EAAI,CAAC22D,EAAWD,EAAW1O,EAAO,IAAM,CAAC2O,EAAWD,GACnFG,EAAe3F,EAAiBrtD,IAClC,EAAAizD,oCAAoC5F,EAAkB0F,EAAcn1C,GAAam1C,GACrF,OAAO1F,EAAiBpG,cAAc+L,EAAc/D,IAG7C,EAAAiE,aACT,SAAC7F,EAAyClJ,EAA2BvmC,GACnE,IAAM+0C,EAASxO,EAAO,GAAG/lD,KACnBw0D,EAASzO,EAAO,GAAG/lD,KACnB6wD,EACF,EAAAoD,qBAAqBM,EAAQC,EAAQh1C,EAAWjH,UAAWiH,EAAWw0C,KAAMx0C,EAAWlH,SAGrFy8C,EAAe9F,EAAiBrtD,IAClC,EAAAozD,oCAAoC/F,EAAkBlJ,EAAO,GAAIA,EAAO,GAAI8K,EAAarxC,GACzF,CAACumC,EAAO,KAGNkP,EAAiBhG,EAAiBpG,cAAc9C,EAAO,GAAI,CAACyO,EAAO,GAAIA,EAAO,GAAKA,EAAO,GAAKA,EAAO,KAGtGG,EACiB,IAAlB5O,EAAOhoD,OAAgB,CAACk3D,EAAgBF,EAAchP,EAAO,IAAM,CAACkP,EAAgBF,GACnFH,EAAe3F,EAAiBrtD,IAClC,EAAAizD,oCAAoC5F,EAAkB0F,EAAcn1C,GAAam1C,GAIrF,OADuB1F,EAAiBpG,cAAc+L,EAAc/D,K,+wBC3C1E,aAKA,UAGA,UACA,UACA,UACA,UACA,UACA,UAGa,EAAAoD,qBACT,SAACzC,EAA+BuC,EAAgCx7C,EAC/D28C,EAA+B58C,G,MACxB68C,EAAY3D,EAAW,GACvB4D,EAAoB5D,EAAW5qD,MAAM,GACrCyuD,EAAcD,EAAkBr3D,OAChCu3D,EAAcvB,EAAY,GAE1BwB,EADqBxB,EAAYntD,MAAM,GACClE,KAAI,SAACjB,EAAG3D,GAAM,OAAA2D,GAAKA,EAAI,IAAM8W,EAAUza,GAAK,MAEpF03D,EAD2BJ,EAAkB1yD,KAAI,SAACjB,EAAG3D,GAAM,OAAA2D,EAAIyzD,EAAWp3D,GAAKo3D,EAAWp3D,EAAIu3D,MAEvE3yD,KAAI,SAACjB,EAAG3D,GAAM,OAAA+W,KAAK6c,OAAOjwB,EAAI8zD,EAAmBz3D,GAAKwa,EAAQxa,IAAMwa,EAAQxa,OAEzG,OADoB,GAACq3D,EAAWG,IAAa9xC,OAAM,eAAIgyC,MAahD,EAAAvK,KACT,SAACgE,EAAoClJ,EAAkBvmC,GAErD,OADA0vC,EAAenJ,EAAQvmC,GAChBuE,EAAOkrC,EAAkBlJ,EAAQvmC,IAG9C,IAAMuE,EACF,SAACkrC,EAAyClJ,EAAkBvmC,GAC1D,IAAMi2C,EAAqBC,EAA0Bl2C,EAAYumC,GAC3D4P,EAAW1G,EAAiBxc,QAAQgF,KACpCme,EAAoD,IAAtCH,EAAmB1B,YAAY,IAAkD,IAAtC0B,EAAmB1B,YAAY,GAC9F,OAAI0B,EAAmB3B,MAAQ,EAGtB,CAFQ7E,EAAiBrtD,IAC5B,EAAA4xD,2CAA2CvE,EAAkBlJ,EAAQ0P,GAAqB1P,IAErF6P,GAAeD,EACjB,CAACE,EAAwB5G,EAAkBlJ,EAAQ0P,IACjDE,GAAsC,IAA1B5P,EAAO,GAAG/lD,KAAKjC,QAAsC,IAAtBgoD,EAAO,GAAG/lD,KAAK,KAAa41D,EACzE,CAAC,EAAAd,aAAa7F,EAAkBlJ,EAAQ0P,IAExC,CAACK,EAAe7G,EAAkBlJ,EAAQ0P,KAInDI,EACF,SAAC5G,EAAyClJ,EAA2BvmC,GACnE,IAAM+0C,EAASxO,EAAO,GAAG/lD,KACnBw0D,EAASzO,EAAO,GAAG/lD,KACnB6wD,EACF,EAAAoD,qBAAqBM,EAAQC,EAAQh1C,EAAWjH,UAAWiH,EAAWw0C,KAAMx0C,EAAWlH,SACrFm8C,EAAYxF,EAAiB3G,gBAAgBvC,EAAO,GAAI,CAACwO,EAAO,GAAIA,EAAO,GAAKA,EAAO,KACvFG,EAAYzF,EAAiB3G,gBAAgBvC,EAAO,GAAI,CAACyO,EAAO,GAAIA,EAAO,KAE3EG,EAAe5O,EAAOhoD,OAAS,EAAI,CAAC22D,EAAWD,EAAW1O,EAAO,IAAM,CAAC2O,EAAWD,GACnFG,EAAe3F,EAAiBrtD,IAAI,EAAAm0D,8BAA8BpB,EAAcn1C,GAAam1C,GACnG,OAAO1F,EAAiB3G,gBAAgBsM,EAAc/D,IAGtDiF,EACF,SAAC7G,EAAyClJ,EAA2BvmC,GACnE,IAAM+0C,EAASxO,EAAO,GAAG/lD,KACnBw0D,EAASzO,EAAO,GAAG/lD,KACnB6wD,EACF,EAAAoD,qBAAqBM,EAAQC,EAAQh1C,EAAWjH,UAAWiH,EAAWw0C,KAAMx0C,EAAWlH,SACrF09C,EAAU/G,EAAiBrtD,IAC7B,EAAAq0D,8BAA8BhH,EAAkBlJ,EAAO,GAAIA,EAAO,GAAI8K,EAAarxC,GAAa,CAACumC,EAAO,KAEtGmQ,EAAqC,IAAlBnQ,EAAOhoD,OAAe,CAACi4D,EAASjQ,EAAO,GAAIA,EAAO,IAAM,CAACiQ,EAASjQ,EAAO,IAGlG,OAFekJ,EAAiBrtD,IAC5B,EAAAu0D,kCAAkClH,EAAkBlJ,EAAQ8K,EAAarxC,GAAa02C,IAI1FR,EAA4B,SAA2Bl2C,EAAeumC,GAC1E,IAAMgO,EAAcv0C,EAAWu0C,YAAYntD,QAE3C,GAAsC,IAAlC4Y,EAAWu0C,YAAYh2D,OACzB,IAAK,IAAID,EAAI,EAAGA,EAAIioD,EAAO,GAAG/lD,KAAKjC,SAAUD,EAC3Ci2D,EAAY91D,KAAK8nD,EAAO,GAAG/lD,KAAKlC,IAGpC,IAAMk2D,EAAOx0C,EAAWw0C,KAAKptD,QAC7B,EAAAwvD,aAAaC,yBACTtQ,EAAO,GAAG/lD,KAAMwf,EAAWlH,QAASkH,EAAWjH,UAAWw7C,EAAaC,EAAMx0C,EAAWhH,SAG5F,IAAM89C,EAAmB/0D,OAAOoyC,OAAO,GAAIn0B,GAE3C,OADAje,OAAOoyC,OAAO2iB,EAAe,CAACvC,YAAW,EAAEC,KAAI,EAAE7E,SAAU3vC,EAAW2vC,WAC/DmH,GAGI,EAAApL,oBAA8D,SAACnlD,GAC1E,IAAMyZ,EAAazZ,EAAKyZ,WAClB+2C,EAAuB,EAAAC,kCAAkCh3C,GAEzDhH,EAAUgH,EAAWo1B,UAAU,WAAY,UAC3Cr8B,EAAYiH,EAAWu1B,QAAQ,YAAa,CAAC,EAAG,IAChD+e,EAAQt0C,EAAWm1B,OAAO,QAAS,GACnCof,EAAcv0C,EAAWu1B,QAAQ,eAAgB,IACjDif,EAAOx0C,EAAWu1B,QAAQ,OAAQ,CAAC,EAAG,EAAG,EAAG,IAC5Cz8B,EAAUkH,EAAWu1B,QAAQ,UAAW,CAAC,EAAG,IAElD,OAAO,EAAAjB,4BAA4B,EAAD,CAAEt7B,QAAO,EAAED,UAAS,EAAEu7C,MAAK,EAAEC,YAAW,EAAEC,KAAI,EAAE17C,QAAO,GAAKi+C,KAGhG,IAAMrH,EAAiB,SAACnJ,EAAkBvmC,GAGxC,IAAKumC,GAA6B,IAAlBA,EAAOhoD,QAAkC,IAAlBgoD,EAAOhoD,OAC5C,MAAM,IAAIF,MAAM,+BAIlB,GAA8B,IAA1BkoD,EAAO,GAAG/lD,KAAKjC,QAA0C,IAA1BgoD,EAAO,GAAG/lD,KAAKjC,OAChD,MAAM,IAAIF,MAAM,6CAMlB,GAFoBkoD,EAAO,GAAG/lD,KAAK,KACX+lD,EAAO,GAAG/lD,KAAK,GAAKwf,EAAWs0C,MAErD,MAAM,IAAIj2D,MAAM,qDAIlB,GAAsB,IAAlBkoD,EAAOhoD,SAA2C,IAA1BgoD,EAAO,GAAG/lD,KAAKjC,QAAgBgoD,EAAO,GAAG/lD,KAAK,KAAO+lD,EAAO,GAAG/lD,KAAK,IAC9F,MAAM,IAAInC,MAAM,gBAGlB,IAAMw3D,EAActP,EAAO,GAAG/lD,KAAKjC,OAAS,EAE5C,GAAIyhB,EAAWjH,UAAUxa,SAAWs3D,EAClC,MAAM,IAAIx3D,MAAM,uBAAuBw3D,EAAW,KAIpD,GAAI71C,EAAWlH,QAAQva,SAAWs3D,EAChC,MAAM,IAAIx3D,MAAM,qBAAqBw3D,EAAW,KAIlD,GAAI71C,EAAWw0C,KAAKj2D,SAAyB,EAAds3D,EAC7B,MAAM,IAAIx3D,MAAM,kBAAgC,EAAdw3D,EAAe,KAKnD,GAAsC,IAAlC71C,EAAWu0C,YAAYh2D,QAAgByhB,EAAWu0C,YAAYh2D,SAAWgoD,EAAO,GAAG/lD,KAAKjC,OAAS,EACnG,MAAM,IAAIF,MAAM,wBAIlB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,0CAGlB,GAAsB,IAAlBkoD,EAAOhoD,QAAmC,YAAnBgoD,EAAO,GAAGjmD,KACnC,MAAM,IAAIjC,MAAM,6C,wbC7KpB,cAOa,EAAAwtD,aACT,SAAC4D,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GACf,IAAM0Q,EAAYj3C,EAAWi3C,UACvBC,EAAeD,EAAYA,EAC3BE,EAAoC,QAApBn3C,EAAW2F,KAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACjFyxC,EAAwC,QAApBp3C,EAAW2F,KACjC,CACE4gC,EAAO,GAAG/lD,KAAK,GAAIy2D,EAAWA,EAAW1Q,EAAO,GAAG/lD,KAAK,GAAK02D,EAAc3Q,EAAO,GAAG/lD,KAAK,GAC1F+lD,EAAO,GAAG/lD,KAAK,IAEjB,CACE+lD,EAAO,GAAG/lD,KAAK,GAAI+lD,EAAO,GAAG/lD,KAAK,GAAK02D,EAAcD,EAAWA,EAAW1Q,EAAO,GAAG/lD,KAAK,GAC1F+lD,EAAO,GAAG/lD,KAAK,IASf62D,EAAsB5H,EAAiB3G,gBAAgBvC,EAAO,GAAI6Q,GAGlEE,EAA2C,CAACC,KAAMJ,EAAexH,SAAU,GAAGwH,GAC7EK,EAAD,EAAoB,EAAArxC,UAAUspC,EAAkB,CAAC4H,GAAsBC,GAAoB,GAA3E,GAGhBG,EAAqB,CACzBlR,EAAO,GAAG/lD,KAAK,GAAI+lD,EAAO,GAAG/lD,KAAK,GAAK02D,EAAc3Q,EAAO,GAAG/lD,KAAK,GAAKy2D,EACzE1Q,EAAO,GAAG/lD,KAAK,GAAKy2D,GAGtB,MAAO,CADQxH,EAAiB3G,gBAAgB0O,EAAiBC,KAI1D,EAAA3L,4BACT,SAACvlD,GAEC,IAAM0wD,EAAY1wD,EAAKyZ,WAAWm1B,OAAO,aACzC,GAAI8hB,EAAY,EACd,MAAM,IAAI54D,MAAM,qCAAqC44D,EAAS,qBAEhE,IAAMtxC,EAAOpf,EAAKyZ,WAAWo1B,UAAU,OAAQ,OAC/C,GAAa,QAATzvB,GAA2B,QAATA,EACpB,MAAM,IAAItnB,MAAM,sBAAsBsnB,EAAI,qBAE5C,MAAO,CAACA,KAAI,EAAEsxC,UAAS,IAG7B,IAAMvH,EAAiB,SAACnJ,GACtB,GAAsB,IAAlBA,EAAOhoD,OACT,MAAM,IAAIF,MAAM,yCAAyCkoD,EAAOhoD,QAKlE,GAAuB,WAAnBgoD,EAAO,GAAGjmD,MAA+C,IAA1BimD,EAAO,GAAG/lD,KAAKjC,OAChD,MAAM,IAAIL,UAAU,uD,mpBCtExB,cACA,UAEA,UACA,UACA,UA2Da,EAAAy4D,kCACT,SAAClH,EAAyClJ,EAA2B8K,EACpErxC,GACC,IAAM+xC,EA5D4B,SAACkC,EAAkBj0C,GAA6C,OACtGniB,KAAM,iBACNqE,WAAY+xD,EAAU,CAAC,SAAU,IAAK,KAAO,CAAC,SAAU,KACxDzN,WAAYyN,EAAU,CAAC,EAAA1M,YAAY0B,SAAU,EAAA1B,YAAYK,oBAAqB,EAAAL,YAAY0B,UACpE,CAAC,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAYK,qBACzD+H,SAAU3vC,EAAW03C,oBAuDAC,CAAgCpR,EAAOhoD,OAAS,EAAGyhB,GACpE,OAAO,EAAP,KACK+xC,GAAQ,CACXnxD,IAAK,WAAM,OAtDf,SAAC6uD,EAAyCsC,EAA2BxL,EACpE8K,EAAuBrxC,GACtB,IAAM+0C,EAASxO,EAAO,GAAG/lD,KACnBw0D,EAASzO,EAAO,GAAG/lD,KACnBqnD,EAAsB,CAACmN,EAAO,GAAI3/C,KAAKC,KAAMy/C,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAM,IAClF4C,EAAc,EAAAC,oBAAoB9C,EAAQC,EAAQ3D,GAClD,IACF5B,EAAiBvJ,+BAA+B2B,EAAqB,EAAAN,YAAYK,qBAAoB,GADlGkQ,EAAM,KAAEC,EAAO,KAGhBC,EAAgB,EAAA5a,UAAUgM,eAAewO,GACzC,IACFnI,EAAiBvJ,+BAA+B0R,EAAa,EAAArQ,YAAYK,qBAAoB,GAD1FqQ,EAAW,KAAEC,EAAY,KAE1B7c,EAAOgW,EAAY9yD,OAEnB45D,EAAa5R,EAAOhoD,OAAS,EAAK,MAAQ,QAC1C65D,EAAY/iD,KAAKC,KAAKy/C,EAAO,GAAKC,EAAO,GAAKA,EAAO,GAAK,GAC1D,EAAwC,EAAAN,qBAAqB10C,GAA5D20C,EAAkB,qBAAEC,EAAe,kBACpCnZ,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1DojC,EAAe,KACzBsR,EAAkB,+BACQtZ,EAAI,gLAOG2c,EAAc,GAAE,kBAAkBA,EAAc,GAAE,kBAC3EA,EAAc,GAAE,wCACUnQ,EAAoB,GAAE,sBACxCsQ,EAAS,4BACHC,EAAS,kEACsBH,EAAW,KAAKC,EAAY,4DAC5BJ,EAAM,KAAKC,EAAO,wBACtDtc,EAAKC,UAAS,2BAA2BD,EAAKC,UAAS,yEAItEkZ,EAAe,uBAGb,OAAO,EAAP,KACK7C,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,IAUDgV,CAA4B5I,EAAkBsC,EAAUxL,EAAQ8K,EAAarxC,Q,6HCpEhG,cAGa,EAAAmsC,QACT,SAACsD,EAAyClJ,EAAkBljC,GAC1DqsC,EAAenJ,EAAQljC,GAEvB,IAAMi1C,EAAa,EAAAlb,UAAUmb,aAAahS,EAAO,GAAG/lD,KAAM6iB,GAC1D,MAAO,CAACosC,EAAiB3G,gBAAgBvC,EAAO,GAAI+R,KAG7C,EAAAlM,uBAAyD,SAAC7lD,GACnE,OAAAA,EAAKyZ,WAAWm1B,OAAO,OAAQ,IAEnC,IAAMua,EAAiB,SAACnJ,EAAkBljC,GACxC,IAAKkjC,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAGlB,IAAMuG,EAAI2hD,EAAO,GAAG/lD,KAAKjC,OACzB,GAAU,IAANqG,EACF,MAAM,IAAIvG,MAAM,mCAGlB,GAAIglB,GAAQze,GAAKye,EAAOze,EACtB,MAAM,IAAIvG,MAAM,gBAIlB,GAAuB,WAAnBkoD,EAAO,GAAGjmD,KACZ,MAAM,IAAIjC,MAAM,qC,qJC/BpB,cASA,gCAAqC2hB,GACnC,IAAIw4C,EACJ,OAAQx4C,EAAWuD,YACjB,IAAK,OACHi1C,EAAO,EAAAC,WACP,MACF,IAAK,UACHD,EAAO,EAAAE,cACP,MACF,IAAK,OACHF,EAAO,EAAAG,SAAS34C,EAAW44C,QAAU54C,EAAW64C,SAChD,MAEF,QACE,MAAO,CAAClE,mBAAoB,GAAIC,gBAAiB,IAGrD,IAAMkE,EAAiBN,EAAK36D,KAG5B,MAAO,CAAC82D,mBAFmB6D,EAAKtY,KAEJ0U,gBADJ,WAAWkE,EAAc,cAItC,EAAA9B,kCAAoC,SAACh3C,GAChD,IAAMuD,EAAavD,EAAWo1B,UAAU,wBAAyB,IAEjE,GAAmB,SAAf7xB,EAAuB,CACzB,IAAMs1C,EAAU74C,EAAWk1B,SAAS,aAAc,YAC5C0jB,EAAU54C,EAAWk1B,SAAS,cAAe,YACnD,MAAO,CAAC3xB,WAAU,EAAEs1C,QAAO,EAAED,QAAO,EAAElB,mBAAuBn0C,EAAU,IAAIq1C,EAAO,IAAIC,GAExF,MAAO,CAACt1C,WAAU,EAAEm0C,mBAAoBn0C,K,mWC1C1C,aAEA,SAEA,UAEA,UAMa,EAAA8oC,OACT,SAACoD,EAAyClJ,EAAkBvmC,GAG1D,OAFA0vC,EAAenJ,EAAQvmC,EAAWqD,MAE3B,CADQosC,EAAiBrtD,IAAI22D,EAA8BtJ,EAAkBlJ,EAAQvmC,GAAaumC,KAIlG,EAAA+F,sBAAkE,SAAC/lD,GAC5E,SAAA+tC,4BAA4B,CAACjxB,KAAM9c,EAAKyZ,WAAWm1B,OAAO,OAAQ,MAEtE,IAAM6jB,EAAwB,CAC5Bn7D,KAAM,SACNqE,WAAY,CAAC,IAAK,KAClBskD,WAAY,CAAC,EAAAe,YAAY0B,SAAU,EAAA1B,YAAY0B,WAmD3C8P,EACF,SAACx3D,EAAgCglD,EAAkBvmC,GACjD,IAAM+xC,EAAW,EAAH,KAAOiH,GAAqB,CAAEpS,UAAW5mC,EAAW2vC,WAClE,OAAO,EAAP,KAAWoC,GAAQ,CAAEnxD,IAAK,WAAM,OAlDlC,SAACW,EAAgCwwD,EAA2BxL,EAAkBljC,GAC5E,IAAM2uC,EAAazL,EAAO,GAAG/lD,KAAK4G,QAC5B6xD,EAAiB1S,EAAO,GAAG/lD,KAAK4G,QAChCiqD,EAAc,IAAI5wD,MAAMuxD,EAAWzzD,OAAS06D,EAAe16D,OAAS,GAE1E8kB,EAAO,EAAA+5B,UAAU8b,cAAc71C,EAAM2uC,EAAWzzD,QAEhD,IADA,IAAM46D,EAAyB,GACtB76D,EAAI,EAAGA,EAAI+yD,EAAY9yD,OAAQD,IAMlCA,EAAI+kB,GACNguC,EAAY/yD,GAAK0zD,EAAW1zD,GAC5B66D,EAAa16D,KAAK,YAAYH,EAAC,iBAAiBA,EAAC,OAE7CA,EAAI+kB,EAAO41C,EAAe16D,QAC5B8yD,EAAY/yD,GAAK26D,EAAe36D,EAAI+kB,GACpC81C,EAAa16D,KAAK,iBAAgBH,EAAI+kB,GAAI,iBAAiB/kB,EAAC,QAE5D+yD,EAAY/yD,GAAK0zD,EAAW1zD,EAAI26D,EAAe16D,OAAS,GACxD46D,EAAa16D,KAAK,aAAYH,EAAI26D,EAAe16D,OAAS,GAAC,iBAAiBD,EAAC,OAKnF,IAGM+kD,EAAe,wCAHPgO,EAAY9yD,QAAU,GAID,8BAHrByzD,EAAWzzD,OAIH,iCAHP06D,EAAe16D,QAAU,GAIb,6CAEvB46D,EAAat1D,KAAK,cAAa,gEAEtBwf,EAAI,uBAAuB2uC,EAAW3uC,GAAK,iDAGxD,OAAO,EAAP,KACK0uC,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,IAOkB+V,CAAwB73D,EAASwwD,EAAUxL,EAAQvmC,EAAWqD,UAG9FqsC,EAAiB,SAACnJ,EAAkBljC,GACxC,IAAKkjC,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAElB,IAAMu1D,EAAarN,EAAO,GAAG/lD,KAAKjC,OAClC,GAAIq1D,EAAa,EACf,MAAM,IAAIv1D,MAAM,wBAElB,GAAIglB,GAAQuwC,GAAcvwC,EAAOuwC,EAAa,EAC5C,MAAM,IAAIv1D,MAAM,iBAElB,IAA8C,IAA1C,EAAAg7D,aAAar6D,QAAQunD,EAAO,GAAGjmD,MACjC,MAAM,IAAIjC,MAAM,sBAElB,GAAuB,UAAnBkoD,EAAO,GAAGjmD,MAAuC,UAAnBimD,EAAO,GAAGjmD,KAC1C,MAAM,IAAIjC,MAAM,wB,uqBCjGpB,aAIA,UAEA,UAUa,EAAAumB,KACT,SAAC6qC,EAAyClJ,EAAkBvmC,GAG1D,OAFA0vC,EAAenJ,EAAQvmC,GAEhB,CADQyvC,EAAiBrtD,IAAIk3D,EAA4B/S,EAAQvmC,GAAaumC,KAI3F,IAAMgT,EAAsB,SAAChzD,EAAkBizD,GAC7C,IAAMC,EAAiD,IAAxClzD,EAAKyZ,WAAWm1B,OAAO,SAAU,GAC1CukB,EAAiD,IAAxCnzD,EAAKyZ,WAAWm1B,OAAO,SAAU,GAC1C38B,EAAQjS,EAAKyZ,WAAWk1B,SAAS,QAAS,GAC1CzwB,EAAOle,EAAKyZ,WAAWk1B,SAAS,OAAQ,GAC9C,OAAO,EAAAZ,4BAA4B,CAACmlB,OAAM,EAAEC,OAAM,EAAElhD,MAAK,EAAEiM,KAAI,EAAE+0C,YAAW,KAGjE,EAAAjN,sBAAgE,SAAChmD,GAC1E,OAAAgzD,EAAoBhzD,GAAM,IAEjB,EAAAimD,uBAAiE,SAACjmD,GAC3E,OAAAgzD,EAAoBhzD,GAAM,IAE9B,IAAM+yD,EAA8B,SAAC/S,EAAkBvmC,GACrD,IAAM+xC,EAAW,CACfl0D,KAAM,OACNqE,WAA8B,IAAlBqkD,EAAOhoD,OAAe,CAAC,IAAK,IAAK,KAAO,CAAC,IAAK,KAC1DioD,WAA8B,IAAlBD,EAAOhoD,OAAe,CAAC,EAAAgpD,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACzD,CAAC,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACrE3mD,IAAK0d,EAAW2vC,UAGlB,OAAO,EAAP,KAAWoC,GAAQ,CAAEnxD,IAAK,WAAM,OAAA+4D,EAAsB5H,EAAUxL,EAAQvmC,OAGpE25C,EACF,SAAC5H,EAA2BxL,EAAkBvmC,GAC5C,IAAM45C,EAASrT,EAAO,GAAG/lD,KAAK4G,QACxByyD,EAAStT,EAAO,GAAG/lD,KAAK4G,QACxB,IAAS,EAAA0yD,SAASC,qBACpBH,EAAQ55C,EAAWy5C,OAAQI,EAAQ75C,EAAW05C,OAA0B,IAAlBnT,EAAOhoD,OAAegoD,EAAO,GAAG/lD,UAAOpC,GAAU,GACrGizD,EAAc,CAFZ,KAAG,MAGX,IAAKA,EACH,MAAM,IAAIhzD,MAAM,uCAElB,IAAI+5D,EAAYwB,EAAOA,EAAOr7D,OAAS,GACnCy7D,EAAO,GACPh6C,EAAWy5C,SACbrB,EAAYwB,EAAO,IAEjB55C,EAAWy5C,QAAUz5C,EAAW05C,OAClCM,EAAO,8BACEh6C,EAAWy5C,SAAWz5C,EAAW05C,OAC1CM,EAAO,6BACGh6C,EAAWy5C,QAAUz5C,EAAW05C,OAC1CM,EAAO,4BACGh6C,EAAWy5C,QAAWz5C,EAAW05C,SAC3CM,EAAO,2BAET,IAAM3e,EAAOgW,EAAY9yD,OAInB8kD,EAAe,qCACOhI,EAAI,yBACpBA,EAAI,uBACJA,EAAI,kBANmB,IAAlBkL,EAAOhoD,OAAe,SAASgoD,EAAO,GAAG/lD,KAAKjC,OAAM,KAAO,IAO9D,kFANuB,IAAlBgoD,EAAOhoD,OAAe,8BAAgC,IAUzD,+DAGM65D,EAAS,8BACnB/c,EAAO,GAAC,4BACRA,EAAO,GAAC,yBACV2e,EAAI,iEAfuB,IAAlBzT,EAAOhoD,OAAe,yBAA2B,IAmBpD,qCAGhB,OAAO,EAAP,KACKwzD,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3EtF,UAAW,CACT,CAAC9lD,KAAM,QAASyC,KAAM,QAASC,KAAMyf,EAAWxH,OAAQ,CAAC3a,KAAM,OAAQyC,KAAM,QAASC,KAAMyf,EAAWyE,OAEzG4+B,aAAY,KAIdqM,EAAiB,SAACnJ,EAAkBvmC,GACxC,IAAKumC,EACH,MAAM,IAAIloD,MAAM,oBAElB,GAAI2hB,EAAWw5C,cAAgBjT,EAAOhoD,OAAS,GAAKgoD,EAAOhoD,OAAS,GAClE,MAAM,IAAIF,MAAM,uBAElB,IAAK2hB,EAAWw5C,aAAiC,IAAlBjT,EAAOhoD,OACpC,MAAM,IAAIF,MAAM,0BAIlB,GAAsB,IAAlBkoD,EAAOhoD,QAA0C,IAA1BgoD,EAAO,GAAG/lD,KAAKjC,QAA0C,IAA1BgoD,EAAO,GAAG/lD,KAAKjC,OACvE,MAAM,IAAIF,MAAM,4BAGlB,GAAwB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,MACvB,YAAnBimD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,MACxB,IAAlBimD,EAAOhoD,QAAmC,YAAnBgoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KACpE,MAAM,IAAIjC,MAAM,uBAGlB,GAAKkoD,EAAO,GAAGjmD,OAASimD,EAAO,GAAGjmD,MAA4B,IAAlBimD,EAAOhoD,QAAgBgoD,EAAO,GAAGjmD,OAASimD,EAAO,GAAGjmD,KAC9F,MAAM,IAAIjC,MAAM,gC,wWClIpB,cAEA,UAEA,UA0Ea,EAAAm3D,oCACT,SAAC/F,EAAyC3mD,EAAW3C,EAAWkrD,EAC/DrxC,GACC,IA3EqC4mC,EA2E/BmL,GA3E+BnL,EA2Ec5mC,EAAW2vC,SA3EH,CAC/D9xD,KAAM,kBACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAYC,QACzBZ,UAAS,IAwEL,OAAO,EAAP,KACKmL,GAAQ,CACXnxD,IAAK,WAAM,OAtEf,SAAC6uD,EAAyCsC,EAA2BjpD,EAAW3C,EAC/EkrD,EAAgCrxC,GAY/B,IAXA,IAAM+0C,EAASjsD,EAAEtI,KACXy5D,EAAS9zD,EAAE3F,KAGX66C,EAAOgW,EAAY9yD,OACnBq5D,EAAc,CAACqC,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAI5I,EAAY,GAAKA,EAAY,IAC/E6I,EAAaD,EAAO,GAAKA,EAAO,GAChC5H,EAAgB,EAAAC,oBAChB7W,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC5Dk6C,EAAW,GAENC,EAAM,EAAGA,GAAO,EAAGA,IAC1B,IAAK,IAAIC,EAAM,EAAGA,GAAO,EAAGA,IAC1BF,GAAY,qCACYE,EAAG,+BACVD,EAAG,oCAEAxC,EAAY,GAAE,aAAaA,EAAY,GAAE,kDAC3BvG,EAAYhW,EAAO,GAAE,QAAQr7B,EAAWlH,QAAQ,GAAE,MAChFkH,EAAWw0C,KAAK,GAAE,mCACDx0C,EAAWjH,UAAU,GAAE,iBAAiBmhD,EAAU,OAAOD,EAAO,GAAE,+BAEzElF,EApBH,GAoBiB,8DACO1D,EAAYhW,EAAO,GAAE,OAAOr7B,EAAWlH,QAAQ,GAAE,MAChFkH,EAAWw0C,KAAK,GAAE,qCACCx0C,EAAWjH,UAAU,GAAE,qBAAqBmhD,EAAU,MAAMD,EAAO,GAAE,iCAE5ElF,EAxBL,GAwBmB,4DAECmF,EAAU,mFAEhB,EAANE,EAAUC,GAAG,8LAWpC,IAAMhX,EAAe,WACnBgP,EAAa,0MAOT8H,EAAQ,eACR1e,EAAKhS,OAAM,oCAGjB,OAAO,EAAP,KACKsoB,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAMo3D,EAAat3D,KAAMwI,EAAExI,KAAM6lD,YAAa,EAAAoB,YAAYC,QACnEnE,aAAY,EACZC,SAAS,IAUEgX,CAA8B7K,EAAkBsC,EAAUjpD,EAAG3C,EAAGkrD,EAAarxC,Q,wXCnFhG,cAuEa,EAAAy2C,8BACT,SAAChH,EAAyC3mD,EAAW3C,EAAWkrD,EAC/DrxC,GACC,IAvE+B4mC,EAuEzBmL,GAvEyBnL,EAuEc5mC,EAAW2vC,SAvEH,CACzD9xD,KAAM,SACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,UACzBrC,UAAS,IAoEL,OAAO,EAAP,KACKmL,GAAQ,CACXnxD,IAAK,WAAM,OAlEf,SAAC6uD,EAAyCsC,EAA2BjpD,EAAW3C,EAC/EkrD,EAAgCrxC,GAC/B,IAAM+0C,EAASjsD,EAAEtI,KACXy5D,EAAS9zD,EAAE3F,KAEX66C,EAAOgW,EAAY9yD,OACnBg8D,EAAa,EAAA1C,oBAAoB9C,EAAQkF,EAAQ5I,EAAa,GAE9DhO,EAAe,4BACF0R,EAAO,GAAE,6BACTA,EAAO,GAAE,6BACTA,EAAO,GAAE,6BACT/0C,EAAWu0C,YAAY,GAAE,6BACzBv0C,EAAWu0C,YAAY,GAAE,oCAClBv0C,EAAWjH,UAAU,GAAE,oCACvBiH,EAAWjH,UAAU,GAAE,kCACzBiH,EAAWlH,QAAQ,GAAE,kCACrBkH,EAAWlH,QAAQ,GAAE,+BACxBkH,EAAWw0C,KAAK,GAAE,+BAClBx0C,EAAWw0C,KAAK,GAAE,sJAIVnZ,EAAI,mnBAajB0Z,EAAOx2D,OAAM,6XAiB7B,OAAO,EAAP,KACKwzD,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM+5D,EAAYj6D,KAAMwI,EAAExI,KAAM6lD,YAAa,EAAAoB,YAAYK,qBAClEvE,aAAY,IAUDmX,CAAwB/K,EAAkBsC,EAAUjpD,EAAG3C,EAAGkrD,EAAarxC,OAK7E,EAAA63C,oBACT,SAAC7F,EAA+BuC,EAAgClD,EAAgClI,GAExF,YAFwF,IAAAA,MAAA,GAExF,CAACkI,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAC5Ch8C,KAAKC,KAAK08C,EAAW,GAAKuC,EAAY,GAAKA,EAAY,GAAKpL,M,6WCxFzE,aAKA,UAOa,EAAA0D,YACT,SAAC4C,EAAyClJ,EAAkBvmC,GAI1D,OAHA0vC,EAAenJ,GAGR,CADHkJ,EAAiBrtD,IAAIq4D,EAAmChL,EAAkBlJ,EAAQvmC,GAAaumC,KAI5F,EAAAuG,2BACT,SAACvmD,GACC,IAAM4c,EAAQ5c,EAAKyZ,WAAWk1B,SAAS,SACjC9xB,EAAO7c,EAAKyZ,WAAWs1B,UAAU,QACvC,OAAO,EAAAhB,4BAA4B,CAACnxB,MAAK,EAAEC,KAAI,KAGrD,IAAMs3C,EAA6B,CACjC78D,KAAM,cACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAyBrBwR,EACF,SAACl5D,EAAgCglD,EAAkBvmC,GACjD,IAAM+xC,EAAW,EAAH,KAAO2I,GAA0B,CAAE9T,UAAW5mC,EAAW2vC,WACvE,OAAO,EAAP,KAAWoC,GAAQ,CAAEnxD,IAAK,WAAM,OAxBlC,SAACW,EAAgCwwD,EAA2BxL,EAAkBvmC,GAExE,IAAMqxC,EAAc9K,EAAO,GAAG/lD,KAAK4G,QAC7Bi0C,EAAOgW,EAAY9yD,OAEnB8kD,EAAe,WADCsX,EAAoB36C,EAAWoD,KAAK7kB,QAE/C,qCACa88C,EAAI,iFAG5B,OAAO,EAAP,KACK0W,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3EtF,UAAW,CACT,CAAC9lD,KAAM,OAAQyC,KAAM,QAAS8jD,YAAapkC,EAAWoD,KAAK7kB,OAAQgC,KAAMyf,EAAWoD,MACpF,CAACvlB,KAAM,QAASyC,KAAM,QAASC,KAAMyf,EAAWmD,QAElDkgC,aAAY,IAOcuX,CAA6Br5D,EAASwwD,EAAUxL,EAAQvmC,OAGxF26C,EAAsB,SAACE,GAE3B,IADA,IAAMhH,EAAsB,CAAC,4BAA4BgH,EAAW,qBAC3Dv8D,EAAI,EAAGA,EAAIu8D,IAAev8D,EACvB,IAANA,EACFu1D,EAAUp1D,KACN,oBACkBH,EAAC,mBAAmBA,EAAC,QAClCA,IAAMu8D,EAAc,EAC7BhH,EAAUp1D,KACN,wBACsBH,EAAC,QAE3Bu1D,EAAUp1D,KACN,yBACuBH,EAAC,mBAAmBA,EAAC,QAMpD,OAHAu1D,EAAUp1D,KACN,OAEGo1D,EAAUhwD,KAAK,OAGlB6rD,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,iCAElB,GAA8B,IAA1BkoD,EAAO,GAAG/lD,KAAKjC,OACjB,MAAM,IAAIF,MAAM,wBAElB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,yB,8qBCzFpB,cAEA,UAEa,EAAA0uD,sBACT,SAAC0C,EAAyClJ,EAAkBjjC,GAC1DosC,EAAenJ,GAEf,IAAMuU,EAAkBrL,EAAiBrtD,IAAI24D,EAAuCxU,EAAO,IAAKA,GAIhG,MAAO,CAHQkJ,EAAiBrtD,IAC5B44D,EAAqCvL,EAAkBlJ,EAAO,GAAIjjC,EAASw3C,EAAgBt6D,MAC3F,CAAC+lD,EAAO,GAAIuU,EAAiBvU,EAAO,GAAIA,EAAO,OAI5C,EAAAyG,qCAAuE,SAACzmD,GACjF,OAAAA,EAAKyZ,WAAWk1B,SAAS,UAAW,OAExC,IAAM+lB,EAAiC,CACrCp9D,KAAM,wCACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WA8CrB8R,EAAyC,SAACj2C,GAAqC,cAChFm2C,GAA8B,CACjCr6D,IAAK,WAAM,OA7C4B,SAACmxD,EAA2BjtC,GACnE,IAAMo2C,EAAQp2C,EAAMtkB,KAAK4G,QACnBqrD,EAAUyI,EAAM,GAChBC,EAAcD,EAAM,GAAKA,EAAM,GAC/B7J,EAAc,CAAC6J,EAAM,GAAIzI,GAEzBpP,EAAe,uMAOI6X,EAAM,GAAE,+DAENA,EAAM,GAAE,sJAMDC,EAAW,qDAEpBD,EAAM,GAAE,+DAENA,EAAM,GAAE,0LAORC,EAAW,mCAItC,OAAO,EAAP,KACKpJ,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAYK,qBACvEvE,aAAY,IAMH+X,CAAiCH,EAAgCn2C,OAGxEu2C,EAA+B,CACnCx9D,KAAM,sCACNqE,WAAY,CAAC,IAAK,kBAAmB,QAAS,KAC9CskD,WAAY,CAAC,EAAAe,YAAY0B,SAAU,EAAA1B,YAAYK,oBAAqB,EAAAL,YAAY0B,SAAU,EAAA1B,YAAY0B,WAwClG+R,EACF,SAACvL,EAAyC3qC,EAAexB,EAAiBg4C,GAEpE,IAAMvJ,EAAW,EAAH,KAAOsJ,GAA4B,CAAEzU,UAAW,GAAGtjC,IACjE,OAAO,EAAP,KACKyuC,GAAQ,CACXnxD,IAAK,WAAM,OA1CnB,SAAC6uD,EAAyCsC,EAA2BjtC,EAAexB,EACnFg4C,GACC,IAAM7f,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D,IACFwvC,EAAiBvJ,+BAA+BoV,EAAsB,EAAA/T,YAAYK,qBAAoB,GADnG2T,EAAY,KAAEC,EAAa,KAE5B,IAAgD,CAACD,EAAe,EAAGC,GAAc,GACjFnY,EAAe,0JADM,KAIkC,KAJX,KAIqC,sBAC5E5H,EAAKC,UAAS,2fAkBzB,OAAO,EAAP,KACKqW,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAMskB,EAAMtkB,KAAMF,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACtEtF,UAAW,CAAC,CAAC9lD,KAAM,UAAWyC,KAAM,QAASC,KAAM+iB,IACnD+/B,aAAY,IAUGoY,CAA+BhM,EAAkBsC,EAAUjtC,EAAOxB,EAASg4C,OAI5F5L,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,4CAGlB,IAAMwM,EAAI07C,EAAO,GACXpjC,EAAQojC,EAAO,GACfvhD,EAAIuhD,EAAO,GAIjB,GAAI17C,EAAErK,KAAKjC,OAAS,GAA2B,IAAtB4kB,EAAM3iB,KAAKjC,QAAkC,IAAlByG,EAAExE,KAAKjC,OACzD,MAAM,IAAIF,MAAM,wBAElB,GAAI8kB,EAAM3iB,KAAK,KAAOqK,EAAErK,KAAK,IAAMwE,EAAExE,KAAK,KAAOqK,EAAErK,KAAK,GACtD,MAAM,IAAInC,MAAM,gCAElB,GAAgB,YAAXwM,EAAEvK,MAAiC,YAAXuK,EAAEvK,MAAuC,YAAf6iB,EAAM7iB,MAAqC,YAAf6iB,EAAM7iB,MACzE,YAAX0E,EAAE1E,MAAiC,YAAX0E,EAAE1E,KAC7B,MAAM,IAAIjC,MAAM,uBAElB,GAA8B,IAA1BkoD,EAAO,GAAG/lD,KAAKjC,OACjB,MAAM,IAAIF,MAAM,mC,uWCrJpB,cACA,UACA,UAEA,UACA,UAEA,UACA,UAyEa,EAAAg3D,oCACT,SAAC5F,EAAyClJ,EACzCwQ,GACC,IA1EqC9C,EAAkBrN,EA0EjDmL,GA1E+BkC,EA0Ec1N,EAAOhoD,OAAS,EA1EZqoD,EA0EemQ,EAAqBW,mBA1Ed,CACjF75D,KAAM,kBACNqE,WAAY+xD,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDzN,WAAYyN,EAAU,CAAC,EAAA1M,YAAYC,OAAQ,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACrD,CAAC,EAAAD,YAAYC,OAAQ,EAAAD,YAAYC,QACvDZ,UAAS,IAsEL,OAAO,EAAP,KACKmL,GAAQ,CACXnxD,IAAK,WAAM,OApEf,SAAC6uD,EAAyCsC,EAA2BxL,EACpEwQ,GACC,IAAM9C,EAAU1N,EAAOhoD,OAAS,EAC1B21D,EAAcD,EAAU,+BAAiC,GACzD2F,EAASrT,EAAO,GAAG/lD,KACnBq5D,EAAStT,EAAO,GAAG/lD,KACnB6wD,EAAc,EAAAzU,cAAc4U,UAAUoI,EAAQC,GAAQ,GACtD1I,GAAe,EAAA/T,UAAUgU,SAAS7K,EAAO,GAAG/lD,KAAM+lD,EAAO,GAAG/lD,MAElE,IAAK6wD,EACH,MAAM,IAAIhzD,MAAM,yCAElB,IAAM+5D,EAAYwB,EAAOA,EAAOr7D,OAAS,GACnCm9D,EAAiBrmD,KAAKC,KAAK8iD,EAAY,GACvC3G,EAAQmI,EAAOr7D,OACfmzD,EAAQmI,EAAOt7D,OAEfk9C,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D07C,EAAiB,EAAA7e,kBAAkBuU,EAAY9yD,QAC/Cm+C,EAAU2U,EAAY9yD,OACtBq9D,EAAgB,EAAA3e,gBAChB,EAAwC,EAAAyX,qBAAqBqC,GAA5DpC,EAAkB,qBAAEC,EAAe,kBAEpCiH,EACF5H,EAAU,GAAG,EAAA6H,iBAAiBH,EAAgBC,EAAerV,EAAO,GAAG/lD,KAAM6wD,GAAa,GAAU,GAElG0K,EACF5K,EAAc,GA6CxB,SACIwK,EAAwBC,EAAkCrV,EAAkB9M,GAC9E,IAAIuiB,EAAyB,GACzBC,EAAyB,GAEvBC,EAAW3V,EAAO,GAAG/lD,KACrB27D,EAAW5V,EAAO,GAAG/lD,KAErB47D,EAAUF,EAAS39D,OACnB89D,EAAUF,EAAS59D,OAEnBm+C,EAAUjD,EAASl7C,OACnB+9D,EAAY5f,EAAU0f,EACtBG,EAAY7f,EAAU2f,GAE5BL,EAAyBE,EAASh5D,KAAI,SAACmC,EAAG/G,GAAM,gBAAUs9D,EAAct9D,EAAIg+D,OACrDF,EAAU,GAAK,MACtCJ,EAAuBn4D,KAAK,OAC5Bo4D,EAAyBE,EAASj5D,KAAI,SAACmC,EAAG/G,GAAM,gBAAUs9D,EAAct9D,EAAIi+D,OACrDF,EAAU,GAAK,MACtCJ,EAAuBp4D,KAAK,MAE5B,IAAM24D,EAAiB,EAAA5f,cAAcC,iBAAiBqf,EAAUziB,GAC1DgjB,EAAiB,EAAA7f,cAAcC,iBAAiBsf,EAAU1iB,GAE1DijB,EAAiBF,EAAet5D,KAAI,SAAAwC,GAAK,gBAAUk2D,EAAcl2D,EAAI42D,GAAU,WAASz4D,KAAK,MAC7F84D,EAAiBF,EAAev5D,KAAI,SAAAwC,GAAK,gBAAUk2D,EAAcl2D,EAAI62D,GAAU,WAAS14D,KAAK,MAC7F+4D,EAAiB,wBAAwBhB,EAAclf,EAAU,GAAE,eAChEkf,EAAclf,EAAU,GAAE,aAAakf,EAAclf,EAAU,GAAE,eACjEkf,EAAclf,EAAU,GAAE,cAmBnC,MAjBoC,4CAElCif,EAAc,mCACdiB,EAAc,OACdF,EAAc,+BACUV,EAAsB,0EAK9CL,EAAc,mCACdiB,EAAc,OACdD,EAAc,+BACUV,EAAsB,+BAzFvBY,CAAyBlB,EAAgBC,EAAerV,EAAQ8K,GAAiB,GAEhGyL,EAA2B3L,EAAc,2BAA6B,QA8FlF,SAAcyK,EAAyBvgB,GAErC,IADA,IAAIjX,EAAM,GACD9lC,EAAI,EAAGA,EAAI+8C,EAAO,EAAG/8C,IAC5B8lC,GAAO,MAAMw3B,EAAct9D,GAAE,KAI/B,OAFA8lC,EAAO,MAAMw3B,EAAcvgB,EAAO,GAA3B,QAnGiF0hB,CAAKnB,EAAenK,GAAM,IACxGuL,EAA2B7L,EAAc,2BAA6B,QAuGlF,SAAcyK,EAAyBvgB,GAErC,IADA,IAAIjX,EAAM,GACD9lC,EAAI,EAAGA,EAAI+8C,EAAO,EAAG/8C,IAC5B8lC,GAAO,MAAMw3B,EAAct9D,GAAE,KAI/B,OAFA8lC,EAAO,WACGw3B,EAAcvgB,EAAO,GA7GyD4hB,CAAKrB,EAAelK,GAAM,IAKxGrO,EAAe,iBACb0Y,EAAiC,iBACjCF,EAAuB,iBACvBlH,EAAkB,+CAPKxD,EAAc,GAAQwK,EAAc,wDACzBC,EAAclf,EAAU,GAAE,QAAQkf,EAAclf,EAAU,GAAE,oBAC7Fkf,EAAclf,EAAU,GAAE,QAAQkf,EAAclf,EAAU,GAAE,uBAOrC,8EAGFgf,EAAc,sCACvBoB,EAAwB,+BACxBE,EAAwB,iIAKnC9I,EAAW,mBACXU,EAAe,mBACfnZ,EAAKhS,OAAM,2BAErB,OAAO,EAAP,KACKsoB,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAYC,QAC3EnE,aAAY,EACZC,SAAS,IAUE4Z,CAA8BzN,EAAkBsC,EAAUxL,EAAQwQ,Q,sZCrFrF,cAEA,UACA,UACA,UACA,SAwEA,SAAgBR,EACZhQ,EAAkBwQ,GACpB,IAzDmC9C,EAAkBrN,EAyD/CmL,GAzD6BkC,EAyDU1N,EAAOhoD,OAAS,EAzDRqoD,EAyDWmQ,EAAqBW,mBAzDV,CAC3E75D,KAAM,SACNqE,WAAY+xD,EAAU,CAAC,IAAK,IAAK,QAAU,CAAC,IAAK,KACjDzN,WAAYyN,EAAU,CAAC,EAAA1M,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACzD,CAAC,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,UACzDrC,UAAS,IAqDT,OAAO,EAAP,KAAWmL,GAAQ,CAAEnxD,IAAK,WAAM,OAlDlC,SACImxD,EAA2BxL,EAAkBwQ,GAC/C,IAAM6C,EAASrT,EAAO,GAAG/lD,KACnBq5D,EAAStT,EAAO,GAAG/lD,KACnB6wD,EAAc,EAAAzU,cAAc4U,UAAUoI,EAAQC,GAAQ,GAC5D,IAAKxI,EACH,MAAM,IAAIhzD,MAAM,yCAElB,IAAMs9D,EAAiB,EAAA7e,kBAAkBuU,EAAY9yD,QAC/Cq9D,EAAgB,EAAA3e,gBAChB,EAAwC,EAAAyX,qBAAqBqC,GAA5DpC,EAAkB,qBAAEC,EAAe,kBAEpCX,EAAU1N,EAAOhoD,OAAS,EAC1B21D,EAAcD,EAAU,+BAAiC,GACzD4H,EACF5H,EAAU,GAAG6H,EAAiBH,EAAgBC,EAAerV,EAAO,GAAG/lD,KAAM6wD,GAAa,GAAW,GAEnGhW,EAAOgW,EAAY9yD,OACnB4+D,EAAQvD,EAAOr7D,OACf6+D,EAAQvD,EAAOt7D,OAEf8kD,EAAe,SACjBsR,EAAkB,SAClBkH,EAAuB,mCACGxgB,EAAI,uBACpB8hB,EAAK,qBACLC,EAAK,6IANDxD,EAAOA,EAAOr7D,OAAS,GAWR,4BACnB4+D,EAAQ,GAAC,0BACTC,EAAQ,GAAC,mEAGflJ,EAAW,aACXU,EAAe,iCAGvB,OAAO,EAAP,KACK7C,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,IAOkBga,CAAwBtL,EAAUxL,EAAQwQ,MAzE/D,EAAA5J,OACT,SAACsC,EAAyClJ,EAAkBvmC,GAG1D,OAFA0vC,EAAenJ,GAEXkJ,EAAiBxc,QAAQgF,KACpB,CAACwX,EAAiBrtD,IACrB,EAAAizD,oCAAoC5F,EAAkBlJ,EAAQvmC,GAAaumC,IAExE,CAACkJ,EAAiBrtD,IAAIm0D,EAA8BhQ,EAAQvmC,GAAaumC,KAI3E,EAAA6G,sBACT,SAAC7mD,GAAmD,SAAAywD,kCAAkCzwD,EAAKyZ,aAyD/F,kCAMA,IAAM0vC,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAGlB,GAAIkoD,EAAO,GAAG/lD,KAAK+lD,EAAO,GAAG/lD,KAAKjC,OAAS,KAAOgoD,EAAO,GAAG/lD,KAAK+lD,EAAO,GAAG/lD,KAAKjC,OAAS,GACvF,MAAM,IAAIF,MAAM,oCAGlB,GAAwB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,MACvB,YAAnBimD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC7C,MAAM,IAAIjC,MAAM,+BAGlB,GAAIkoD,EAAO,GAAGjmD,OAASimD,EAAO,GAAGjmD,KAC/B,MAAM,IAAIjC,MAAM,8BAIpB,SAAgBy9D,EACZH,EAAwBC,EAAkCtf,EAA4B7C,EACtFH,GACF,IAAI4D,EACET,EAASH,EAAQ/9C,OACjBm+C,EAAUjD,EAASl7C,OACnBw+C,EAAWL,EAAUD,EAEzBS,EADER,EAAU,GAAKD,EAAS,EACF,SAEAH,EAAQp5C,KAAI,SAACmC,EAAG/G,GAAM,gBAAUs9D,EAAct9D,EAAIy+C,MAAal5C,KAAK,MAE9F,IACMw4C,EADgB,EAAAO,cAAcC,iBAAiBP,EAAS7C,GAC1Bv2C,KAAI,SAAAwC,GAAK,gBAAUk2D,EAAcl2D,EAAIq3C,GAAS,WAASl5C,KAAK,MAG5F4lC,EAAS,uCAkBb,OAnBiC,IADlB,EAAA2T,UAAUp8C,KAAKs7C,KAI5B7S,EAAS,uBAEoB6P,EAAW,kCAExCqiB,EAAc,mCACdtf,EAAa,kCACca,EAAqB,gBACzCzT,EAAM,OAE2B,mCAExCkyB,EAAc,mCACdtf,EAAa,mCA9BjB,sB,gWCxGA,cAEA,UACA,UAEA,UAEMihB,EAAsB,CAC1Bz/D,KAAM,OACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAYgW,mBA+Cd,EAAA7S,4BAA8B,SAACnpD,EAAgCujB,GACxE,cAAKw4C,GAAmB,CAAE18D,IAAK,WAAM,OA7CX,SAACW,EAAgCujB,GAC7D,IAuGgBu2B,EAAc76C,EAAgB88C,EAAcC,EAvGtD9B,EAAO,EAAAtB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SACjD+xC,EAAaltC,EAAMtkB,KAEnBg9D,EAAYxL,EAAWzzD,OAEvBsmD,EAAa//B,EAAMtkB,KAAKjC,OAExBo9D,EAAiB,EAAA7e,kBAAkB+H,GACnCsE,EAAW,EAAAgJ,YAAY,KAAMtN,GAC7B4Y,GA8FUpiB,EA9FOwJ,EA8FOrkD,EA9FK2oD,EA8FW7L,EA9FD0U,EAAWA,EAAWzzD,OAAS,GA8FhBg/C,EA9FoByU,EAAWA,EAAWzzD,OAAS,GA+FlG,IAAT88C,GAAuB,IAATA,EACT,GAIO,iBACJ76C,EAAK66C,EAAO,GAAE,kBACd76C,EAAK66C,EAAO,GAAE,oBACZ76C,EAAK66C,EAAO,GAAE,wBACd76C,EAAK66C,EAAO,GAAE,kCACJkC,EAAI,8BACJD,EAAI,WAhGtBogB,EA8BR,SAAiCriB,EAAc5O,EAA0BjsC,GACvE,GAAa,IAAT66C,EACF,MAAO,QAET,GAAa,IAATA,EACF,MAAO,QAAQ5O,EAAM,GAIvB,IADA,IAAIkxB,EAAO,GACFr/D,EAAI+8C,EAAO,EAAG/8C,EAAI+8C,EAAM/8C,IAC/Bq/D,GAAWn9D,EAAKlC,GAAE,OAAOmuC,EAAMnuC,EAAI+8C,EAAO,GACtC/8C,EAAI+8C,EAAO,IACbsiB,GAAQ,MAIZ,OAAOA,EA9CsBC,CAAwB/Y,EAPnC,IAAd2Y,EACgB,CAAC,EAAG,GACC,IAAdA,EACS,CAACxL,EAAW,GAAI,GAEhB,CAACA,EAAWnN,EAAa,GAAImN,EAAWnN,EAAa,IAESsE,GAC5E1f,EAmDR,SAAmBgD,EAA0BjsC,GAC3C,IAAM66C,EAAO5O,EAAMluC,OAEnB,GAAa,IAAT88C,EACF,MAAO,kBAGT,GAAa,IAATA,EACF,MAAO,oCACa5O,EAAM,GAAE,0CAI9B,IAII/iC,EAAI,GACR,GAAI2xC,EAAO,EACT,IAAK,IAAI/8C,EAAI,EAAGA,EAAI+8C,EAAO,IAAK/8C,EAC9BoL,GAAWlJ,EAAKlC,GAAE,IAGtB,MAAO,QAAQoL,EAAR,uCACqBA,EADrB,yCAEqBA,EAFrB,kDAG8BA,EAH9B,YA1EQm0D,CAAU7L,EAAY7I,GAE/B9F,EAAe,sCAEXsY,EAAc,4CAEX+B,EAAoB,oBACrBjiB,EAAKhS,OAAM,gDAEXg0B,EAAK,mBAELhiB,EAAKhS,OAAM,WAAWA,EAAM,qCAIxC,OAAO,EAAP,KACK6zB,GAAmB,CACtBha,SAAS,EACT7Z,OAAQ,CAACjpC,KAAMskB,EAAMtkB,KAAMF,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAYC,QACtEnE,aAAY,IAKyBya,CAAsBv8D,EAASujB,Q,6IC3DxE,cAEA,SAAgBi5C,EAAelgE,EAAcw9C,GAC3C,OAAO,EAAA4B,cAAc5B,GAAMn4C,KAAI,SAAAwC,GAAK,OAAG7H,EAAI,IAAI6H,KADjD,mBAIA,uBAA4B7H,EAAcw9C,GACxC,OAAa,IAATA,EACK,CAACx9C,GAEHkgE,EAAelgE,EAAMw9C,IAG9B,+BACE,MAAO,sX,0oBCdT,aAIA,UACA,UAEA,UAQM2iB,EAAqB,CACzBngE,KAAM,MACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAArxB,IACT,SAAC63B,EAAyClJ,EAAkBvmC,GAS1D,OARA0vC,EAAenJ,GAQR,CAPQkJ,EAAiBrtD,IAAI,EAAD,KAE1B47D,GAAkB,CACrBpX,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAq9D,EAAqBxO,EAAkBlJ,EAAQvmC,MAE5DumC,KAIG,EAAAgH,mBAA4D,SAAChnD,GACxE,IAAMof,EAAOpf,EAAKyZ,WAAWo1B,UAAU,OAAQ,YACzCr2C,EAAQwH,EAAKyZ,WAAWk1B,SAAS,QAAS,GAC1Csf,EAAOjuD,EAAKyZ,WAAWu1B,QAAQ,QACrC,OAAO,EAAAjB,4BAA4B,CAAC3uB,KAAI,EAAE5mB,MAAK,EAAEy1D,KAAI,KAGvD,IAAMyJ,EACF,SAACxO,EAAyClJ,EAAkBvmC,GAC1D,IAAMqxC,EAAc,EAAAjU,UAAU8gB,SAAS3X,EAAO,GAAG/lD,KAAK4G,QAAS4Y,EAAWw0C,MACpEnZ,EAAOgW,EAAY9yD,OAEnB8kD,EAAe,WADD8a,EAAe1O,EAAkBlJ,EAAO,GAAIvmC,GAEnD,6BACOq7B,EAAI,yDAGxB,MAAO,CACLx9C,KAAM,MACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,UACzBxf,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,IAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,wBAElB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,wBAId8/D,EAAiB,SAAC1O,EAAyC3qC,EAAe9E,GAC9E,IAAMy7B,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D,IAAkBwvC,EAAiBvJ,+BAA+BphC,EAAMtkB,KAAM,EAAA+mD,YAAY0B,UAAS,GAAlGxxC,EAAK,KAAEC,EAAM,KACdoB,EAAU,EAAAskC,UAAUgM,eAAetkC,EAAMtkB,MAE/C,OAAQwf,EAAW2F,MACjB,IAAK,WACH,OAAOy4C,EAAe3iB,EAAM32B,EAAMtkB,KAAMsY,EAASrB,EAAOC,EAAQsI,EAAWw0C,KAAMx0C,EAAWjhB,OAC9F,IAAK,UACH,OAAOs/D,EAAc5iB,EAAM32B,EAAMtkB,KAAMsY,EAASrB,EAAOC,EAAQsI,EAAWw0C,MAC5E,IAAK,OACH,OAAO8J,EAAW7iB,EAAM32B,EAAMtkB,KAAMsY,EAASrB,EAAOC,EAAQsI,EAAWw0C,MACzE,QACE,MAAM,IAAIn2D,MAAM,kBAIhB+/D,EACF,SAAC3iB,EAAYhP,EAA0B3zB,EAA4BrB,EAAeC,EAAgB88C,EACjGz1D,GAGC,IAFA,IAAMs8C,EAAO5O,EAAMluC,OACfwmD,EAAQ,GACHzmD,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/BymD,GAAS,mBACDzmD,EAAC,OAAOk2D,EAAKl2D,GAAE,6DAEZmuC,EAAMnuC,GAAE,6CACHwa,EAAQxa,GAAE,cAG5B,MAAO,4BACY+8C,EAAI,8CACUt8C,EAAK,4DAGlCgmD,EAAK,kDACgCttC,EAAK,KAAKC,EAAM,6CACvB+jC,EAAKC,UAAS,yDAMhD2iB,EACF,SAAC5iB,EAAYhP,EAA0B3zB,EAA4BrB,EAAeC,EAAgB88C,GAK5F,IAHA,IAAMnZ,EAAO5O,EAAMluC,OAEfwmD,EAAQ,GACHzmD,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/BymD,GAAS,mBACLzmD,EAAC,OAAOk2D,EAAKl2D,GAAE,6EAGD,GAAKmuC,EAAMnuC,GAAK,GAAE,8EAE5BmuC,EAAMnuC,GAAE,0DAEJwa,EAAQxa,GAAE,cAGxB,MAAO,4BACQ+8C,EAAI,8DAGnB0J,EAAK,kDACgCttC,EAAK,KAAKC,EAAM,6CACvB+jC,EAAKC,UAAS,yDAMhD4iB,EACF,SAAC7iB,EAAYhP,EAA0B3zB,EAA4BrB,EAAeC,EAAgB88C,GAK5F,IAHA,IAAMnZ,EAAO5O,EAAMluC,OAEfwmD,EAAQ,GACHzmD,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/BymD,GAAS,mBACLzmD,EAAC,OAAOk2D,EAAKl2D,GAAE,mDAEZmuC,EAAMnuC,GAAE,UAASmuC,EAAMnuC,GAAK,GAAC,4BACxBwa,EAAQxa,GAAE,YAGxB,MAAO,4BACQ+8C,EAAI,8DAGnB0J,EAAK,kDACgCttC,EAAK,KAAKC,EAAM,6CACvB+jC,EAAKC,UAAS,0D,udClKtD,aAIA,UAEA,UAWa,EAAAyP,YACT,SAACsE,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GACf,IAAMwL,EACF,CAACl0D,KAAM,cAAeqE,WAAY,CAAC,KAAMskD,WAAY,CAAC,EAAAe,YAAY0B,UAAWrC,UAAW5mC,EAAW2vC,UAGvG,MAAO,CAFQF,EAAiBrtD,IAAI,EAAD,KAC3B2vD,GAAQ,CAAEnxD,IAAK,WAAM,OAAA29D,EAA6BhY,EAAQwL,GAAU,EAAO/xC,MAAcumC,KAI1F,EAAA6E,2BACT,SAAC7kD,GACC,IAAMyS,EAAUzS,EAAKyZ,WAAWo1B,UAAU,WAAY,UAChDopB,EAAWj4D,EAAKyZ,WAAWm1B,OAAO,YAAa,GAC/CspB,EAAsE,IAAnDl4D,EAAKyZ,WAAWm1B,OAAO,oBAAqB,GAC/Dof,EAAchuD,EAAKyZ,WAAWu1B,QAAQ,gBACtCz8B,EAAUvS,EAAKyZ,WAAWu1B,QAAQ,UAAW,IAC7Cif,EAAOjuD,EAAKyZ,WAAWu1B,QAAQ,OAAQ,IAG7C,GAAiB,IAAbipB,EACF,MAAM,IAAIngE,MAAM,0EAGlB,OAAO,EAAAi2C,4BAA4B,CAACt7B,QAAO,EAAEwlD,SAAQ,EAAEC,gBAAe,EAAElK,YAAW,EAAEz7C,QAAO,EAAE07C,KAAI,KAGxG,IAAM+J,EACF,SAAChY,EAAkBwL,EAA2B2M,EAA2B1+C,GAEnE,IAAMgyC,EAAazL,EAAO,GAAG/lD,KAAK4G,QAClC,EAAAwvD,aAAa+H,qBACTD,EAAkB1M,EAAYhyC,EAAWu0C,YAAav0C,EAAWlH,QAASkH,EAAWw0C,MACzF,IAAMnD,EAAc,EAAAuF,aAAagI,uBAC7BF,EAAkB1M,EAAYhyC,EAAWlH,QAASkH,EAAWu0C,YAAav0C,EAAWw0C,KACrFx0C,EAAWhH,SACTkhD,EAAa,EAAA9c,UAAUp8C,KAAKgf,EAAWu0C,aAEzCsK,EAAM,GACN7+C,EAAWy+C,gBACbI,GAAO,kBAAkB3E,EAAU,KAEnC2E,GAAO,kBAAkB3E,EAAU,WAErC,IACM7W,EAAe,aADDyb,EAAoBvY,EAAO,GAAG/lD,KAAMwf,EAP5C,kBAO6D6+C,EAAK,OAEnE,WAEX,OAAO,EAAP,KACK9M,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,KAIX,EAAAoJ,kBACT,SAACgD,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GACf,IAAMwL,EAAW,CACfl0D,KAAM,oBACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,UACzBrC,UAAW,GAAG5mC,EAAWy+C,iBAI3B,MAAO,CAFQhP,EAAiBrtD,IAAI,EAAD,KAC3B2vD,GAAQ,CAAEnxD,IAAK,WAAM,OAAA29D,EAA6BhY,EAAQwL,GAAU,EAAM/xC,MAAcumC,KAIzF,EAAAmG,iCACT,SAACnmD,GACC,IAAMk4D,EAAsE,IAAnDl4D,EAAKyZ,WAAWm1B,OAAO,oBAAqB,GACrE,OAAO,EAAAb,4BACH,CAACt7B,QAAS,GAAIwlD,SAAU,EAAGC,gBAAe,EAAElK,YAAa,GAAIz7C,QAAS,GAAI07C,KAAM,MAO7E,EAAAnH,QACT,SAACoC,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GACf,IAAMwL,EACF,CAACl0D,KAAM,UAAWqE,WAAY,CAAC,KAAMskD,WAAY,CAAC,EAAAe,YAAY0B,UAAWrC,UAAW5mC,EAAW2vC,UAGnG,MAAO,CAFQF,EAAiBrtD,IAAI,EAAD,KAC3B2vD,GAAQ,CAAEnxD,IAAK,WAAM,OAAAm+D,EAAyBxY,EAAQwL,GAAU,EAAO/xC,MAAcumC,KAItF,EAAA+G,uBACT,SAAC/mD,GACC,IAAMyS,EAAUzS,EAAKyZ,WAAWo1B,UAAU,WAAY,UAChDopB,EAAWj4D,EAAKyZ,WAAWm1B,OAAO,YAAa,GAC/Cof,EAAchuD,EAAKyZ,WAAWu1B,QAAQ,gBACtCz8B,EAAUvS,EAAKyZ,WAAWu1B,QAAQ,UAAW,IAC7Cif,EAAOjuD,EAAKyZ,WAAWu1B,QAAQ,OAAQ,IACvCypB,EAAez4D,EAAKyZ,WAAWm1B,OAAO,gBAAiB,GAG7D,GAAqB,IAAjB6pB,EACF,MAAM,IAAI3gE,MAAM,+DAElB,GAAiB,IAAbmgE,EACF,MAAM,IAAIngE,MAAM,sEAGlB,OAAO,EAAAi2C,4BACH,CAACt7B,QAAO,EAAEwlD,SAAQ,EAAEC,iBAAiB,EAAOlK,YAAW,EAAEz7C,QAAO,EAAE07C,KAAI,EAAEwK,aAAY,KAG9F,IAAMD,EACF,SAACxY,EAAkBwL,EAA2B2M,EAA2B1+C,GAEnE,IAAMgyC,EAAazL,EAAO,GAAG/lD,KAAK4G,QAClC,EAAAwvD,aAAa+H,qBACTD,EAAkB1M,EAAYhyC,EAAWu0C,YAAav0C,EAAWlH,QAASkH,EAAWw0C,MACzF,IAAMnD,EAAc,EAAAuF,aAAagI,uBAC7BF,EAAkB1M,EAAYhyC,EAAWlH,QAASkH,EAAWu0C,YAAav0C,EAAWw0C,KACrFx0C,EAAWhH,SAMTqqC,EAAe,WADDyb,EAAoB9M,EAAYhyC,EAJxC,2CAGA,GAC8D,QAEjE,SAET,OAAO,EAAP,KACK+xC,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,KAIlB4b,EAA0B,CAC9BjmD,QAAS,GACTwlD,SAAU,EACVC,iBAAiB,EACjBlK,YAAa,GACbz7C,QAAS,GACT07C,KAAM,GACNwK,aAAc,EACdrP,SAAU,IAGNuP,EAAwB,CAC5BrhE,KAAM,gBACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAA0D,cAAgB,SAAC8C,EAAyClJ,GAQrE,OAPAmJ,EAAenJ,GAOR,CANQkJ,EAAiBrtD,IAAI,EAAD,KAE1B88D,GAAqB,CACxBt+D,IAAK,WAAM,OAAAm+D,EAAyBxY,EAAQ2Y,GAAuB,EAAMD,MAE3E1Y,KAIN,IAAMmJ,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,8BAElB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,wBAIdygE,EACF,SAACK,EAA8Bn/C,EAAmCo/C,EAAaP,EAAa5uC,GAEtF,IAAMorB,EAAO8jB,EAAU5gE,OACvB,GAAIyhB,EAAWu0C,YAAYh2D,QAAU,EAAG,CACtC,IAKI8gE,EALEC,EAAKt/C,EAAWu0C,YAAYv0C,EAAWu0C,YAAYh2D,OAAS,GAC5DghE,EAAKv/C,EAAWlH,QAAQkH,EAAWlH,QAAQva,OAAS,GACpDihE,EAAUx/C,EAAWw0C,KAAKx0C,EAAWw0C,KAAKj2D,OAAS,EAAI,GACvDkhE,EAAQz/C,EAAWw0C,KAAKx0C,EAAWw0C,KAAKj2D,OAAS,GACjDmhE,EAAOP,EAAU9jB,EAAO,GAE1BskB,EAAQ,GACRC,EAAW,GAmBf,GAjBEP,EADEG,EAAUC,IAAU,EACd,mCACUH,EAAE,2BAClBjkB,EAAI,mBAAmBA,EAAI,WAAWkkB,EAAE,MAAMC,EAAO,4BACjDnkB,EAAI,kBAAkBA,EAAI,YAAYqkB,EAAI,kFAIhDN,EAAG,gBAGK,mCACUE,EAAE,2BAClBjkB,EAAI,mBAAmBA,EAAI,WAAWkkB,EAAE,MAAMC,EAAO,sBACvDJ,EAAG,gBAIiC,IAAlCp/C,EAAWu0C,YAAYh2D,OAAc,CACvC,IAAMshE,EAAK7/C,EAAWu0C,YAAYv0C,EAAWu0C,YAAYh2D,OAAS,GAC5DuhE,EAAK9/C,EAAWlH,QAAQkH,EAAWlH,QAAQva,OAAS,GACpDwhE,EAAU//C,EAAWw0C,KAAKx0C,EAAWw0C,KAAKj2D,OAAS,EAAI,GACvDyhE,EAAQhgD,EAAWw0C,KAAKx0C,EAAWw0C,KAAKj2D,OAAS,GACjD0hE,EAAOd,EAAU9jB,EAAO,GAE5BskB,EADEI,EAAUC,IAAU,EACd,qCACUH,EAAE,6BAClBxkB,EAAI,mBAAmBA,EAAI,WAAWykB,EAAE,MAAMC,EAAO,8BACjD1kB,EAAI,kBAAkBA,EAAI,YAAY4kB,EAAI,8BACxCX,EAAE,4DAKF,qCACUO,EAAE,6BAClBxkB,EAAI,mBAAmBA,EAAI,WAAWykB,EAAE,MAAMC,EAAO,sBAGzDH,EAAW,0BAmBb,MAdoB,uCACIvkB,EAAI,yBACtBA,EAAI,iEAGIprB,EAAK,wCAEnB0vC,EAAK,eACLN,EAAK,eACLO,EAAQ,eACRf,EAAG,+CAMH,IAAM3E,EAAa,EAAA9c,UAAUp8C,KAAKgf,EAAWu0C,aACvC2L,EAAgB,EAAA9iB,UAAUgM,eAAeppC,EAAWu0C,aACpD4L,EAAcD,EAAc3hE,OAC5B6hE,EAAWpgD,EAAWw0C,KAAKj2D,OAC3B8hE,EAA0B3b,EAAgByb,GAC1CG,EAAgBC,EAAUpB,EAAW,aACrCqB,EAAWD,EAAUvgD,EAAWw0C,KAAM,QACtCiM,EAAoBF,EAAUL,EAAe,iBAoDnD,MA/BoB,aACtBG,EAAuB,uCACGhlB,EAAI,yBACtBA,EAAI,4DAEC8kB,EAAW,0BACbC,EAAQ,+BACH/kB,EAAI,mCACA8kB,EAAW,6BACjBA,EAAW,iBACvBK,EAAQ,eACRF,EAAa,eA/BOC,EAAUvgD,EAAWlH,QAAS,WAgCvC,eACX2nD,EAAiB,+BAEHxwC,EAAK,2FAGCiqC,EAAU,0HAGf7e,EAAI,MAAM8kB,EAAW,SAAS9kB,EAAI,2DACbA,EAAI,MAAM8kB,EAAW,mCACtC9kB,EAAI,MAAM8kB,EAAW,oCA1CxBngD,EAAWw0C,KAAKkM,QAAO,SAAC5R,EAAK6R,GAAQ,OAAA7R,EAAM6R,KAG/C,oMAQVvB,EAAG,gBAGO,4BAEZA,EAAG,cA2BQ,4BAEXP,EAAG,kDAST0B,EAAY,SAACK,EAA0BC,GAE3C,IADA,IAAI9b,EAAQ,GACHzmD,EAAI,EAAGA,EAAIsiE,EAAMriE,OAAQD,IAChCymD,GAAS,WACL8b,EAAS,IAAIviE,EAAC,OAAOsiE,EAAMtiE,GAAE,UAGnC,OAAOymD,GAGHL,EAAkB,SAACrJ,GAAyB,kDACTA,EAAI,sBAAsBA,EAAI,yBAC7DA,EAAI,2DAGYA,EAAI,uHAIhBA,EAAI,yB,4bCxVlB,aAEA,SAEA,UAEA,UAUMqlB,EACF,SAACjR,EAAyClJ,EAAkBvmC,EAA8BniB,EACzFijE,GACCpR,EAAenJ,GAEf,IAAMwa,EAAwB,CAC5BljE,KAAI,EACJqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAW3B,MAAO,CARQwG,EAAiBrtD,IAAI,EAAD,KAE1B2+D,GAAqB,CACxBna,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WACD,OAAAogE,EAAwBvR,EAAkBlJ,EAAQvmC,EAAYniB,EAAMijE,EAAUC,MAEpFxa,KAIG,EAAAmH,sBAAkE,SAACnnD,GAC9E,IAAM06D,EAAO16D,EAAKyZ,WAAWu1B,QAAQ,OAAQ,IACvC2rB,EAAqD,IAA1C36D,EAAKyZ,WAAWm1B,OAAO,WAAY,GACpD,OAAO,EAAAb,4BAA4B,CAAC2sB,KAAI,EAAEC,SAAQ,KAGpD,IAAMF,EACF,SAACz/D,EAAgCglD,EAAkBvmC,EAA8BniB,EAAcijE,EAC9FC,GAUC,IATA,IAAM1P,EAAwB,GACxB8P,EAAQ5a,EAAO,GAAG/lD,KAAKjC,QAAU,EAEjC6iE,EAAU,GAEVH,EAAO,EAAA7jB,UAAUikB,cAAcrhD,EAAWihD,KAAM1a,EAAO,GAAG/lD,KAAKjC,QAC/D+iE,EAAMR,EAASva,EAAQ0a,GACzBM,EAAYD,EAAI,GAEXt4D,EAAI,EAAGA,EAAIu9C,EAAO,GAAG/lD,KAAKjC,OAAQyK,IAErCi4D,EAAKjiE,QAAQgK,IAAM,GAAqB,IAAhBi4D,EAAK1iE,QAC3ByhB,EAAWkhD,UACb7P,EAAY5yD,KAAK,GAInB8iE,EAAY,wBACDv4D,EAAC,UAAUA,EAAC,MAAMu9C,EAAO,GAAG/lD,KAAKwI,GAAE,MAAMA,EAAC,+BACxCA,EAAC,QAAQA,EAAC,kBACnBu4D,EAAS,kBAGbH,EAAQ3iE,KAAK,YAAYuK,EAAC,iBAAiBqoD,EAAY9yD,OAAM,MAE7D8yD,EAAY5yD,KAAK8nD,EAAO,GAAG/lD,KAAKwI,KAIpC,IAEMq6C,EAAe,wCAFPgO,EAAY9yD,QAAU,GAGD,oFAElB4iE,EAAK,6CAClBC,EAAQv9D,KAAK,MAAK,aAClBy9D,EAAI,GAAE,kDACNC,EAAS,aACTD,EAAI,GAAE,8EAIV,OAAO,EAAP,KACKP,GAAqB,CACxBt3B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,KAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,+BAGlB,IAA8C,IAA1C,EAAAg7D,aAAar6D,QAAQunD,EAAO,GAAGjmD,MACjC,MAAM,IAAIjC,MAAM,wBAIP,EAAA0vD,UACT,SAAC0B,EAAyClJ,EAAkBvmC,GAE1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,aADzB,WAAgB,OAAC,eAAgB,yBAA0B,QAI/E,EAAA4tC,WACT,SAAC6B,EAAyClJ,EAAkBvmC,GAW1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,cAVzB,SAACumC,EAAkB0a,GAE5C,IADA,IAAIjgE,EAAO,EACFgI,EAAI,EAAGA,EAAIu9C,EAAO,GAAG/lD,KAAKjC,OAAQyK,KACrCi4D,EAAKjiE,QAAQgK,IAAM,GAAqB,IAAhBi4D,EAAK1iE,UAC/ByC,GAAQulD,EAAO,GAAG/lD,KAAKwI,IAI3B,MAAO,CAAC,eAAgB,yBAA0B,YAAYhI,EAAI,UAK7D,EAAA2sD,UACT,SAAC8B,EAAyClJ,EAAkBvmC,GAW1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,aAVzB,SAACumC,EAAkB0a,GAE5C,IADA,IAAMO,EAAU,GACPx4D,EAAI,EAAGA,EAAIu9C,EAAO,GAAG/lD,KAAKjC,OAAQyK,KACrCi4D,EAAKjiE,QAAQgK,IAAM,GAAqB,IAAhBi4D,EAAK1iE,SAC/BijE,EAAQ/iE,KAAK,YAAYuK,EAAC,UAI9B,MAAO,CAAIw4D,EAAQ39D,KAAK,MAAK,0BAA2B,oCAAqC,QAKxF,EAAAgqD,UACT,SAAC4B,EAAyClJ,EAAkBvmC,GAW1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,aAVzB,SAACumC,EAAkB0a,GAE5C,IADA,IAAMO,EAAU,GACPx4D,EAAI,EAAGA,EAAIu9C,EAAO,GAAG/lD,KAAKjC,OAAQyK,KACrCi4D,EAAKjiE,QAAQgK,IAAM,GAAqB,IAAhBi4D,EAAK1iE,SAC/BijE,EAAQ/iE,KAAK,YAAYuK,EAAC,UAI9B,MAAO,CAAIw4D,EAAQ39D,KAAK,MAAK,0BAA2B,oCAAqC,QAKxF,EAAAiqD,WACT,SAAC2B,EAAyClJ,EAAkBvmC,GAE1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,cADzB,WAAgB,OAAC,eAAgB,yBAA0B,QAI/E,EAAAytC,aACT,SAACgC,EAAyClJ,EAAkBvmC,GAE1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,gBADzB,WAAgB,OAAC,eAAgB,yBAA0B,2BAI/E,EAAAguC,mBACT,SAACyB,EAAyClJ,EAAkBvmC,GAE1D,OAAO0gD,EAAOjR,EAAkBlJ,EAAQvmC,EAAY,sBADzB,WAAgB,OAAC,wBAAyB,oCAAqC,S,4YC1KhH,cACA,UAEA,UAEA,UAyEa,EAAA4pC,uCACT,SAACroD,EAAgCkgE,EAAiBC,GAChD,IAAM3P,EAzEiC,SAAC2P,GAC1C,OAAE7jE,KAAM,mBAAoB2oD,WAAY,CAAC,EAAAe,YAAYC,QAAStlD,WAAY,CAAC,KAAM0kD,UAAW,GAAG8a,GAwE5EC,CAAqCD,GACtD,OAAO,EAAP,KAAW3P,GAAQ,CAAEnxD,IAAK,WAAM,OAtElC,SAACW,EAAgCkgE,EAAiB1P,EAA2B2P,GAMvE,IAJA,IAAME,EAAeH,EAAQjhE,KACvBipD,EAAsBiY,EAExBG,EAAW,GACNvjE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIwjE,EAAe,GACnB,OAAQxjE,GACN,KAAK,EACHwjE,EAAe,qBACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,4CACf,MACF,KAAK,EACHA,EAAe,8CACf,MACF,QACE,MAAM,IAAIzjE,MAGdwjE,GAAY,aACdC,EAAY,cACZxjE,EAAI,EAAI,sDAAwD,IAAE,6OAMzDA,EAAC,iFAEVA,EAAI,EAAI,IAAM,IAAE,WAGhB,IAwEsBmuC,EACxB3zB,EACAsiC,EA1EQK,EAAO,EAAAtB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SAEjDojC,EAAe,YAsEC5W,EArEDm1B,EAsEvB9oD,EAAU,EAAAskC,UAAUgM,eAAe3c,GACnC2O,EAAS,CAAC,IAAK,IAAK,KAYnB,oEAVwBtiC,EACK5V,KAAI,SAACs4C,EAAQl9C,GAKZ,MAJc,OAAO88C,EAAO98C,GAAd,cAAiCk9C,EAIhC,MAHDl9C,IAAMwa,EAAQva,OAAS,EACjC,OAAO68C,EAAO98C,EAAI,GAAlB,cAAqC88C,EAAO98C,GAAE,MAAMk9C,EACpD,YAAYJ,EAAO98C,GAAE,MAAMk9C,GACN,OAE1B33C,KAAK,IAlFZ,qDA4F/B,SAAiC4oC,GAC/B,IAAM3zB,EAAU,EAAAskC,UAAUgM,eAAe3c,GAEzC,MAAO,+FAGe3zB,EAAQ,GAAE,iBAAiBA,EAAQ,GAAE,sBAhGrDipD,CAAwBtY,GAAoB,WAC5C,EAAA6I,oBAAmB,yJAQN7I,EAAoB,GAAE,yBACtBA,EAAoB,GAAE,gBAEjCoY,EAAQ,aACRpmB,EAAKhS,OAAM,4BAIX,OAAO,EAAP,KACKsoB,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAMipD,EAAqBnpD,KAAMmhE,EAAQnhE,KAAM6lD,YAAa,EAAAoB,YAAYC,QACjFnE,aAAY,EACZC,SAAS,IAOiB0e,CAAiCzgE,EAASkgE,EAAS1P,EAAU2P,OAGnG,yBAA8Bj1B,GAC5B,GAAqB,IAAjBA,EAAMluC,OACR,MAAO,CAAC,EAAG,EAAG,GAIhB,IADA,IAAI0jE,EAAQ,EACH3jE,EAAI,EAAGA,EAAImuC,EAAMluC,OAAS,IAAKD,EACtC2jE,GAASx1B,EAAMnuC,GAEjB,MAAO,CAAC2jE,EAAOx1B,EAAMluC,OAAS,EAAIkuC,EAAMA,EAAMluC,OAAS,GAAK,EAAGkuC,EAAMA,EAAMluC,OAAS,KActF,0BAA+BiC,EAAyBuoD,GAWtD,OAToB,IAAhBvoD,EAAKjC,QAAwC,IAAxBwqD,EAAaxqD,SAE3BiC,EAAKjC,OAAS,GAAKwqD,EAAaxqD,OAAS,EACjCiC,EAAKA,EAAKjC,OAAS,KAAOwqD,EAAaA,EAAaxqD,OAAS,GAE7DiC,EAAKA,EAAKjC,OAAS,KAAOwqD,EAAaA,EAAaxqD,OAAS,IAC1EiC,EAAKA,EAAKjC,OAAS,KAAOwqD,EAAaA,EAAaxqD,OAAS,M,mGCnHrE,cAGa,EAAAynB,QAAU,SAACzkB,EAAgCglD,GACtD,IAAMwC,EAAe,EAAA3L,UAAU8kB,sBAAsB3b,EAAO,GAAG/lD,KAAM+lD,EAAO,GAAG4b,aAC/E,OAAI5gE,EAAQ0xC,QAAQgF,KACX,CAAC12C,EAAQ8nD,cAAc9C,EAAO,GAAIwC,IAElC,CAACxnD,EAAQunD,gBAAgBvC,EAAO,GAAIwC,M,8qBCN/C,cAEA,UACA,UAEA,UACA,UAEMqZ,EAAwB,CAC5BvkE,KAAM,SACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAYC,SAGd,EAAAyG,OACT,SAACwB,EAAyClJ,EAAkBvmC,GAS1D,OARA,EAAA0vC,eAAenJ,EAAQvmC,GAQhB,CAPQyvC,EAAiBrtD,IAAI,EAAD,KAE1BggE,GAAqB,CACxBxb,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAyhE,EAA8B5S,EAAkBlJ,EAAQvmC,MAErEumC,KAIG,EAAA2H,yBACT,SAAC3nD,GAAyC,SAAA+7D,wBAAwB/7D,EAAM,KAE/D,EAAA4nD,yBACT,SAAC5nD,GAAyC,SAAA+7D,wBAAwB/7D,EAAM,KAE5E,IAAM87D,EACF,SAAC5S,EAAyClJ,EAAkBvmC,GAC1D,IAAMy7B,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D,IAAwBsiD,EAAchc,EAAQvmC,GAAW,GAAxD4F,EAAM,KAAEyrC,EAAW,KAI1B,GADIzrC,EAAO48C,OAAM,SAACn9D,GAAc,OAAM,IAANA,MAAmD,uBAAvC2a,EAAWyiD,wBAErD,OAAO,EAAP,KACKL,GAAqB,CACxB34B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAYC,QAC3ElE,SAAS,EACTD,aAAc,+CACO5H,EAAKC,UAAS,wCACvBD,EAAKhS,OAAM,6BAK3B,IAAMxoC,EAAMowD,EAAY9yD,OACxB,GAAI0C,EAAM,EACR,MAAM,IAAI5C,MAAM,kDAAkD4C,GAGpE,IAAMyhE,EAAerR,EAAYpwD,EAAM,GACjC0hE,EAActR,EAAYpwD,EAAM,GAEhC+wD,EAAazL,EAAO,GAAG/lD,KAC7B,GAAIS,IAAQ+wD,EAAWzzD,OACrB,MAAM,IAAIF,MAAM,uCAAuC2zD,EAAWzzD,OAAM,aAAa0C,GAEvF,IAAM2hE,EAAc5Q,EAAW/wD,EAAM,GAC/B4hE,EAAa7Q,EAAW/wD,EAAM,GAE9B6hE,EAAel9C,EAAO3kB,EAAM,GAC5B8hE,EAAcn9C,EAAO3kB,EAAM,GAE7B+hE,EAAqB,GAEzB,GAAwB,WAApBhjD,EAAW2F,KAEb,MAAM,IAAItnB,MAAM,2CAA2C2hB,EAAW2F,KAAI,KAE5E,OAAQ3F,EAAWyiD,yBACjB,IAAK,aACHO,EAAqB,mKAKrB,MACF,IAAK,aACHA,EAAqB,iLAKrB,MACF,IAAK,gBACHA,EAAqB,8GAEeL,EAAW,aAAaD,EAAY,aAAaC,EAAW,0CAC5ED,EAAY,4DACKG,EAAU,aAAaD,EAAW,aAAaC,EAAU,0CAC1ED,EAAW,8KAK/B,MACF,QAEE,MAAM,IAAIvkE,MAAM,8FACS2hB,EAAWyiD,wBAAuB,KAG/D,IAAM9G,EAAiB,EAAA7e,kBAAkB77C,GAEnCoiD,EAAe,2CACauf,EAAW,OAAOC,EAAU,iDAC1BC,EAAY,OAAOC,EAAW,OAAOD,EAAY,OAAOC,EAAW,qBAHjF,EAAAzQ,oBAID,iBACb0Q,EAAkB,gMAKdrH,EAAc,s8BAiBW+G,EAAe,GAAC,gDAChBC,EAAc,GAAC,srEAsCxClnB,EAAKhS,OAAM,8CAGvB,OAAO,EAAP,KACK24B,GAAqB,CACxB34B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAYC,QAC3ElE,SAAS,EACTD,aAAY,KAKdkf,EAAgB,SAAChc,EAAkBvmC,GACvC,IAIIijD,EAHE/H,EADI3U,EAAO,GACD/lD,KAEZolB,EAAS5F,EAAW4F,OAExB,GAAsB,IAAlBA,EAAOrnB,OAAc,CACvB,IAAM2kE,EAAe3c,EAAOvmC,EAAWmjD,gBACvC,GAAID,GAAsC,IAAtBA,EAAaliE,KAAY,CAC3C,GAAIulD,EAAOvmC,EAAWojD,eACpB,MAAM,IAAI/kE,MAAM,0DAElBunB,EAASy9C,EAAgBH,EAAcljD,EAAW2F,KAAM3F,EAAWsjD,cAC9D,CACL,IAAMC,EAAchd,EAAOvmC,EAAWojD,eACtC,IAAKG,GAAoC,IAArBA,EAAYviE,KAC9B,MAAM,IAAI3C,MAAM,qDAGlB4kE,EAAcxiE,MAAMtB,KAAKokE,EAAYpB,aACrCv8C,EAAS49C,EAA8BP,EAAa/H,EAAOl7C,EAAW2F,KAAM3F,EAAWsjD,gBAGzF,GAAI/c,EAAOvmC,EAAWojD,eACpB,MAAM,IAAI/kE,MAAM,0DAIpB,IAAMolE,EAAQR,GAAgB/H,EAAMh4D,KAAI,SAACjC,EAAK3C,GAAM,OAAA+W,KAAK6c,MAAMjxB,EAAM2kB,EAAOtnB,OAE5E,MAAO,CAACsnB,EAAQ69C,IAGZJ,EAAkB,SAAClgD,EAAewC,EAAc29C,GACpD,IAAM19C,EAASnlB,MAAMtB,KAAKgkB,EAAM0nB,WAEhC,OADA,EAAA64B,iBAAiB99C,EAAQD,EAAM29C,GACxB19C,GAGH49C,EACF,SAACC,EAA0BvI,EAA0Bv1C,EAAc29C,GAIjE,IAHA,IAAM/kE,EAAS28D,EAAM38D,OACfqnB,EAAS,IAAInlB,MAAclC,GAExBD,EAAI,EAAG4xB,EAAM3xB,EAAQD,EAAI4xB,EAAK5xB,IACrC,GAAiB,IAAb48D,EAAM58D,GAAU,CAClB,GAAiB,IAAbmlE,EAAMnlE,GACR,MAAM,IAAID,MAAM,0DAElBunB,EAAOtnB,GAAK,OAEZsnB,EAAOtnB,GAAKmlE,EAAMnlE,GAAK48D,EAAM58D,GAIjC,OADA,EAAAolE,iBAAiB99C,EAAQD,EAAM29C,GACxB19C,I,kGCtPb,cAGa,EAAA6mB,MAAQ,SAACgjB,EAAyClJ,GAE7D,OADAmJ,EAAenJ,GACR,CAAC,IAAI,EAAArmD,OAAO,CAACqmD,EAAO,GAAG/lD,KAAKjC,QAAS,aAASH,OAAWA,EAAW,IAAIyB,WAAW0mD,EAAO,GAAG/lD,SAGtG,IAAMkvD,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6B,4WCVpB,aAEA,SAEA,UAEA,UAQMslE,EAAuB,CAC3B9lE,KAAM,QACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAA7hD,MACT,SAACqoD,EAAyClJ,EAAkBvmC,GAS1D,OARA0vC,EAAenJ,GAQR,CAPQkJ,EAAiBrtD,IAAI,EAAD,KAE1BuhE,GAAoB,CACvB/c,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAgjE,EAAuBnU,EAAkBlJ,EAAO,GAAIvmC,MAEjEumC,KAIG,EAAAgI,qBAAgE,SAAChoD,GAC5E,IAAMs9D,EAASt9D,EAAKyZ,WAAWu1B,QAAQ,UACjCuuB,EAAOv9D,EAAKyZ,WAAWu1B,QAAQ,QAC/B0rB,EAAO16D,EAAKyZ,WAAWu1B,QAAQ,OAAQ,IAC7C,OAAO,EAAAjB,4BAA4B,CAACuvB,OAAM,EAAEC,KAAI,EAAE7C,KAAI,KAGxD,IAAM2C,EACF,SAACnU,EAAyC3qC,EAAe9E,GAmBvD,IAlBA,IAAMihD,EAAmC,IAA3BjhD,EAAWihD,KAAK1iE,OAAgBumB,EAAMtkB,KAAK4G,MAAM,GAAGlE,KAAI,SAACguB,EAAK5yB,GAAM,OAAAA,KAAK0hB,EAAWihD,KAC5F8C,EAAiB,EAAA3mB,UAAUikB,cAAcJ,EAAMn8C,EAAMtkB,KAAKjC,QAC1DslE,EAAS7jD,EAAW6jD,OAAO3gE,KAAI,SAAC+sB,EAAO3xB,GAC3C,OAAI2xB,EAAQnL,EAAMtkB,KAAKujE,EAAezlE,IAAM,EACnCwmB,EAAMtkB,KAAKujE,EAAezlE,IAE5B,EAAA8+C,UAAU8b,cAAcjpC,EAAOnL,EAAMtkB,KAAKujE,EAAezlE,QAE5DwlE,EAAO9jD,EAAW8jD,KAAK5gE,KAAI,SAACgtB,EAAK5xB,GACrC,OAAI4xB,EAAMpL,EAAMtkB,KAAKujE,EAAezlE,IAAM,EACjCwmB,EAAMtkB,KAAKujE,EAAezlE,IAE5B,EAAA8+C,UAAU8b,cAAchpC,EAAKpL,EAAMtkB,KAAKujE,EAAezlE,QAG1D+yD,EAAcvsC,EAAMtkB,KAAK4G,QAEzB48D,EAAqB,GAClB1lE,EAAI,EAAGA,EAAIylE,EAAexlE,OAAQD,IACzC+yD,EAAY0S,EAAezlE,IAAMwlE,EAAKxlE,GAAKulE,EAAOvlE,GAC9CulE,EAAOvlE,GAAK,GACd0lE,EAASvlE,KAAK,aAAaslE,EAAezlE,GAAE,QAAQulE,EAAOvlE,GAAE,KAIjE,IACM+kD,EAAe,uCADRgO,EAAY9yD,OAES,iBAC9BylE,EAASngE,KAAK,YAAW,2CAG7B,OAAO,EAAP,KACK8/D,GAAoB,CACvBl6B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACvE5F,aAAY,KAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,2BAElB,IAA8C,IAA1C,EAAAg7D,aAAar6D,QAAQunD,EAAO,GAAGjmD,MACjC,MAAM,IAAIjC,MAAM,wBAIP,EAAAiwD,SAAW,SAACmB,EAAyClJ,GAChE0d,EAAkB1d,GAClB,IAAMvmC,EAAakkD,EAAkCzU,EAAkBlJ,GAQvE,MAAO,CAPQkJ,EAAiBrtD,IAAI,EAAD,KAE1BuhE,GAAoB,CACvB/c,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAgjE,EAAuBnU,EAAkBlJ,EAAO,GAAIvmC,MAEjE,CAACumC,EAAO,OAId,IAAM2d,EACF,SAACzU,EAAyClJ,GACxC,IAAKkJ,EAAiBxc,QAAQkX,cAAc5D,EAAO,GAAGmB,UACjD+H,EAAiBxc,QAAQkX,cAAc5D,EAAO,GAAGmB,SACjDnB,EAAOhoD,QAAU,IAAMkxD,EAAiBxc,QAAQkX,cAAc5D,EAAO,GAAGmB,SACxEnB,EAAOhoD,QAAU,IAAMkxD,EAAiBxc,QAAQkX,cAAc5D,EAAO,GAAGmB,QAC3E,MAAM,IAAIrpD,MAAM,4CAGlB,GAAIkoD,EAAOhoD,QAAU,GAAKgoD,EAAO,GAAG4b,YAAYgC,MAAK,SAAC7lE,GAAc,OAAM,IAANA,KAClE,MAAM,IAAID,MAAM,oDAGlB,IAAMwlE,EAASpjE,MAAMtB,KAAKonD,EAAO,GAAG4b,aAC9B2B,EAAOrjE,MAAMtB,KAAKonD,EAAO,GAAG4b,aAC5BlB,EAAO1a,EAAOhoD,QAAU,EAAIkC,MAAMtB,KAAKonD,EAAO,GAAG4b,aAAe,GAEtE,MAAO,CAAC0B,OAAM,EAAEC,KAAI,EAAE7C,KAAI,EAAEtR,SADRsR,EAAI,IAAI4C,EAAM,IAAIC,IAItCG,EAAoB,SAAC1d,GACzB,IAAKA,GAAUA,EAAOhoD,OAAS,GAAKgoD,EAAOhoD,OAAS,EAClD,MAAM,IAAIF,MAAM,yBAElB,GAAuB,UAAnBkoD,EAAO,GAAGjmD,MAA8C,IAA1BimD,EAAO,GAAG/lD,KAAKjC,OAC/C,MAAM,IAAIF,MAAM,uBAElB,GAAuB,UAAnBkoD,EAAO,GAAGjmD,MAA8C,IAA1BimD,EAAO,GAAG/lD,KAAKjC,OAC/C,MAAM,IAAIF,MAAM,uBAElB,GAAIkoD,EAAOhoD,QAAU,IAAyB,UAAnBgoD,EAAO,GAAGjmD,MAA8C,IAA1BimD,EAAO,GAAG/lD,KAAKjC,QACtE,MAAM,IAAIF,MAAM,uBAElB,GAAIkoD,EAAOhoD,QAAU,IAAyB,UAAnBgoD,EAAO,GAAGjmD,MAA8C,IAA1BimD,EAAO,GAAG/lD,KAAKjC,QACtE,MAAM,IAAIF,MAAM,yB,kpBCxIpB,aAIA,UACA,UAEA,UAMM+lE,EAAmC,CACvCvmE,KAAM,oBACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGrBob,EAAqC,CACzCxmE,KAAM,sBACNqE,WAAY,CAAC,IAAK,OAClBskD,WAAY,CAAC,EAAAe,YAAY0B,SAAU,EAAA1B,YAAY0B,WAG3Cqb,EAAyB,CAC7BzmE,KAAM,UACNqE,WAAY,CAAC,IAAK,MAAO,QACzBskD,WAAY,CAAC,EAAAe,YAAY0B,SAAU,EAAA1B,YAAY0B,SAAU,EAAA1B,YAAY0B,WAG1D,EAAAuF,QACT,SAACiB,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GAEf,IAAMyL,EAAazL,EAAO,GAAG/lD,KAAK4G,QAC5Bic,EAAO,EAAA+5B,UAAU8b,cAAcl5C,EAAWqD,KAAM2uC,EAAWzzD,QAC3D4L,EAAI,EAAAizC,UAAUmnB,gBAAgBvS,EAAY3uC,GAC1C3Z,EAAI,EAAA0zC,UAAUonB,kBAAkBxS,EAAY3uC,GAE5CohD,EAAwBC,EAA4BjV,EAAkBlJ,EAAO,GAAIp8C,EAAGT,EAAG,CAACS,IACxFkR,EAAMo0C,EAAiBrtD,IAAI,EAAD,KACxBgiE,GAAgC,CAAExd,UAAW5mC,EAAW2vC,SAAU/uD,IAAK,WAAM,OAAA6jE,KACjFle,GAEEoe,EACFC,EAA6BnV,EAAkBlJ,EAAO,GAAIp8C,EAAGT,EAAG+6D,EAAsBh7B,OAAOjpC,KAAM,CAAC2J,IAClGgZ,EAAQssC,EAAiBrtD,IAAI,EAAD,KAC1BiiE,GAAkC,CAAEzd,UAAW5mC,EAAW2vC,SAAU/uD,IAAK,WAAM,OAAA+jE,KACnF,CAACpe,EAAO,GAAIlrC,IAEVwpD,EAAqBC,EACvBrV,EAAkBlJ,EAAO,GAAIp8C,EAAGT,EAAG+6D,EAAsBh7B,OAAOjpC,KAAMmkE,EAAwBl7B,OAAOjpC,MAIzG,MAAO,CAHQivD,EAAiBrtD,IAAI,EAAD,KAC3BkiE,GAAsB,CAAE1d,UAAW5mC,EAAW2vC,SAAU/uD,IAAK,WAAM,OAAAikE,KACvE,CAACte,EAAO,GAAIlrC,EAAK8H,MAId,EAAAsrC,uBACT,SAACloD,GAAwC,SAAA+tC,4BAA4B,CAACjxB,KAAM9c,EAAKyZ,WAAWm1B,OAAO,OAAQ,MAK/G,IAAMuvB,EAEF,SAACjV,EAAyC3qC,EAAe3a,EAAWT,EAAW2nD,GAEnE,QACF5B,EAAiBvJ,+BAA+BphC,EAAMtkB,KAAM,EAAA+mD,YAAY0B,UAAS,GAD9EsS,EAAY,KAAEC,EAAa,KAE5BngB,EAAOgW,EAAY9yD,OAEzB,GAAI4L,EAAI,GAAKT,EAAI,EACf,MAAM,IAAIrL,MAAM,8EAGlB,GAA2B,IAAvBgzD,EAAY9yD,OACd,MAAM,IAAIF,MAAM,4CAGlB,GAAIgzD,EAAY,KAAOlnD,EACrB,MAAM,IAAI9L,MAAM,4DAGlB,IAAMo9C,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1DojC,EAAe,6BACLhI,EAAI,qEACwB3xC,EAAC,4CAEjB+xC,EAAKC,UAAS,gDAAgD6f,EAAY,cACtGC,EAAa,iCACE9xD,EAAC,gEAEkB+xC,EAAKC,UAAS,iEAC5C6f,EAAY,KAAKC,EAAa,yGAOlC,OAAO,EAAP,KACK4I,GAAgC,CACnC36B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACvE5F,aAAY,KAOlBuhB,EAEF,SAACnV,EAAyC3qC,EAAe3a,EAAWT,EACnEq7D,EAA4C1T,GACrC,QACF5B,EAAiBvJ,+BAA+BphC,EAAMtkB,KAAM,EAAA+mD,YAAY0B,UAAS,GAD9EsS,EAAY,KAAEC,EAAa,KAE5BngB,EAAOgW,EAAY9yD,OAEzB,GAAI4L,EAAI,GAAKT,EAAI,EACf,MAAM,IAAIrL,MAAM,8EAGlB,GAA2B,IAAvBgzD,EAAY9yD,OACd,MAAM,IAAIF,MAAM,4CAGlB,GAAIgzD,EAAY,KAAOlnD,EACrB,MAAM,IAAI9L,MAAM,4DAGlB,GAAuC,IAAnC0mE,EAAwBxmE,OAC1B,MAAM,IAAIF,MAAM,0DAGlB,GAAI0mE,EAAwB,KAAO56D,EACjC,MAAM,IAAI9L,MAAM,0EAGlB,IACMglD,EAAe,6BACDhI,EAAI,qEACwB3xC,EAAC,qGAI9BA,EAAC,mEAPP,EAAAywC,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SASlBy7B,UAAS,iEAC/C6f,EAAY,KAAKC,EAAa,iEAKtC,OAAO,EAAP,KACK6I,GAAkC,CACrC56B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACvE5F,aAAY,KAIdyhB,EAEF,SAACrV,EAAyC3qC,EAAe3a,EAAWT,EACnEq7D,EAA4CC,GACrC,QACFvV,EAAiBvJ,+BAA+BphC,EAAMtkB,KAAM,EAAA+mD,YAAY0B,UAAS,GAD9EsS,EAAY,KAAEC,EAAa,KAE5BngB,EAAOv2B,EAAMtkB,KAAKjC,OAExB,GAAI4L,EAAI,GAAKT,EAAI,EACf,MAAM,IAAIrL,MAAM,8EAGlB,GAAuC,IAAnC0mE,EAAwBxmE,QAAsD,IAAtCymE,EAA2BzmE,OACrE,MAAM,IAAIF,MAAM,0DAGlB,GAAI0mE,EAAwB,KAAO56D,GAAK66D,EAA2B,KAAO76D,EACxE,MAAM,IAAI9L,MAAM,0EAGlB,IAAMglD,EAAe,6BACDhI,EAAI,kKAGiBkgB,EAAY,KAAKC,EAAa,kIAIrC9xD,EAAC,sTAYnC,OAAO,EAAP,KACK46D,GAAsB,CACzB76B,OAAQ,CAACjpC,KAAMskB,EAAMtkB,KAAMF,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACtE5F,aAAY,KAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAGlB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,wB,8oBCvNpB,aAIA,UAEA,UAQM4mE,EAAuB,CAC3BpnE,KAAM,QACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAA9wC,MACT,SAACs3C,EAAyClJ,EAAkBvmC,GAC1D0vC,EAAenJ,GAKf,IAHA,IAAMljC,EAAO,EAAA+5B,UAAU8b,cAAcl5C,EAAWqD,KAAMkjC,EAAO,GAAG/lD,KAAKjC,QAC/Dy/B,EAAQknC,EAAgBzV,EAAkBlJ,EAAQljC,EAAMrD,GACxDypB,EAAmB,G,WAChBnrC,GACPmrC,EAAOhrC,KAAKgxD,EAAiBrtD,IAAI,EAAD,KAEvB6iE,GAAoB,CACvBre,UAAc5mC,EAAW2vC,SAAQ,IAAIrxD,EACrCsC,IAAK,WAAM,OAAAukE,EAAuB1V,EAAkBlJ,EAAO,GAAIvmC,EAAYqD,EAAM/kB,MAEnFioD,KAPGjoD,EAAI,EAAGA,EAAI0/B,IAAS1/B,E,EAApBA,GAUT,OAAOmrC,GAGA,EAAAilB,qBAAgE,SAACnoD,GAC5E,IAAM8c,EAAO9c,EAAKyZ,WAAWm1B,OAAO,OAAQ,GACtCh9B,EAAQ5R,EAAKyZ,WAAWu1B,QAAQ,QAAS,IACzC6vB,EAAa7+D,EAAK8+D,QAAQ9mE,OAChC,OAAO,EAAA+1C,4BAA4B,CAACjxB,KAAI,EAAElL,MAAK,EAAEitD,WAAU,KAG7D,IAAMF,EACF,SAACzV,EAAyClJ,EAAkBljC,EAAcrD,GAExE,OADM,EAAc,EAAAslD,UAAUC,WAAWhf,EAAO,GAAG/lD,KAAM6iB,EAAMrD,EAAW7H,MAAO6H,EAAWolD,YAAW,GAAvF,GACD7mE,QAGf4mE,EACF,SAAC1V,EAAyC3qC,EAAe9E,EAA6BqD,EAAcmM,GAExF,QAAoB,EAAA81C,UAAUC,WAAWzgD,EAAMtkB,KAAM6iB,EAAMrD,EAAW7H,MAAO6H,EAAWolD,YAAW,GAAlG7S,EAAM,KACPx8C,EADgB,KACCyZ,GACjB6hC,EAAckB,EAAO/iC,GAErB6zB,EAAe,qCADRgO,EAAY9yD,OAEG,yBACpB8kB,EAAI,QAAQtN,EAAM,gDAI1B,OAAO,EAAP,KACKkvD,GAAoB,CACvBre,UAAc5mC,EAAW2vC,SAAQ,IAAIngC,EACrCia,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACvE5F,aAAY,KAIlBqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAGlB,GAAuB,SAAnBkoD,EAAO,GAAGjmD,MAAsC,UAAnBimD,EAAO,GAAGjmD,MAAuC,UAAnBimD,EAAO,GAAGjmD,MAClD,WAAnBimD,EAAO,GAAGjmD,MAAwC,UAAnBimD,EAAO,GAAGjmD,MAAuC,WAAnBimD,EAAO,GAAGjmD,MACpD,YAAnBimD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,MAAyC,SAAnBimD,EAAO,GAAGjmD,KAC5E,MAAM,IAAIjC,MAAM,yB,6HC/EpB,cAGa,EAAAuwD,QACT,SAACa,EAAyClJ,EAAkB0a,GAC1DvR,EAAenJ,GACf,IAAM8K,EAAc,EAAAjU,UAAUgC,aAAamH,EAAO,GAAG/lD,KAAMygE,GAE3D,MAAO,CADQxR,EAAiB3G,gBAAgBvC,EAAO,GAAI8K,KAIpD,EAAAxC,uBAA2D,SAACtoD,GACrE,OAAAA,EAAKyZ,WAAWu1B,QAAQ,SAE5B,IAAMma,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,6BAGlB,GAAuB,WAAnBkoD,EAAO,GAAGjmD,KACZ,MAAM,IAAIjC,MAAM,iC,wUCtBpB,cAEA,UAEa,EAAAywD,IAAM,SAACW,EAAyClJ,GAC3DmJ,EAAenJ,GAEf,IAAMif,EAAqB,CACzB3nE,KAAM,MACNqE,WAAYqkD,EAAOrjD,KAAI,SAACjB,EAAG3D,GAAM,UAAIA,KACrCkoD,WAAY,IAAI/lD,MAAM8lD,EAAOhoD,QAAQiX,KAAK,EAAA+xC,YAAY0B,WAKxD,MAAO,CAFQwG,EAAiBrtD,IAAI,EAAD,KAC3BojE,GAAkB,CAAE5kE,IAAK,WAAM,OAAA6kE,EAAqBhW,EAAkBlJ,EAAQif,MAAsBjf,KAI9G,IAAMkf,EACF,SAAChW,EAAyClJ,EAAkBif,GAC1D,IAAM/pB,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1DoxC,EAAc9K,EAAO,GAAG/lD,KAAK4G,QAE7Bi8C,EAAe,gDADLkD,EAAOrjD,KAAI,SAACjB,EAAG3D,GAAM,OAAGm9C,EAAKC,UAAS,KAAKp9C,EAAC,iBAAeuF,KAAK,OAGvD,cACrB43C,EAAKhS,OAAM,4BAGf,OAAO,EAAP,KACK+7B,GAAkB,CACrB/7B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E3F,SAAS,EACTD,aAAY,KAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,wBAIlB,IADA,IAAME,EAASgoD,EAAO,GAAG/lD,KAAKjC,OACrBD,EAAI,EAAGA,EAAIioD,EAAOhoD,OAAQD,IAAK,CACtC,GAAIC,IAAWgoD,EAAOjoD,GAAGkC,KAAKjC,OAC5B,MAAM,IAAIF,MAAM,gCAGlB,IAAK,IAAIkG,EAAI,EAAGA,EAAIhG,EAAQgG,IAC1B,GAAIgiD,EAAO,GAAG/lD,KAAK+D,KAAOgiD,EAAOjoD,GAAGkC,KAAK+D,GACvC,MAAM,IAAIlG,MAAM,iCAKtB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,uBAElB,IAASC,EAAI,EAAGA,EAAIioD,EAAOhoD,OAAQD,IACjC,GAAIioD,EAAO,GAAGjmD,OAASimD,EAAOjoD,GAAGgC,KAC/B,MAAM,IAAIjC,MAAM,kC,yUC7DtB,aAGA,UAEa,EAAA4wD,KAAO,SAACQ,EAAyClJ,GAC5DmJ,EAAenJ,GAEf,IAAMmf,EAAsB,CAC1B7nE,KAAM,OACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAM3B,MAAO,CAHQwG,EAAiBrtD,IAAI,EAAD,KAC3BsjE,GAAmB,CAAE9kE,IAAK,WAAM,OAAA+kE,EAAsBlW,EAAkBlJ,EAAQmf,MACpFnf,KAIN,IAAMof,EACF,SAACpkE,EAAgCglD,EAAkBmf,GAKjD,IAJA,IAAM1T,EAAazL,EAAO,GAAG/lD,KAAK4G,QAC5BiqD,EAAc,IAAI5wD,MAAMuxD,EAAWzzD,QAEnCqnE,EAAoB,GACjBtnE,EAAI,EAAGA,EAAI0zD,EAAWzzD,OAAQD,IACrC+yD,EAAY/yD,GAAK0zD,EAAW1zD,GAAKioD,EAAO,GAAGwB,WAAWzpD,GACtDsnE,EAAQnnE,KAAK,YAAYH,EAAC,+BAA+BA,EAAC,OAAO0zD,EAAW1zD,GAAE,QAGhF,IAAM+8C,EAAOgW,EAAY9yD,OACnB8kD,EAAe,uCACShI,EAAI,8BACjBA,EAAI,eACjBuqB,EAAQ/hE,KAAK,MAAK,gDAItB,OAAO,EAAP,KACK6hE,GAAmB,CACtBj8B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,KAIdqM,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,0BAElB,GAA8B,IAA1BkoD,EAAO,GAAG/lD,KAAKjC,OACjB,MAAM,IAAIF,MAAM,4CAElB,GAAIkoD,EAAO,GAAG/lD,KAAK,KAAO+lD,EAAO,GAAG/lD,KAAKjC,OACvC,MAAM,IAAIF,MAAM,wBAElB,IAA8C,IAA1C,EAAAg7D,aAAar6D,QAAQunD,EAAO,GAAGjmD,MACjC,MAAM,IAAIjC,MAAM,uBAElB,GAAuB,UAAnBkoD,EAAO,GAAGjmD,MAAuC,UAAnBimD,EAAO,GAAGjmD,KAC1C,MAAM,IAAIjC,MAAM,0B,kwBC5DpB,aAIA,UAEA,UAMMwnE,EAA2B,CAC/BhoE,KAAM,YACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAA9iC,UACT,SAACspC,EAAyClJ,EAAkBvmC,GAS1D,OARA0vC,EAAenJ,GAQR,CAPQkJ,EAAiBrtD,IAAI,EAAD,KAE1ByjE,GAAwB,CAC3Bjf,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAklE,EAA2BrW,EAAkBlJ,EAAO,GAAIvmC,EAAWu3C,SAEhFhR,KAIG,EAAA2I,yBACT,SAAC3oD,GAA0C,SAAA+tC,4BAA4B,CAACijB,KAAMhxD,EAAKyZ,WAAWu1B,QAAQ,OAAQ,OAElH,IAAMuwB,EACF,SAACrW,EAAyC3qC,EAAeyyC,GACvD,IAAMvF,EAAaltC,EAAMtkB,KACzB+2D,EAAOwO,EAAgB/T,EAAYuF,GACnC,IAAMyO,EAAsBC,EAAejU,EAAYuF,GACjDlc,EAAO2W,EAAWzzD,OAIlB8kD,EAAe,WACnB6iB,EAAoB,OAAQ3O,EAAMlc,GAAK,qCACbA,EAAI,uBACtBA,EAAI,gEAId,OAAO,EAAP,KACKwqB,GAAwB,CAC3Bp8B,OAAQ,CAACjpC,KAAMwlE,EAAqB1lE,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC/E5F,aAAY,KAId0iB,EAAkB,SAAC/T,EAA+BuF,GAItD,OAHIA,GAAQA,EAAKh5D,SAAWyzD,EAAWzzD,SACrCg5D,EAAO,OAAKvF,EAAW99B,SAASyrB,WAE3B4X,GAGH0O,EAAiB,SAACjU,EAA+BuF,GAErD,OADAA,EAAOwO,EAAgB/T,EAAYuF,GAC5B,EAAAna,UAAU+oB,gBAAgBnU,EAAYuF,IAGzC2O,EAAsB,SAACroE,EAAc05D,EAAgBlc,GACzD,IAAM+qB,EAAc,GACpBA,EAAY3nE,KAAK,QAAQZ,EAAI,cAAcw9C,EAAI,cAAcA,EAAI,QACjE,IAAK,IAAI/8C,EAAI,EAAGA,EAAI+8C,IAAQ/8C,EAC1B8nE,EAAY3nE,KAAK,OAAO84D,EAAKj5D,GAAE,SAASA,EAAC,MAG3C,OADA8nE,EAAY3nE,KAAK,OACV2nE,EAAYviE,KAAK,OAGpB6rD,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,+BAGlB,GAAuB,YAAnBkoD,EAAO,GAAGjmD,MAAyC,YAAnBimD,EAAO,GAAGjmD,KAC5C,MAAM,IAAIjC,MAAM,kC,0GCrFpB,cAEA,UAEa,EAAAosD,cAAgB,SAACgF,EAAyC3qC,GACrE,IAAMusC,EAAcvsC,EAAM2nB,MACpBgP,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAI1DojC,EAAe,0oCA6CD5H,EAAKC,UAAS,2BAC5BD,EAAKhS,OAAM,kCAEXkS,EAAc,CAClB99C,KAAM,cACN2oD,WAAY,CAAC,EAAAe,YAAY0B,UACzB/mD,WAAY,CAAC,KACbunC,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMwkB,EAAMwiC,OAAOhnD,KAAM6lD,YAAa,EAAAoB,YAAY8e,sBAC9EhjB,aAAY,EACZC,SAAS,GAEX,OAAOmM,EAAiBpJ,eAAe1K,EAAa,CAAC72B,EAAMwiC,W,0wBClE7D,aAGA,UACA,UAEA,UAEA,SAAgBgf,IACd,OAAOC,EAAiB,OAE1B,SAAgBC,IACd,OAAOD,EAAiB,QAE1B,SAAgBE,IACd,OAAOF,EAAiB,QAE1B,SAAgBG,IACd,OAAOH,EAAiB,QAE1B,SAAgBI,IACd,OAAOJ,EAAiB,QAE1B,SAAgBK,IACd,OAAOL,EAAiB,OAE1B,SAAgBM,EAAQruD,GAYtB,MAAO,CAAC0nC,KAVK,iCACe1nC,EADf,qLAUC3a,KAXD,MAWOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgB4W,IACd,OAAOP,EAAiB,OAE1B,SAAgBQ,IACd,OAAOR,EAAiB,SAE1B,SAAgB5N,EAASj6C,EAAarD,GAapC,MAAO,CAAC6kC,KAXK,+BACaxhC,EAAG,iCACHrD,EAFb,uIAWCxd,KAZD,OAYOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgB8W,IAUd,MAAO,CAAC9mB,KARK,2GAQCriD,KATD,YASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgB+W,EAAczuD,GAC5B,IAAM3a,EAAO,YAWb,MAAO,CAACqiD,KAVK,iCACe1nC,EAAK,iBAEzB3a,EAAI,kEAGLA,EAAI,gCACKA,EAAI,WAAWA,EAAI,WAAWA,EAAI,WAAWA,EAAI,oBAGnDA,KAAI,EAAEyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBgX,IACd,OAAOX,EAAiB,OAE1B,SAAgBY,IAUd,MAAO,CAACjnB,KARK,iGAQCriD,KATD,MASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBkX,IAgBd,MAAO,CAAClnB,KAdK,wRAcCriD,KAfD,MAeOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBmX,IACd,OAAOd,EAAiB,OAE1B,SAAgB9N,IAUd,MAAO,CAACvY,KARK,yHAQCriD,KATD,OASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBwI,IAUd,MAAO,CAACxY,KARK,+IAQCriD,KATD,UASOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAAgBoX,IACd,OAAOf,EAAiB,QAE1B,SAAgBgB,IACd,OAAOhB,EAAiB,OAE1B,SAAgBiB,IAcd,MAAO,CAACtnB,KAZK,yOAYCriD,KAbD,OAaOyC,KAAM,EAAAkgD,aAAa0P,YAEzC,SAASqW,EAAiB1oE,GASxB,MAAO,CAACqiD,KARK,aACLriD,EAAI,4BACDA,EAAI,qBAERA,EAAI,2BACAA,EAAI,gBAGDA,KAAI,EAAEyC,KAAM,EAAAkgD,aAAa0P,YA1KzC,YAGA,aAGA,aAGA,aAGA,aAGA,YAGA,YAcA,YAGA,cAGA,aAeA,iBAYA,kBAcA,YAGA,YAYA,YAkBA,YAGA,aAYA,gBAYA,aAGA,YAGA,aAgCA,IAoBMuX,EACF,SAAClmE,EAAgCujB,EAAeksC,EAA6BrB,GAEvE,IAAMxJ,EAAc5kD,EAAQ0xC,QAAQgF,KAAO,EAAAsP,YAAYC,OAAS,EAAAD,YAAY0B,SACtE8I,EAAW,CAACl0D,KAAMmzD,EAASnzD,KAAM2oD,WAAY,CAACL,GAAcjkD,WAAY,CAAC,KAAM0kD,UAAW+I,GAChG,OAAO,EAAP,KAAWoC,GAAQ,CAAEnxD,IAAK,WAAM,OAxBtC,SAACW,EAAgCwwD,EAA2BjtC,EAAeksC,GAErE,IAAM7K,EAAc5kD,EAAQ0xC,QAAQgF,KAAO,EAAAsP,YAAYC,OAAS,EAAAD,YAAY0B,SACtExN,EAAO,EAAAtB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SACvD,OAAO,EAAP,KACK8xC,GAAQ,CACXtoB,OAAQ,CAACjpC,KAAMskB,EAAMtkB,KAAMF,KAAMwkB,EAAMxkB,KAAM6lD,YAAW,GACxD9C,aAAc,UACnB2N,EAAS9Q,KAAI,yCAEFzE,EAAKC,UAAS,+BACnBsV,EAASnzD,KAAI,iBACjB49C,EAAKhS,OAAM,uBAGR6Z,SAAS,IASqBokB,CAA6BnmE,EAASwwD,EAAUjtC,EAAOksC,OAGpF,EAAA5zC,IAAM,SAAC7b,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI+f,KAAY/f,KAEnF,EAAAwE,KAAO,SAACxpD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIigB,KAAajgB,KAEpF,EAAA0E,KAAO,SAAC1pD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIkgB,KAAalgB,KAEpF,EAAA2E,KAAO,SAAC3pD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAImgB,KAAangB,KAOpF,EAAA+E,KACT,SAAC/pD,EAAgCglD,EAAkBvmC,GAAyC,OAACze,EAAQa,IACjGqlE,EACIlmE,EAASglD,EAAO,GAAIoS,EAAS34C,EAAWtB,IAAKsB,EAAW3E,KAAM2E,EAAW2vC,UAC7EpJ,KAEK,EAAAgF,oBAAsB,SAAChlD,GAAqC,SAAA+tC,4BAA4B,CACnG51B,IAAKnY,EAAKyZ,WAAWk1B,SAAS,OAAQ,sBACtC75B,IAAK9U,EAAKyZ,WAAWk1B,SAAS,MAAO,yBAG1B,EAAA5/B,KAAO,SAAC/T,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIogB,KAAapgB,KAEpF,EAAAoF,IAAM,SAACpqD,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIqgB,KAAYrgB,KAMnF,EAAAyF,IACT,SAACzqD,EAAgCglD,EAAkBvmC,GAAwC,OAACze,EAAQa,IAChGqlE,EAAmClmE,EAASglD,EAAO,GAAIsgB,EAAQ7mD,EAAWxH,OAAQwH,EAAW2vC,UAC7FpJ,KAEK,EAAA0F,mBAAqB,SAAC1lD,GAC/B,SAAA+tC,4BAA4B,CAAC97B,MAAOjS,EAAKyZ,WAAWk1B,SAAS,QAAS,MAE7D,EAAAgX,IAAM,SAAC3qD,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIugB,KAAYvgB,KAEnF,EAAAr0B,MAAQ,SAAC3wB,EAAgCglD,GACtC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIwgB,KAAcxgB,KAErF,EAAAqF,SAAW,SAACrqD,EAAgCglD,GACzC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIygB,KAAiBzgB,KAMxF,EAAAvhC,UACT,SAACzjB,EAAgCglD,EAAkBvmC,GAA8C,OAACze,EAAQa,IACtGqlE,EAAmClmE,EAASglD,EAAO,GAAI0gB,EAAcjnD,EAAWxH,OAAQwH,EAAW2vC,UACnGpJ,KAEK,EAAA0G,yBAA2B,SAAC1mD,GACrC,SAAA+tC,4BAA4B,CAAC97B,MAAOjS,EAAKyZ,WAAWk1B,SAAS,QAAS,QAE7D,EAAAhsC,IAAM,SAAC3H,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI2gB,KAAY3gB,KAEnF,EAAA/mB,IAAM,SAACj+B,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI4gB,KAAY5gB,KAEnF,EAAAzjB,IAAM,SAACvhC,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI6gB,KAAY7gB,KAEnF,EAAA/gC,KAAO,SAACjkB,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIkS,KAAalS,KAEpF,EAAA6H,QAAU,SAAC7sD,EAAgCglD,GACxC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAImS,KAAgBnS,KAEvF,EAAA8H,IAAM,SAAC9sD,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI8gB,KAAY9gB,KAEnF,EAAAoI,KAAO,SAACptD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAI+gB,KAAa/gB,KAEpF,EAAAwI,IAAM,SAACxtD,EAAgCglD,GACpC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIghB,KAAYhhB,KAEnF,EAAAyI,KAAO,SAACztD,EAAgCglD,GACrC,OAAChlD,EAAQa,IAAIqlE,EAAmClmE,EAASglD,EAAO,GAAIihB,KAAajhB,M,4XChTjG,cAEA,UACA,UACA,UAEMohB,EAAwB,CAC5B9pE,KAAM,SACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAYC,SAGd,EAAAogB,wBAA0B,SAACrmE,EAAgCujB,GACtE,IAAMu2B,EAAOv2B,EAAMtkB,KAAKjC,OAElB4qD,EAAW,EAAAgJ,YAAY,KAAM9W,GAC7BwsB,EAAY1e,EAAS/hD,OAAO,GAC5Bu0D,EAAiB,EAAA7e,kBAAkBzB,GACnCgX,EAAgB,EAAAC,oBAEhBwV,EADkC,IAAtBhjD,EAAMtkB,KAAKjC,OACG,GA0BlC,SAAyB88C,EAAc76C,GACrC,GAAa,IAAT66C,EACF,MAAO,KAIT,IADA,IAAID,EAAS,GACJ98C,EAAI,EAAGA,EAAI+8C,EAAM/8C,IACxB88C,GAAU56C,EAAKlC,GACXA,EAAI+8C,EAAO,IACbD,GAAU,KAGd,OAAOA,EAtC8B2sB,CAAgB1sB,EAAM8N,GACrD/N,EAASC,GAAQ,EAAI,KAAO,QAAQwsB,EAAUhkE,KAAK,KAAI,IAEvDw/C,EAAe,SACjBgP,EAAa,8BAEXsJ,EAAc,2IAGWmM,EAAY,gBAP9B,EAAA3tB,QAAQ54C,EAAQ0xC,QAAQn1C,QAAQo6C,UAAUj4B,SAS3CwpB,OAAM,mCAAmC2R,EAAM,4BAI3D,OAAO,EAAP,KACKusB,GAAqB,CACxBrkB,SAAS,EACT7Z,OAAQ,CAACjpC,KAAMskB,EAAMtkB,KAAMF,KAAMwkB,EAAMxkB,KAAM6lD,YAAa,EAAAoB,YAAY0B,UACtE5F,aAAY,KAIH,EAAAsH,8BAAgC,SAACppD,EAAgCujB,GAC1E,cAAK6iD,GAAqB,CAAE/mE,IAAK,WAAM,SAAAgnE,wBAAwBrmE,EAASujB,Q,iIC1C5E,cAGa,EAAAwqC,UACT,SAACG,EAAyClJ,EAAkB0a,GAC1DvR,EAAenJ,GACf,IAAM8K,EAAc,EAAAjU,UAAU4qB,eAAezhB,EAAO,GAAG/lD,KAAMygE,GAE7D,MAAO,CADQxR,EAAiB3G,gBAAgBvC,EAAO,GAAI8K,KAIpD,EAAA9B,yBAA6D,SAAChpD,GACvE,OAAAA,EAAKyZ,WAAWu1B,QAAQ,SAE5B,IAAMma,EAAiB,SAACnJ,GACtB,IAAKA,GAA4B,IAAlBA,EAAOhoD,OACpB,MAAM,IAAIF,MAAM,+BAGlB,GAAuB,WAAnBkoD,EAAO,GAAGjmD,KACZ,MAAM,IAAIjC,MAAM,iC,ijCCvBpB,aAIA,UAEA,UAoBM4pE,EAA0B,CAC9BpqE,KAAM,WACNqE,WAAY,CAAC,KACbskD,WAAY,CAAC,EAAAe,YAAY0B,WAGd,EAAAkG,SACT,SAACM,EAAyClJ,EAAkBvmC,GAS1D,OARA,EAAA0vC,eAAenJ,EAAQvmC,GAQhB,CAPQyvC,EAAiBrtD,IAAI,EAAD,KAE1B6lE,GAAuB,CAC1BrhB,UAAW5mC,EAAW2vC,SACtB/uD,IAAK,WAAM,OAAAsnE,EAA0BzY,EAAkBlJ,EAAQvmC,MAEjEumC,KAIG,EAAA6I,0BACT,SAAC7oD,GAAyC,SAAA+7D,wBAAwB/7D,EAAM,IAE/D,EAAA8oD,0BACT,SAAC9oD,GAAyC,SAAA+7D,wBAAwB/7D,EAAM,IAE/D,EAAA+7D,wBAA0B,SAAC/7D,EAAkB4hE,GACxD,IAAM7E,EAAY6E,GAAS,GAGrBxiD,EAAOpf,EAAKyZ,WAAWo1B,UAAU,OAAQ,WAC/C,GAAa,YAATzvB,GAA+B,WAATA,IAAsBwiD,EAAQ,IAAe,UAATxiD,GAC5D,MAAM,IAAItnB,MAAM,sBAAsBsnB,GAGxC,IAAIC,EAAmB,GACnBuiD,EAAQ,IACVviD,EAASrf,EAAKyZ,WAAWs1B,UAAU,UACnC,EAAAouB,iBAAiB99C,EAAQD,EAAM29C,IAGjC,IAAM8E,EAAqB7hE,EAAKyZ,WAAWk1B,SAAS,sBAAuB,GAErEutB,EACF0F,EAAQ,GAAK5hE,EAAKyZ,WAAWo1B,UAAU,iCAAkC,cAAgB,aAC7F,IAE4C,IAFxC,CACE,aAAc,qBAAsB,uBAAwB,gBAAiB,qBAAsB,cACnGp2C,QAAQyjE,GACZ,MAAM,IAAIpkE,MAAM,8BAA8BokE,EAAuB,sBAEvE,IAAM4F,EAA4C,uBAA5B5F,EAChB6F,EAAmBD,EAEnBE,EACQ,YAAT5iD,GAAsBwiD,GAAS,GAAM5hE,EAAKyZ,WAAWo1B,UAAU,eAAgB,sBAAwB,GAC5G,IAA+F,IAA3F,CAAC,qBAAsB,oBAAqB,QAAS,OAAQ,IAAIp2C,QAAQupE,GAC3E,MAAM,IAAIlqE,MAAM,iBAAiBkqE,EAAW,sBAG9C,IAAMC,EAAoBjiE,EAAKyZ,WAAWk1B,SAAS,iBAAkB,KAC/DuzB,EAAkE,IAAjDliE,EAAKyZ,WAAWm1B,OAAO,kBAAmB,GACjE,GAAIszB,GAA2B,UAAT9iD,EACpB,MAAM,IAAItnB,MAAM,4DAGlB,IAAMqqE,EACDP,EAAQ,IAAuB,YAATxiD,GAAkD,eAA5B88C,GAA4D,UAAhB8F,EAEzFI,EAAc,EACdxF,EAAiB,EACjBC,EAAgB,EAUpB,OARI+E,EAAQ,IACVQ,EAAc,EACdxF,EAAiB,EACjBC,EAAgB,GACG,IAAV+E,IACThF,EAAiB,GAGZ,EAAA7uB,4BAA4B,CACjC6zB,MAAK,EACL7E,SAAQ,EACR39C,KAAI,EACJC,OAAM,EACNwiD,mBAAkB,EAClB3F,wBAAuB,EACvB6F,iBAAgB,EAChBD,aAAY,EACZE,YAAW,EACXC,kBAAiB,EACjBC,eAAc,EACdC,yBAAwB,EACxBC,YAAW,EACXxF,eAAc,EACdC,cAAa,KAIjB,IAAM8E,EACF,SAACzY,EAAyClJ,EAAkBvmC,GAgB1D,IAfA,IAAMy7B,EAAO,EAAAtB,QAAQsV,EAAiBxc,QAAQn1C,QAAQo6C,UAAUj4B,SAC1D,IACFwvC,EAAiBvJ,+BAA+BK,EAAO,GAAG/lD,KAAM,EAAA+mD,YAAY0B,UAAS,GADlF4Z,EAAU,KAAED,EAAW,KAGxBvR,EAAc9K,EAAO,GAAG/lD,KAAK0C,KAAI,SAACjC,EAAK3C,GAAM,OAAA+W,KAAK6c,MAAMjxB,EAAM+e,EAAW4F,OAAOtnB,OAChF,IACFmxD,EAAiBvJ,+BAA+BmL,EAAa,EAAA9J,YAAY0B,UAAS,GAD/E0Z,EAAW,KAAED,EAAY,KAE1BzhE,EAAMowD,EAAY9yD,OAElBqqE,EAAgB,IAAInoE,MAAcQ,GAClC4nE,EAAe,IAAIpoE,MAAcQ,GACnC6nE,EAAuB,8BACN7nE,EAAG,+BACJA,EAAG,aAEdyE,EAAIzE,EAAM,EAAGyE,GAAK,EAAGA,IAC5BkjE,EAAcljE,GAAMA,IAAMzE,EAAM,EAAK,EAAI2nE,EAAcljE,EAAI,GAAK2rD,EAAY3rD,EAAI,GAChFmjE,EAAanjE,GAAMA,IAAMzE,EAAM,EAAK,EAAI4nE,EAAanjE,EAAI,GAAK6gD,EAAO,GAAG/lD,KAAKkF,EAAI,GAEjFojE,GAAwB,4BACPpjE,EAAC,OAAOkjE,EAAcljE,GAAE,4BACzBA,EAAC,OAAOmjE,EAAanjE,GAAE,cAGzC,IAAMqjE,EAAwB,yFAEUlG,EAAU,KAAKD,EAAW,6CAChCnnB,EAAKC,UAAS,wDAK1C2H,EAAmC,YAApBrjC,EAAW2F,KAE5B,SACJojD,EAAqB,mCACK9nE,EAAG,wFAEkB0hE,EAAW,KAAKD,EAAY,eAEzEoG,EAAoB,sDAGI7nE,EAAG,8YAejB,IAARA,EAEI,SACR8nE,EAAqB,yHAG0BpG,EAAW,KAAKD,EAAY,eAEzEoG,EAAoB,ikCA2BQviB,EAAO,GAAG/lD,KAAK,GAAE,8sBAuBvC,SACRuoE,EAAqB,yHAG0BpG,EAAW,KAAKD,EAAY,eAEzEoG,EAAoB,svBAoBQviB,EAAO,GAAG/lD,KAAK,GAAE,8sBAsB/C,OAAO,EAAP,KACKynE,GAAuB,CAC1Bx+B,OAAQ,CAACjpC,KAAM6wD,EAAa/wD,KAAMimD,EAAO,GAAGjmD,KAAM6lD,YAAa,EAAAoB,YAAY0B,UAC3E5F,aAAY,EACZM,UAAW,CAAC,CACV9lD,KAAM,SACNyC,KAAM,MACN8jD,YAAapkC,EAAW4F,OAAOrnB,OAC/BgC,KAAMyf,EAAW4F,OAAO1iB,KAAI,SAAA4F,GAAK,OAAAuM,KAAKC,KAAKxM,WAKxC,EAAA4mD,eAAiB,SAACnJ,EAAkB7c,GAC/C,IAAK6c,GAAW7c,EAAUy+B,MAAQ,GAAuB,IAAlB5hB,EAAOhoD,QACzCmrC,EAAUy+B,OAAS,GAAKz+B,EAAUy+B,MAAQ,IAAwB,IAAlB5hB,EAAOhoD,QACvDmrC,EAAUy+B,OAAS,IAAwB,IAAlB5hB,EAAOhoD,QAAkC,IAAlBgoD,EAAOhoD,OAC1D,MAAM,IAAIF,MAAM,mBAGlB,GAAIqrC,EAAU9jB,OAAOrnB,OAAS,GAAKgoD,EAAO,GAAG/lD,KAAKjC,SAAWmrC,EAAU9jB,OAAOrnB,OAC5E,MAAM,IAAIF,MAAM,wBAGlB,GAAuB,WAAnBkoD,EAAO,GAAGjmD,KACZ,MAAM,IAAIjC,MAAM,gCAIP,EAAAqlE,iBAAmB,SAAC99C,EAAkBD,EAAc29C,G,YAC/D,GAAKA,E,IAOH,IAAoB,QAAA19C,GAAM,8BACxB,GADc,SACD,EACX,MAAM,IAAIvnB,MAAM,yC,0GARpB,IAAoB,QAAAunB,GAAM,8BACxB,GADc,QACF,EACV,MAAM,IAAIvnB,MAAM,qD,iGAUtB,KAAa,WAATsnB,GAA8B,UAATA,GACD,IAAlBC,EAAOrnB,QAAmC,IAAlBqnB,EAAOrnB,QAA8B,IAAdqnB,EAAO,IAA0B,IAAdA,EAAO,IAC3E,MAAM,IAAIvnB,MAAM,gLAELilE,EAAW,SAAW,YAAU,gB,opBCjVjD,cACA,UAEA,UACA,UAcA,aAKE,WACW0F,EAAqC9wB,EACrC+wB,GADA,KAAAD,WAAqC,KAAA9wB,YACrC,KAAA+wB,wBACTtqE,KAAKuqE,KAAO,IAAI3pE,IAChBZ,KAAKwqE,iBAAkB,EAqJ3B,OAnJE,YAAAniB,YAAA,SAAY1kD,GACV,OAAO3D,KAAKuqE,KAAKtoE,IAAI0B,IAEvB,YAAA8kD,YAAA,SAAY9kD,EAAcwkD,GACxBnoD,KAAKuqE,KAAKjpE,IAAIqC,EAAKwkD,IAErB,YAAA1kD,IAAA,SAAIgnE,EAAyB7iB,EAAuB9c,GAApD,I,EAAA,OACE9qC,KAAKqqE,SAASK,MAAM,KAAM,uBAAoD,QAA9B,EAAAD,EAAcztB,YAAY99C,YAAI,QAAI,mBAAoB,W,MAC9FyrE,EAAK,EAAKpxB,UAAUoxB,GACpBhjB,EAAU8iB,EAAc9iB,QAC9BgjB,EAAGC,WAAWjjB,GACd,IACE,EAAKkjB,WAAW//B,GACX,EAAK0/B,iBACR,EAAKM,eAAeL,EAAcM,iBAEpC,EAAKC,aAAaP,EAAcQ,iBAAqD,QAAnC,EAAAR,EAAcztB,YAAYgI,iBAAS,QAAI,GAAI4C,GAC7F,MAAO3iD,GAEP,MADA,EAAAw0C,OAAOrwC,MAAM,iBAAkBqhE,EAAcztB,YAAY0H,cACnDz/C,EAER,EAAKolE,SAASK,MAAM,UAAW,oBAAoB,WACjD,EAAKnxB,UAAU2xB,YAEhBlrE,KAAKu5C,YAEV,YAAAR,QAAA,sBACM/4C,KAAKmrE,cACPnrE,KAAKu5C,UAAU6xB,aAAaprE,KAAKmrE,cAEnCnrE,KAAKuqE,KAAK5uD,SAAQ,SAAArV,GAAK,SAAKizC,UAAU8xB,cAAc/kE,EAAEqhD,aAExD,YAAA5iC,MAAA,SAAMi4B,EAA0BE,EAAsCxC,GAAtE,WACE,OAAO16C,KAAKqqE,SAASK,MAAM,UAAW,wBAAwB,WAC5D,IAAMY,EAAe,IAAI,EAAA5lB,iBAAiB,EAAKnM,UAAWyD,EAAaE,EAAqBxC,GACtF6wB,EAAaD,EAAa7mB,aAC1BkD,EAAU,EAAK6jB,QAAQD,GAQ7B,MAPiB,CACfvuB,YAAW,EACX2K,QAAO,EACPsjB,iBAAkB,EAAKQ,oBACnB9jB,EAAS2jB,EAAazxB,QAAQmD,YAAYz5C,WAAY+nE,EAAazxB,QAAQmD,YAAYgI,WAC3F+lB,gBAAiB,EAAKW,mBAAmB/jB,QAKrC,YAAA6jB,QAAV,SAAkBG,GAChB,IAAK3rE,KAAKmrE,aAAc,CACtB,EAAA1xB,OAAOE,QAAQ,kBAAmB,0DAClC,IAAMiyB,EAAqB,EAAAC,sBAAsB7rE,KAAKu5C,UAAUj4B,SAChEthB,KAAKmrE,aAAenrE,KAAKu5C,UAAUuyB,cAAcF,EAAoB5rE,KAAKu5C,UAAUoxB,GAAGoB,eAErF,EAAAhsE,IAAIisE,OACN,EAAAvyB,OAAOE,QAAQ,kBAAmB,gBACtCgyB,EAAgB,MAGd,IAAMM,EAAajsE,KAAKu5C,UAAUuyB,cAAcH,EAAkB3rE,KAAKu5C,UAAUoxB,GAAGuB,iBAC9EvkB,EAAU3nD,KAAKu5C,UAAU4yB,cAAcnsE,KAAKmrE,aAAcc,GAEhE,OADAjsE,KAAKu5C,UAAU6xB,aAAaa,GACrBtkB,GAET,YAAAkjB,WAAA,SAAW3zD,GACT,IAAM4B,EAAQ5B,EAAG4B,MACXC,EAAS7B,EAAG6B,OAClB,EAAA0gC,OAAOE,QACH,kBACA,8CAA8C7gC,EAAK,IAAIC,EAAM,WAAW7B,EAAG42B,MAAK,UAAU52B,EAAGyxC,OAAOhnD,MACxG3B,KAAKu5C,UAAU6yB,kBAAkBl1D,EAAG8wC,QAASlvC,EAAOC,IAEtD,YAAA+xD,eAAA,SAAeC,GACb,IAAMsB,EAAiBtB,EAAgBpyC,SACjC2zC,EAAqBvB,EAAgBwB,aAC3CvsE,KAAKu5C,UAAUizB,oBAAoBH,EAAgBC,GACnDtsE,KAAKwqE,iBAAkB,GAEzB,YAAAQ,aAAA,SAAaC,EAA6CjmB,EAA8BynB,G,UAEhF9B,EAAK3qE,KAAKu5C,UAAUoxB,GACtB+B,EAAkB,E,WACV,EAAM/qE,EAAM,EAAU8jD,GAChC,IAAMrlD,EAA4C,QAApC,EAAA4kD,EAAU2nB,MAAK,SAAArpE,GAAK,OAAAA,EAAEpE,OAAS,YAAK,eAAE0C,KACpD,GAAa,cAATD,IAAyBvB,EAC3B,MAAM,IAAIV,MAAM,aAAa,EAAI,gDAEnC,OAAQiC,GACN,IAAK,YACH,EAAKirE,YAAYH,EAASC,GAAkB,EAAUA,GACtDA,IACA,MACF,IAAK,QACCjnB,EACFklB,EAAGkC,WAAW,EAAUzsE,GAExBuqE,EAAGmC,UAAU,EAAU1sE,GAEzB,MACF,IAAK,MACCqlD,EACFklB,EAAGoC,WAAW,EAAU3sE,GAExBuqE,EAAGqC,UAAU,EAAU5sE,GAEzB,MACF,QACE,MAAM,IAAIV,MAAM,4BAA4BiC,K,WAzBlD,IAAkD,QAAAspE,GAAgB,+BAAvD,c,EAAK,OAAM,OAAU,WAAa,gB,mGA6B/C,YAAA2B,YAAA,SAAY11D,EAAiB+1D,EAAqCt0C,GAChE34B,KAAKu5C,UAAU2zB,qBAAqBh2D,EAAG8wC,QAASrvB,EAAUs0C,IAE5D,YAAAvB,mBAAA,SAAmB/jB,GACjB,MAAO,CACLhvB,SAAU34B,KAAKmtE,kBAAkBxlB,EAAS,YAC1C4kB,aAAcvsE,KAAKmtE,kBAAkBxlB,EAAS,kBAGlD,YAAA8jB,oBAAA,SAAoB9jB,EAAuBrC,EAAqBN,G,YAExDimB,EAA8C,GACpD,GAAI3lB,E,IACF,IAAsB,QAAAA,GAAQ,8BAAE,CAA3B,IAAME,EAAO,QAChBylB,EAAiBnrE,KAAK,CAACZ,KAAMsmD,EAAS7jD,KAAM,YAAa0H,SAAUrJ,KAAKotE,mBAAmBzlB,EAASnC,M,iGAGxG,GAAIR,E,IACF,IAAuB,QAAAA,GAAS,8BAAE,CAA7B,IAAMnB,EAAQ,QACjBonB,EAAiBnrE,KAAK,EAAD,KAAK+jD,GAAQ,CAAEx6C,SAAUrJ,KAAKotE,mBAAmBzlB,EAAS9D,EAAS3kD,U,iGAG5F,OAAO+rE,GAET,YAAAmC,mBAAA,SAAmBzlB,EAAuBzoD,GACxC,IACMmuE,EADKrtE,KAAKu5C,UAAUoxB,GACLyC,mBAAmBzlB,EAASzoD,GACjD,GAAkB,OAAdmuE,EACF,MAAM,IAAI3tE,MAAM,WAAWR,EAAI,eAEjC,OAAOmuE,GAET,YAAAF,kBAAA,SAAkBxlB,EAAuBzoD,GAGvC,OAFWc,KAAKu5C,UAAUoxB,GACWwC,kBAAkBxlB,EAASzoD,IAGpE,EA9JA,GAAa,EAAAouE,kB,gHChBb,cAEA,UAKA,UACA,UACA,UACA,UACA,UAGA,aAWE,WAA4BnuE,EAAuC06C,GAAvC,KAAA16C,UAAuC,KAAA06C,UACjE75C,KAAKynD,eAAiB,IAAI,EAAA8lB,sBAAsBpuE,EAAQo6C,UAAUi0B,gBAClExtE,KAAKooD,eAAiB,IAAI,EAAAklB,eAAettE,KAAK65C,QAAQwwB,SAAUlrE,EAAQo6C,UAAWv5C,KAAKynD,gBACxFznD,KAAKgqD,eAAiB,IAAI,EAAAyjB,eACtBtuE,EAAQo6C,UAAWv5C,KAAKynD,eAAgBznD,KAAK65C,QAAQwwB,SACrD,CAACqD,cAA4C,SAA7BvuE,EAAQk6C,mBAC5Br5C,KAAKqnD,uBAAyB,IAAIzmD,IAClCZ,KAAKsnD,yBAA2B,IAAI1mD,IACpCZ,KAAKs5C,KAAOn6C,EAAQm6C,KACpBt5C,KAAK2tE,eAAiB,IAAI/sE,IAC1BZ,KAAK4tE,eAAiB,IAAIhtE,IA2C9B,OAxCE,YAAAitE,uBAAA,WACE,OAAO,IAAI,EAAA5hB,sBAAsBjsD,OAEnC,YAAA8tE,mBAAA,SAAmBriC,GACjB,IAAMsiC,EAAetiC,EAAMuiC,YAAYtqB,QAAO,SAAApgD,GAAK,OAAY,IAAZA,EAAE9C,MAAe8C,EAAEqlD,UAAQpkD,KAAI,SAAAjB,GAAK,OAAAA,EAAEqlD,OAAQI,UACjG/oD,KAAK+tE,aAAe,IAAI3rB,IAAI2rB,IAE9B,YAAAviB,cAAA,SAAcN,GACZ,QAAOlrD,KAAK+tE,cAAe/tE,KAAK+tE,aAAatrB,IAAIyI,IAEnD,YAAA+iB,eAAA,SAAe/iB,GACblrD,KAAK+tE,aAAa3pD,IAAI8mC,IAExB,YAAApC,eAAA,SAAeoC,EAAqBvQ,GAClC,OAAIA,EACK36C,KAAKqnD,uBAAuBplD,IAAIipD,GAEhClrD,KAAKsnD,yBAAyBrlD,IAAIipD,IAG7C,YAAAK,eAAA,SAAeL,EAAqBC,EAA0BxQ,QAAA,IAAAA,OAAA,GAC5D,EAAAlB,OAAOE,QAAQ,sBAAuB,iCAClCgB,EACF36C,KAAKqnD,uBAAuB/lD,IAAI4pD,EAAUC,GAE1CnrD,KAAKsnD,yBAAyBhmD,IAAI4pD,EAAUC,IAGhD,YAAApS,QAAA,sBACE/4C,KAAKooD,eAAerP,UACpB/4C,KAAKgqD,eAAe0B,sBACpB1rD,KAAKqnD,uBAAuB1rC,SAAQ,SAAAzE,GAAM,SAAK8yC,eAAe2B,eAAez0C,GAAI,MACjFlX,KAAKqnD,uBAAyB,IAAIzmD,IAClCZ,KAAKsnD,yBAAyB3rC,SAAQ,SAAAzE,GAAM,SAAK8yC,eAAe2B,eAAez0C,GAAI,MACnFlX,KAAKsnD,yBAA2B,IAAI1mD,KAEtC,YAAA+oB,QAAA,SAAQ/hB,EAAkBsmE,EAA0BziC,GAClD,IAAM0iC,EAAK,EAAAC,gBAAgBxmE,EAAMsmE,EAAQ,EAAAhiB,wBACzC,MAAO,CAACmiB,KAAMF,EAAGG,OAAQz0B,QAASs0B,EAAGI,OAASJ,EAAGI,OAAO3mE,EAAM6jC,GAAS7jC,IAE3E,EAhEA,GAAa,EAAAkyC,uB,4JChBb,cAqCA,aAKE,WAAY6wB,EAA4BngB,GACtC,QADsC,IAAAA,MAAA,GACrB,IAAbA,EACFxqD,KAAKwuE,eAAiB7D,EAAG8D,KACzBzuE,KAAK0uE,OAAS/D,EAAGgE,IACjB3uE,KAAKwnD,YAAcmjB,EAAG3zB,MACtBh3C,KAAKw8D,YAAchS,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAI9qD,MAAM,+BAA+B8qD,GAL/CxqD,KAAKwuE,eAAiB7D,EAAGiE,QACzB5uE,KAAK0uE,OAAS/D,EAAGkE,KACjB7uE,KAAKwnD,YAAcmjB,EAAG3zB,MACtBh3C,KAAKw8D,YAAchS,GAiCzB,OA5BE,YAAAn5B,OAAA,SAAO5rB,EAA4BqpE,GACjC,IAAI/wC,EACAme,EAcJ,OAbIz2C,EAAIrD,cAAgBvB,eACtB,EAAA44C,OAAOG,QAAQ,UAAW,2DAC1BsC,EAAS,IAAIr7C,aAAa4E,IAExBqpE,EAAc9uE,KAAKw8D,YAAc/2D,EAAI7F,QACvC,EAAA65C,OAAOG,QAAQ,UAAW,kDAC1BsC,EAASz2C,EACTs4B,EAAS/9B,KAAK23B,SAASm3C,EAAc9uE,KAAKw8D,aAC1CtgB,EAAOvgC,SAAQ,SAACrY,EAAG3D,GAAM,OAAAo+B,EAAOp+B,GAAK2D,MAGrCy6B,EADAme,EAASz2C,EAGJs4B,GAET,YAAApG,SAAA,SAASt1B,GACP,OAAO,IAAIxB,aAAoB,EAAPwB,IAE1B,YAAAkJ,OAAA,SAAOrH,EAA+B6qE,GACpC,OAAyB,IAArB/uE,KAAKw8D,YACet4D,EAAwBw/C,QAAO,SAACtjD,EAAOywB,GAAU,OAAAA,EAAQ,GAAM,KAAGnlB,SAAS,EAAGqjE,GAG/F7qE,EAAOwH,SAAS,EAAGqjE,IAE9B,EAhDA,GAAa,EAAAC,wBAoDb,iBAKE,WAAYrE,EAA2BngB,EAAchD,GACnD,QADqC,IAAAgD,MAAA,GACpB,IAAbA,GAA+B,IAAbA,EACpB,MAAM,IAAI9qD,MAAM,+BAA+B8qD,GAEjDxqD,KAAKwuE,eAAiB7D,EAAGkE,KACzB7uE,KAAK0uE,OAAS/D,EAAGkE,KACjB7uE,KAAKw8D,YAAchS,EACnBxqD,KAAKwnD,YAAcA,GAAemjB,EAAG3zB,MAqBzC,OAnBE,YAAA3lB,OAAA,SAAO5rB,EAAmBqpE,GACxB,IAAIG,EAAOxpE,EAMX,OALyB,IAArBzF,KAAKw8D,cACP,EAAA/iB,OAAOE,QAAQ,UAAW,iCAC1Bs1B,EAAOjvE,KAAK23B,SAASm3C,GACrBrpE,EAAIkW,SAAQ,SAACrY,EAAG3D,GAAM,OAAAsvE,EAAS,EAAJtvE,GAAS2D,MAE/B2rE,GAET,YAAAt3C,SAAA,SAASt1B,GACP,OAAO,IAAIxB,aAAoB,EAAPwB,IAE1B,YAAAkJ,OAAA,SAAOrH,EAA+B6qE,GACpC,OAAyB,IAArB/uE,KAAKw8D,YACet4D,EAAwBw/C,QAAO,SAACtjD,EAAOywB,GAAU,OAAAA,EAAQ,GAAM,KAAGnlB,SAAS,EAAGqjE,GAG/F7qE,EAAOwH,SAAS,EAAGqjE,IAE9B,EAjCA,GAAa,EAAAG,uBAmCb,iBAKE,WAAYvE,EAA2BngB,GACrC,QADqC,IAAAA,MAAA,GADvC,KAAAgS,YAAc,EAEK,IAAbhS,EACFxqD,KAAKwuE,eAAiB7D,EAAGwE,MACzBnvE,KAAK0uE,OAAS/D,EAAGwE,MACjBnvE,KAAKwnD,YAAcmjB,EAAGyE,cACtBpvE,KAAKw8D,YAAchS,MACd,IAAiB,IAAbA,EAMT,MAAM,IAAI9qD,MAAM,+BAA+B8qD,GAL/CxqD,KAAKwuE,eAAiB7D,EAAGkE,KACzB7uE,KAAK0uE,OAAS/D,EAAGkE,KACjB7uE,KAAKwnD,YAAcmjB,EAAGyE,cACtBpvE,KAAKw8D,YAAchS,GAiBzB,OAZE,YAAAn5B,OAAA,SAAO5rB,EAAiB4pE,GACtB,OAAO,IAAIvuE,WAAW2E,EAAIvB,OAAQuB,EAAItB,WAAYsB,EAAIrB,aAExD,YAAAuzB,SAAA,SAASt1B,GACP,OAAO,IAAIvB,WAAWuB,EAAOrC,KAAKw8D,cAEpC,YAAAjxD,OAAA,SAAOrH,EAA+B6qE,GACpC,GAAI7qE,aAAkBpD,WACpB,OAAOoD,EAAOwH,SAAS,EAAGqjE,GAE5B,MAAM,IAAIrvE,MAAM,uBAAuBwE,EAAO9B,cAElD,EAhCA,GAAa,EAAAktE,oB,6PC5Hb,cACA,UAkBA,aACE,WAAmB9B,GAAA,KAAAA,iBAoCrB,OAnCE,YAAA+B,iBAAA,SAAiBzhC,EAA0B0hC,GAEzC,GAAqB,IAAjB1hC,EAAMluC,OACR,MAAO,CAAC,EAAG,GAEb,IAAM4tE,EAAiBxtE,KAAKwtE,eAC5B,GAAIgC,QAA6B/vE,IAApB+vE,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAa3hC,EAAMluC,OAAS,EAAIkuC,EAAMrlC,MAAM+mE,EAAMC,WAAW1N,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAChGwoE,EAAQH,EAAMC,WAAa,EAAI,EAAI3hC,EAAMrlC,MAAM,EAAG+mE,EAAMC,WAAW1N,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAC9F,KAAIuoE,EAAQlC,GAAkBmC,EAAQnC,GAOpC,MAAO,CAACkC,EAAOC,GAJf,EAAAl2B,OAAOE,QACH,gBACA,2DAA2D7L,EAAK,eAAe0hC,EAAMC,WAS7F,IAJA,IAAMG,EAAY9hC,EAAMi0B,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAEzC2R,EAAQpC,KAAK6c,MAAM7c,KAAKs5C,KAAK4f,IAE1B92D,EAAQ00D,GAAkB10D,EAAQ82D,GACnCA,EAAY92D,GAAU,EADwBA,KAMpD,GAAIA,GAAS00D,GAAkBoC,EAAY92D,GAAU,EACnD,MAAM,IAAIpZ,MAAM,2DAA2DouC,GAE7E,MAAO,CAACh1B,EAAO82D,EAAY92D,IAE/B,EArCA,GAAa,EAAA+2D,iCAuCb,iBACE,WAAmBrC,GAAA,KAAAA,iBAwFrB,OAvFE,YAAA+B,iBAAA,SAAiBzhC,EAA0B0hC,GACzC,IAAMM,EAAK9vE,KAAK+vE,eAAejiC,EAAO0hC,GAKtC,OAJIA,GAASA,EAAM70B,WACjBm1B,EAAG,IAAM,EACTA,EAAG,IAAM,GAEPN,GAASA,EAAM5lB,UACV,CAACkmB,EAAG,GAAIA,EAAG,IAEbA,GAGT,YAAAC,eAAA,SAAejiC,EAA0B0hC,GACvC,IAAM70B,EAAW60B,GAASA,EAAM70B,SAEhC,GAAqB,IAAjB7M,EAAMluC,OACR,OAAO+6C,EAAW,CAAC,EAAG,GAAK,CAAC,EAAG,GAEjC,IAAI6yB,EAAiBxtE,KAAKwtE,eAC1B,GAAIgC,QAA6B/vE,IAApB+vE,EAAMC,UAAyB,CAE1C,IAAMC,EAAQF,EAAMC,WAAa3hC,EAAMluC,OAAS,EAAIkuC,EAAMrlC,MAAM+mE,EAAMC,WAAW1N,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAChGwoE,EAAQH,EAAMC,WAAa,EAAI,EAAI3hC,EAAMrlC,MAAM,EAAG+mE,EAAMC,WAAW1N,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAC9F,KAAIuoE,EAAQlC,GAAkBmC,EAAQnC,GAOpC,MAAO,CAACkC,EAAOC,GAJf,EAAAl2B,OAAOE,QACH,gBACA,2DAA2D7L,EAAK,eAAe0hC,EAAMC,WAK7F,IAAIO,EAAWliC,EAAMrlC,MAAM,GAoB3B,GAnBIkyC,IACF6yB,GAAkC,EAYV,KALxBwC,EAAWA,EAASzrE,KAChB,SAACwC,EAAGpH,GAAM,OAAAA,GAAKqwE,EAASpwE,OAAS,EAAKowE,EAASrwE,GAAK,GAAM,EAAIqwE,EAASrwE,GAAKqwE,EAASrwE,GAAK,EAAKqwE,EAASrwE,OAI/FC,SACXowE,EAAW,CAAC,EAAGA,EAAS,MAKJ,IAApBA,EAASpwE,OAAc,CACzB,IAAMqwE,EAAgBxvB,EAAauvB,GACnCA,EAAWC,EAAcvvB,SAG3B,IAAMr+C,EAAO6tE,EAAcF,GAC3B,OAAIA,EAASpwE,QAAU,GAAKyC,GAAQmrE,EAC3B,CAAC,EAAGnrE,GACkB,IAApB2tE,EAASpwE,QAAgBowE,EAAS,IAAMxC,GAAkBwC,EAAS,IAAMxC,EAC3EwC,EACsB,IAApBA,EAASpwE,QAAgBowE,EAAS,GAAKA,EAAS,IAAMxC,GAAkBwC,EAAS,IAAMxC,EACzF,CAACwC,EAAS,GAAKA,EAAS,GAAIA,EAAS,IACf,IAApBA,EAASpwE,QAAgBowE,EAAS,IAAMxC,GAAkBwC,EAAS,GAAKA,EAAS,IAAMxC,EACzF,CAACwC,EAAS,GAAIA,EAAS,GAAKA,EAAS,IAEtB,IAApBA,EAASpwE,QAAgBowE,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMxC,GACpEwC,EAAS,IAAMxC,EACV,CAACwC,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAIA,EAAS,IAEpC,IAApBA,EAASpwE,QAAgBowE,EAAS,IAAMxC,GACxCwC,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAAMxC,EACtC,CAACwC,EAAS,GAAIA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAEtDr1B,EAMKw1B,EAAoB9tE,EAAO,GAAGkC,KAAI,SAAAwC,GAAK,OAAI,EAAJA,KAEzCopE,EAAoB9tE,IAGjC,EAzFA,GA2FA,SAAgBo+C,EAAa3S,EAAiBppB,GAM5C,IALA,IAAMg8B,EAAqB,GACrBC,EAAqB,GACrByvB,EAAuB,MAAR1rD,GAAgB5iB,MAAMC,QAAQ2iB,IAAyB,IAAhBA,EAAK9kB,OAC3D0iE,EAAgB,MAAR59C,GAAgB0rD,EAAgB,KAAOC,EAAe3rD,EAAMopB,GAAO4H,OAC7E9vC,EAAI,EACCjG,EAAI,EAAGA,EAAImuC,EAAMluC,SAAUD,EAAG,CACrC,GAAY,MAAR2iE,EAAc,CAChB,GAAIA,EAAK18D,KAAOjG,GAAkB,IAAbmuC,EAAMnuC,GACzB,MAAM,IAAID,MAAM,sBAAsBC,EAAC,mBAAmBmuC,EAAMnuC,GAAE,eAEpD,MAAX2iE,EAAK18D,IAAc08D,EAAK18D,GAAKjG,IAAmB,IAAbmuC,EAAMnuC,KAC5C+gD,EAAS5gD,KAAKguC,EAAMnuC,IACpBghD,EAAS7gD,KAAKH,IAEZ2iE,EAAK18D,IAAMjG,GACbiG,IAGa,IAAbkoC,EAAMnuC,KACR+gD,EAAS5gD,KAAKguC,EAAMnuC,IACpBghD,EAAS7gD,KAAKH,IAGlB,MAAO,CAAC+gD,SAAQ,EAAEC,SAAQ,GAG5B,SAAgB0vB,EAAe3rD,EAAuBopB,GACpD,IAAM4O,EAAO5O,EAAMluC,OAkBnB,OAfA8kB,EAAe,MAARA,EAAeopB,EAAMvpC,KAAI,SAACmC,EAAG/G,GAAM,OAAAA,KAAM,GAAgB0lB,OAAOX,GAGvE,EAAA4rD,OACI5rD,EAAKm/C,OAAM,SAAA0M,GAAM,OAAAA,IAAO7zB,GAAQ6zB,EAAK7zB,MACrC,WAAM,qDAA+CA,EAAI,KAAKA,EAAxD,kBACUh4B,KAGpB,EAAA4rD,OACI5rD,EAAKm/C,MAAM2M,IACX,WAAM,gEACU9rD,KAGbA,EAAKngB,KAAI,SAAA+B,GAAK,OAAAA,EAAI,EAAIo2C,EAAOp2C,EAAIA,KAE1C,SAAgBkqE,EAAMlqE,GACpB,OAAOA,EAAI,GAAM,EAEnB,SAAgB4pE,EAAcpiC,GAC5B,GAAqB,IAAjBA,EAAMluC,OAER,OAAO,EAGT,IADA,IAAIyC,EAAOyrC,EAAM,GACRnuC,EAAI,EAAGA,EAAImuC,EAAMluC,OAAQD,IAChC0C,GAAQyrC,EAAMnuC,GAEhB,OAAO0C,EAST,SAAgB8tE,EAAoB9tE,GAClC,IAAMyW,EAAQpC,KAAKC,KAAKD,KAAKs5C,KAAK3tD,IAClC,MAAO,CAACyW,EAAOpC,KAAKC,KAAKtU,EAAOyW,IAlKrB,EAAAy0D,wBA2Fb,iBA2BA,mBAqBA,UAGA,kBAWA,uBAA4Bz/B,GAC1B,GAAqB,IAAjBA,EAAMluC,OACR,MAAMF,MAAM,wDAGd,MAAO,CAACouC,EAAMluC,OAAS,EAAIkuC,EAAMA,EAAMluC,OAAS,GAAK,EAAGkuC,EAAMA,EAAMluC,OAAS,KAE/E,wBAIA,uBAA4BkuC,EAAiB2iC,GAC3C,YAD2C,IAAAA,MAAA,GACpCP,EAAcpiC,EAAMrlC,MAAM,EAAGqlC,EAAMluC,OAAS6wE,M,gfC/NrD,cAEA,UAEa,EAAAnoB,mCACT,SAACgiB,EAA8Cx8B,EAC9C0Z,GACC,IAAMsM,EAAWtM,IAAgB,EAAAoB,YAAY0B,UAAY9C,IAAgB,EAAAoB,YAAYgW,iBAAoB,EAAI,EACvGjkB,EAAW6M,IAAgB,EAAAoB,YAAYC,OACvCe,EAAapC,IAAgB,EAAAoB,YAAYgW,kBAAoBpX,IAAgB,EAAAoB,YAAYC,OACzF4mB,EAAYjoB,IAAgB,EAAAoB,YAAYK,oBAAsBnb,EAAMluC,OAAS,OAAIH,EACjFs7C,EAAgByM,IAAgB,EAAAoB,YAAYK,oBAC9Cnb,EAAMvpC,KAAI,SAACwC,EAAGpH,GAAM,OAAAA,IAAMmuC,EAAMluC,OAAS,EAAQ,EAAJmH,EAAQA,UACrDtH,EACJ,OAAO,EAAAkqD,6BACH2gB,EAAuBx8B,EAAOgmB,EAAS/Y,EAAe,CAACJ,SAAQ,EAAEiP,UAAS,EAAE6lB,UAAS,KAGlF,EAAAloB,+BACT,SAAC+iB,EAA8Cx8B,EAA0B0Z,GAEnE,IAAMltC,EAAS,EAAAguC,mCAAmCgiB,EAAuBx8B,EAAO0Z,GAChF,MAAO,CAACltC,EAAOxB,MAAOwB,EAAOvB,SAM1B,EAAA4wC,6BACT,SAAC2gB,EAA8Cx8B,EAA0B0c,EACxEzP,EAAmCy0B,QADqC,IAAAhlB,MAAA,GAEvE,IAAM7P,KAAc60B,IAASA,EAAM70B,UAC7B,IAAkB2vB,EAAsBiF,iBAAiB50B,GAAWI,GAAyBjN,EAAO0hC,GAAM,GAAzG12D,EAAK,KAAEC,EAAM,KACd2jC,EAAO5O,EAAMluC,OACf8wE,EAAe5iC,EAAMrlC,MAAM,GAI/B,GAHa,IAATi0C,IACFg0B,EAAe,CAAC,IAED,IAAblmB,EAEFzP,EAAgBjN,OACX,GAAI6M,EAAU,CACnB,GAAiB,IAAb6P,EACF,MAAM,IAAI9qD,MAAM,sCAElBq7C,EAAgBjN,EACZ4O,EAAO,IACTg0B,EAAah0B,EAAO,GAAKhmC,KAAKC,KAAK+5D,EAAah0B,EAAO,GAAK,IAE1DA,EAAO,IACTg0B,EAAah0B,EAAO,GAAKhmC,KAAKC,KAAK+5D,EAAah0B,EAAO,GAAK,SAEzD,IAAK3B,EACV,MAAM,IAAIr7C,MAAM,oDAElB,MAAO,CACLoZ,MAAK,EACLC,OAAM,EACNyxC,SAAQ,EACR7P,SAAQ,EACR7M,MAAO4iC,EACPv2D,QAAS,EAAAskC,UAAUgM,eAAeimB,GAClC31B,cAAa,EACb41B,WAAanB,GAASA,EAAM5lB,a,0+CC/DpC,cAsBA,aAME,WACWrQ,EAAgCkO,EAA8C4iB,EAC7EuG,GADD,KAAAr3B,YAAgC,KAAAkO,iBAA8C,KAAA4iB,WAC7E,KAAAuG,SAJK,KAAAC,YAAuE,IAAIjwE,IAKtFgwE,EAAOlD,gBACT1tE,KAAK8wE,cAAgB,IAAIlwE,IACzBZ,KAAK+wE,aAAe,IAAInwE,IACxBZ,KAAKgxE,cAAgB,IAAIpwE,KAsL/B,OAnLE,YAAAqpD,wBAAA,SACIxd,EAA2BnyB,EAAuB1Y,EAA0BmoD,GAC9E,IAAMknB,EAAkBjxE,KAAKkxE,cAAczkC,GAErC0kC,EAAUnxE,KAAKu5C,UAAU63B,WAAWH,EAAiB32D,EAAOkwC,UAAY,EAAGT,GACjF,GAAIzvC,EAAOqgC,UAAsB,IAAVoP,EACrB,MAAM,IAAIrqD,MAAM,mBAElB,IAGIiE,EACAmtE,EAJEh4D,EAAQwB,EAAOxB,MACfC,EAASuB,EAAOvB,OAItB,GAAI/Y,KAAK4wE,OAAOlD,cAAe,CAC7B/pE,EAASmV,EAAK,IAAIC,EAAM,IAAIo4D,EAAQzC,OAAM,IAAIyC,EAAQ3C,eAAc,IAAI2C,EAAQ3pB,aAChFspB,EAAgB9wE,KAAK8wE,cAAc7uE,IAAI0B,MAErCmtE,EAAgB,GAChB9wE,KAAK8wE,cAAcxvE,IAAIqC,EAAKmtE,IAG9B,IAAMC,EAAe/wE,KAAK+wE,aAAa9uE,IAAI0B,GAC3C,GAAIotE,GAAgBA,EAAanxE,OAAS,EAAG,CAC3C,IAAM,EAAUmxE,EAAahgE,MAK7B,OAJA+/D,EAAchxE,KAAK,GACL,IAAViqD,GACF/pD,KAAKu5C,UAAU83B,cAAc,EAASv4D,EAAOC,EAAQo4D,EAASnxE,KAAKsxE,cAAc7kC,EAAU7qC,IAEtF,GAIX,EAAA63C,OAAOE,QAAQ,iBAAkB,gCAAgCr/B,EAAOxB,MAAK,IAAIwB,EAAOvB,QACxF,IAAMivC,EAAUhoD,KAAKu5C,UAAUg4B,gBAAgBz4D,EAAOC,EAAQo4D,EAASnxE,KAAKsxE,cAAc7kC,EAAU7qC,IAMpG,OAJI5B,KAAK4wE,OAAOlD,gBACdoD,EAAehxE,KAAKkoD,GACpBhoD,KAAKgxE,cAAc1vE,IAAI0mD,EAASrkD,IAE3BqkD,GAET,YAAAqD,YAAA,SAAYn0C,EAAiBu1B,EAA2B+d,GAAxD,WAIE,OAHKA,IACHA,EAAW,GAENxqD,KAAKqqE,SAASK,MAAM,UAAW,8BAA8B,WAClE,IAAMqE,EAAW73D,EAAG42B,MAAMi0B,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAAKqjD,EAC9C5oD,EAAO,EAAK23C,UAAU8R,YACxBn0C,EAAG8wC,QAAS9wC,EAAG4B,MAAO5B,EAAG6B,OAAQg2D,EAAU,EAAKmC,cAAczkC,GAAW+d,GAC7E,OAAO,EAAKgnB,aAAa/kC,EAAU7qC,OAGjC,YAAA0pD,iBAAN,SAAuBp0C,EAAiBu1B,EAA2B+d,G,kFAKjE,OAJMzB,EAAS7xC,EAAGyxC,OAAOI,OACpByB,IACHA,EAAW,GAETxqD,KAAK6wE,YAAYpuB,IAAIsG,IACjB,EAAc/oD,KAAK6wE,YAAY5uE,IAAI8mD,GAClC,CAAP,EAAO,IAAIniD,SAA2B,SAAA+iB,GAAW,oBAAW,EAAX,EAAa7pB,KAAK6pB,QAE9D,CAAP,EAAO3pB,KAAKqqE,SAASK,MAAM,UAAW,mCAAmC,gD,8DAIvE,OAHA1qE,KAAK6wE,YAAYvvE,IAAIynD,EAAQ,IACvBgmB,EAAW73D,EAAG42B,MAAMi0B,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAAKqjD,EAEpD,GAAMxqD,KAAKu5C,UAAUk4B,yB,OAOrB,OAPA,SACM7vE,EAAO5B,KAAKu5C,UAAU8R,YACxBn0C,EAAG8wC,QAAS9wC,EAAG4B,MAAO5B,EAAG6B,OAAQg2D,EAAU/uE,KAAKkxE,cAAczkC,GAAW+d,GACvEknB,EAAa1xE,KAAKwxE,aAAa/kC,EAAU7qC,GACzC+vE,EAAc3xE,KAAK6wE,YAAY5uE,IAAI8mD,GACzC/oD,KAAK6wE,YAAYv6B,OAAOyS,GACxB4oB,WAAah2D,SAAQ,SAAAgO,GAAW,OAAAA,EAAQ+nD,MACjC,CAAP,EAAOA,qBAGX,YAAA7lB,wBAAA,SAAwB30C,GAAxB,WACE,OAAOlX,KAAKqqE,SAASK,MAAM,UAAW,0CAA0C,WAC9E,IAAMqE,EAAW73D,EAAG42B,MAAMi0B,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KACzCvF,EAAO,EAAK23C,UAAU8R,YAAYn0C,EAAG8wC,QAAS9wC,EAAG4B,MAAO5B,EAAG6B,OAAmB,EAAXg2D,EAAc,OAAQ,GAC/F,OAAO,IAAIluE,aAAae,EAAKsC,OAAQtC,EAAKuC,WAAY4qE,OAG1D,YAAApjB,eAAA,SAAeR,EAA0BymB,GACvC,IAAIjuE,EACJ,GAAI3D,KAAK4wE,OAAOlD,gBACd/pE,EAAM3D,KAAKgxE,cAAc/uE,IAAIkpD,EAAYnD,UAChC,CACH4pB,GACF5xE,KAAKgxE,cAAc16B,OAAO3yC,GAE5B,IAAMmtE,EAAgB9wE,KAAK8wE,cAAc7uE,IAAI0B,GAC7C,GAAImtE,EAAe,CACjB,IAAMjgD,EAAQigD,EAAczwE,QAAQ8qD,EAAYnD,SAChD,IAAe,IAAXn3B,EAAc,CAChBigD,EAAcjxE,OAAOgxB,EAAO,GAC5B,IAAIkgD,EAAe/wE,KAAK+wE,aAAa9uE,IAAI0B,GACpCotE,IACHA,EAAe,GACf/wE,KAAK+wE,aAAazvE,IAAIqC,EAAKotE,IAE7BA,EAAajxE,KAAKqrD,EAAYnD,WAMjCrkD,IAAOiuE,IACV,EAAAn4B,OAAOE,QAAQ,iBAAkB,4BAA4BwR,EAAYryC,MAAK,IAAIqyC,EAAYpyC,QAC9F/Y,KAAKu5C,UAAUq4B,cAAczmB,EAAYnD,WAG7C,YAAAwpB,aAAA,SAAa/kC,EAA2B7qC,GACtC,OAAQ6qC,GACN,IAAK,QACH,OAAO7qC,aAAgBX,WAAaW,EAAOX,WAAWT,KAAKoB,GAC7D,IAAK,QACH,OAAOA,aAAgBV,WAAaU,EAAOV,WAAWV,KAAKoB,GAC7D,IAAK,OACH,OAAOA,aAAgBb,UAAYa,EAAOb,UAAUP,KAAKoB,GAC3D,IAAK,SACH,OAAOA,aAAgBZ,YAAcY,EAAOZ,YAAYR,KAAKoB,GAC/D,IAAK,SACH,OAAOA,aAAgBR,YAAcQ,EAAOR,YAAYZ,KAAKoB,GAC/D,IAAK,QACL,IAAK,OACH,OAAOA,aAAgBd,WAAac,EAAOd,WAAWN,KAAKoB,GAC7D,IAAK,UACH,OAAOA,aAAgBf,aAAee,EAAOf,aAAaL,KAAKoB,GACjE,IAAK,UACH,OAAOA,aAAgBT,aAAeS,EAAOT,aAAaX,KAAKoB,GACjE,QACE,MAAM,IAAIlC,MAAM,mBAAmB+sC,EAAQ,uBAGjD,YAAA6kC,cAAA,SAAc7kC,EAA2B7qC,GACvC,GAAKA,EAGL,OAAQA,aAAgBf,aAAgBe,EAAO,IAAIf,aAAae,IAoBlE,YAAAsvE,cAAA,SAAcW,GACZ,MAAO,SAiBT,YAAAnmB,oBAAA,WACE1rD,KAAKu5C,UAAUmS,uBAEnB,EAlMA,GAAa,EAAA+hB,kB,gCCgBb,IAAY7kB,E,uEAAAA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KACrB,yBACA,2CACA,uBACA,mDACA,kD,yqDC3CF,cAOA,0BAA+B7N,GAC7B,IAAMllB,EAAMklB,EAAcn7C,OAC1B,OAAOm7C,EAActyC,MAAM,EAAGotB,EAAM,GAAGxQ,OAAO01B,EAAcllB,EAAM,GAAK,IAGzE,uBACIi8C,EAAwBC,EAAmCC,G,YAAnC,IAAAD,MAAA,SAAWE,GAAqB,W,4DAC1D,MAAO,CAAP,EAAO,IAAIrrE,SAAc,SAAC+iB,EAASoH,GACjC,IAAImhD,EAAW,EAETC,EAAQ,WACZ,GAAIL,IACFnoD,QADF,CAKAuoD,IAEA,IAAME,EAAcL,EAAQG,GAEV,MAAdF,GAAsBE,GAAYF,EACpCjhD,IAGF9Q,WAAWkyD,EAAOC,KAGpBD,eAQJ,sDAA2Dl1B,GAEzD,OADA,EAAAqzB,YAA8B,IAAhBrzB,GAAsD,IAAvBA,EAAYr9C,QAAc,WAAM,+CACtE,MAAQq9C,EAAY/rB,OAAO,GAAGmhD,cAAgBp1B,EAAYx0C,MAAM,IAOzE,iEAAsEw0C,GAEpE,OADA,EAAAqzB,YAA8B,IAAhBrzB,GAAsD,IAAvBA,EAAYr9C,QAAc,WAAM,+CACtE,MAAQq9C,EAAY/rB,OAAO,GAAGmhD,cAAgBp1B,EAAYx0C,MAAM,GAAK,eAI9E,6BAAkC4qD,EAA+BxT,GAI/D,OAF8BI,KAAK9gB,MAAM8gB,KAAKC,UAAUmT,IACxCxT,GAKlB,6BAAkCjvB,EAAkB+vB,GAClD,OAAOA,EAASp8C,KAAI,SAAAwC,GAAK,OAAA6pB,EAAO7pB,MAAI7B,KAAK,OAI3C,6BAAkCw3C,GAChC,GAAIA,GAAQ,EACV,MAAO,MACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QACF,GAAa,IAATA,EACT,MAAO,QAEP,MAAMh9C,MAAM,gBAAgBg9C,EAAI,0BAIpC,yBAA8BA,GAC5B,YAD4B,IAAAA,MAAA,GACrB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKj0C,MAAM,EAAGi0C,K,uICzFjD,cAEA,UAEMtc,EAA6C,GAuCnD,SAAgBkyC,EAAsBn5B,GACpC,IAUIwxB,EAVEppD,EAsCR,WACE,IAAMA,EAA4Bhc,SAASgtE,cAAc,UAGzD,OAFAhxD,EAAOzI,MAAQ,EACfyI,EAAOxI,OAAS,EACTwI,EA1CQixD,GAWT7yD,EAV4C,CAChD9F,OAAO,EACPuG,OAAO,EACPE,WAAW,EACXD,SAAS,EACTG,uBAAuB,EACvBD,oBAAoB,EACpBG,8BAA8B,GAIhC,KAAKy4B,GAA2B,WAAdA,KAChBwxB,EAAKppD,EAAOL,WAAW,SAAUvB,IAE/B,IACE,OAAO,IAAI,EAAA8yD,aAAa9H,EAAI,GAC5B,MAAO1lE,GACP,EAAAw0C,OAAOG,QAAQ,mBAAoB,kEAAkE30C,GAI3G,KAAKk0C,GAA2B,UAAdA,KAChBwxB,EAAKppD,EAAOL,WAAW,QAASvB,IAAO4B,EAAOL,WAAW,qBAAsBvB,IAE7E,IACE,OAAO,IAAI,EAAA8yD,aAAa9H,EAAI,GAC5B,MAAO1lE,GACP,EAAAw0C,OAAOG,QACH,mBACA,yFAAyF30C,GAKnG,MAAM,IAAIvF,MAAM,0BApElB,8BAAgB85C,EAAmBL,GACjC,IAAIU,EACEV,GAA2B,WAAdA,KAA2B,WAAY/Y,GAE7C+Y,GAA2B,UAAdA,KAA0B,UAAW/Y,KAC7DyZ,EAAUzZ,EAAMlgC,OAFhB25C,EAAUzZ,EAAMsyC,OAKlB74B,EAAUA,GAAWy4B,EAAsBn5B,GAC3CA,EAAYA,GAAiC,IAApBU,EAAQv4B,QAAgB,QAAU,SAC3D,IAAMqpD,EAAK9wB,EAAQ8wB,GAInB,OAFAvqC,EAAM+Y,GAAaU,EAEf8wB,EAAGgI,wBACEvyC,EAAM+Y,GACNK,EAAmBL,KAG5BwxB,EAAGiI,QAAQjI,EAAGkI,YACdlI,EAAGiI,QAAQjI,EAAGmI,cACdnI,EAAGiI,QAAQjI,EAAGoI,OACdpI,EAAGiI,QAAQjI,EAAGqI,QACdrI,EAAGiI,QAAQjI,EAAGsI,qBACdtI,EAAGiI,QAAQjI,EAAGuI,iBACdvI,EAAGwI,OAAOxI,EAAGyI,cACbzI,EAAGwI,OAAOxI,EAAG0I,WACb1I,EAAG2I,SAAS3I,EAAG4I,MAER15B,IAGT,2B,whEC3CA,cAEA,aAEA,UAWA,SAAgB25B,EAAqB17B,GAEnC,IADA,IAAIn4C,EAAI,EACDA,EAAIm4C,EAAIl4C,QACEk4C,EAAIn4C,OADIA,GAMzB,OAAOA,EAAI,EARb,yBAcA,iBAwCE,WAAYgrE,EAA2BrpD,GAF/B,KAAAmyD,kBAAmB,EAogBnB,KAAAC,YAA0B,GAjgBhC1zE,KAAK2qE,GAAKA,EACV3qE,KAAKshB,QAAUA,EAEfthB,KAAK2zE,gBACL3zE,KAAK4zE,aAAe5zE,KAAK6zE,qBACzB7zE,KAAK8zE,YAAc9zE,KAAK+zE,oBACxB/zE,KAAKg0E,uBAohBT,OAjhBE,YAAAzC,gBAAA,SAAgBz4D,EAAeC,EAAgBo4D,EAAsBvvE,GACnE,IAAM+oE,EAAK3qE,KAAK2qE,GAEV3iB,EAAU2iB,EAAGsJ,gBAEnBtJ,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAC9B2iB,EAAGwJ,cAAcxJ,EAAGuJ,WAAYvJ,EAAGyJ,mBAAoBzJ,EAAG0J,SAC1D1J,EAAGwJ,cAAcxJ,EAAGuJ,WAAYvJ,EAAG2J,mBAAoB3J,EAAG0J,SAC1D1J,EAAGwJ,cAAcxJ,EAAGuJ,WAAYvJ,EAAG4J,eAAgB5J,EAAG6J,eACtD7J,EAAGwJ,cAAcxJ,EAAGuJ,WAAYvJ,EAAG8J,eAAgB9J,EAAG6J,eACtD,IAAMtwE,EAAStC,EAAOuvE,EAAQ9/C,OAAOzvB,EAAMkX,EAAQC,GAAU,KAQ7D,OAPA4xD,EAAG+J,WACC/J,EAAGuJ,WACH,EACA/C,EAAQ3C,eAAgB11D,EAAOC,EAC/B,EACAo4D,EAAQzC,OAAQyC,EAAQ3pB,YAAatjD,GACzClE,KAAK20E,aACE3sB,GAET,YAAAqpB,cAAA,SACIrpB,EAAuBlvC,EAAeC,EAAgBo4D,EAAsBvvE,GAC9E,IAAM+oE,EAAK3qE,KAAK2qE,GAChBA,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAC9B,IAAM9jD,EAASitE,EAAQ9/C,OAAOzvB,EAAMkX,EAAQC,GAC5C4xD,EAAGiK,cACCjK,EAAGuJ,WACH,EACA,EACA,EACAp7D,EAAOC,EAAQo4D,EAAQzC,OAAQyC,EAAQ3pB,YAAatjD,GACxDlE,KAAK20E,cAEP,YAAAvI,kBAAA,SAAkBpkB,EAAuBlvC,EAAeC,GACtD,IAAM4xD,EAAK3qE,KAAK2qE,GAEhBA,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAC9B2iB,EAAGkK,gBAAgBlK,EAAGmK,YAAa90E,KAAK8zE,aACxCnJ,EAAGoK,qBACCpK,EAAGmK,YAAanK,EAAGqK,kBAAmBrK,EAAGuJ,WAAYlsB,EACrD,GACJhoD,KAAK20E,aACLhK,EAAG3xD,SAAS,EAAG,EAAGF,EAAOC,GACzB4xD,EAAGsK,QAAQ,EAAG,EAAGn8D,EAAOC,IAE1B,YAAAsyC,YAAA,SACIrD,EAAuBlvC,EAAeC,EAAgBg2D,EAAkBtiC,EACxE+d,GACF,IAAMmgB,EAAK3qE,KAAK2qE,GACXngB,IACHA,EAAW,GAERxqD,KAAKyzE,kBACRzzE,KAAKosE,kBAAkBpkB,EAASlvC,EAAOC,GAEzC,IAAMo4D,EAAUnxE,KAAKoxE,WAAW3kC,EAAU+d,GACpCtmD,EAASitE,EAAQx5C,SAAS7e,EAAQC,GAUxC,OARA4xD,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAC9B2iB,EAAGoK,qBACCpK,EAAGmK,YAAanK,EAAGqK,kBAAmBrK,EAAGuJ,WAAYlsB,EACrD,GAEJ2iB,EAAGuK,WAAW,EAAG,EAAGp8D,EAAOC,EAAQ4xD,EAAGkE,KAAMsC,EAAQ3pB,YAAatjD,GACjElE,KAAK20E,aAEExD,EAAQ5lE,OAAOrH,EAAQ6qE,IAGhC,YAAAoG,mBAAA,WAEE,OAAO,GAET,YAAAC,iBAAA,WACE,IAAMzK,EAAK3qE,KAAK2qE,GAEhB,MAAO,WADGA,EAAG9xD,aAAa7Y,KAAK2qE,GAAG0K,gBACZ1K,EAAG2K,WAE3B,YAAAC,kBAAA,WACE,OAAOv1E,KAAK2qE,GAAG9xD,aAAa7Y,KAAK2qE,GAAG6K,qBAEtC,YAAAC,sBAAA,WACE,OAAOz1E,KAAK2qE,GAAG9xD,aAAa7Y,KAAK2qE,GAAG+K,sBAEtC,YAAAlJ,oBAAA,SAAoBH,EAAwBC,GAC1C,IAAM3B,EAAK3qE,KAAK2qE,GAChBA,EAAGgL,oBAAoBtJ,EAAgB,EAAG1B,EAAG3zB,OAAO,EAAO,GAAI,GAC/D2zB,EAAGiL,wBAAwBvJ,IACC,IAAxBC,IACF3B,EAAGgL,oBAAoBrJ,EAAoB,EAAG3B,EAAG3zB,OAAO,EAAO,GAAI,IACnE2zB,EAAGiL,wBAAwBtJ,IAE7BtsE,KAAK20E,cAEP,YAAAxI,cAAA,SACIhB,EACAc,GAEF,IAAMtB,EAAK3qE,KAAK2qE,GACVhjB,EAAUgjB,EAAGwB,gBAMnB,OAHAxB,EAAGkL,aAAaluB,EAASwjB,GACzBR,EAAGkL,aAAaluB,EAASskB,GACzBtB,EAAGmL,YAAYnuB,GACRA,GAET,YAAAmkB,cAAA,SAAcpnB,EAAsBqxB,GAClC,IAAMpL,EAAK3qE,KAAK2qE,GACVqL,EAASrL,EAAGsL,aAAaF,GAC/B,IAAKC,EACH,MAAM,IAAIt2E,MAAM,0CAA0Cq2E,GAK5D,GAFApL,EAAGjmB,aAAasxB,EAAQtxB,GACxBimB,EAAGmB,cAAckK,IACwC,IAArDrL,EAAGuL,mBAAmBF,EAAQrL,EAAGwL,gBACnC,MAAM,IAAIz2E,MAAM,6BAA6BirE,EAAGyL,iBAAiBJ,GAAO,qBAE5EtxB,GAEE,OAAOsxB,GAET,YAAA5K,aAAA,SAAa4K,GACXh2E,KAAK2qE,GAAGS,aAAa4K,IAEvB,YAAA9I,qBAAA,SAAqBllB,EAAuBrvB,EAAkBs0C,GAC5D,IAAMtC,EAAK3qE,KAAK2qE,GAChBA,EAAG0L,cAAc1L,EAAG2K,SAAW38C,GAC/B34B,KAAK20E,aACLhK,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAC9BhoD,KAAK20E,aACLhK,EAAGqC,UAAUC,EAAet0C,GAC5B34B,KAAK20E,cAEP,YAAAzJ,KAAA,WACElrE,KAAK2qE,GAAG2L,WAAWt2E,KAAK2qE,GAAG4L,eAAgB,EAAG,GAC9Cv2E,KAAK20E,cAEP,YAAAA,WAAA,WACE,GAAI,EAAA50E,IAAIisE,MAAO,CACb,IAAMrB,EAAK3qE,KAAK2qE,GACVvhE,EAAQuhE,EAAG6L,WACbC,EAAQ,GACZ,OAAQrtE,GACN,KAAMuhE,EAAW,SACf,OACF,KAAMA,EAAe,aACnB8L,EAAQ,eACR,MACF,KAAM9L,EAAgB,cACpB8L,EAAQ,gBACR,MACF,KAAM9L,EAAoB,kBACxB8L,EAAQ,oBACR,MACF,KAAM9L,EAAgC,8BACpC8L,EAAQ,gCACR,MACF,KAAM9L,EAAgB,cACpB8L,EAAQ,gBACR,MACF,KAAM9L,EAAqB,mBACzB8L,EAAQ,qBACR,MACF,QACEA,EAAQ,wBAAwBrtE,EAAMsU,SAAS,IAEnD,MAAM,IAAIhe,MAAM+2E,KAGpB,YAAA7E,cAAA,SAAc5pB,GACZhoD,KAAK2qE,GAAGiH,cAAc5pB,IAExB,YAAAqjB,cAAA,SAAc1jB,GACZ3nD,KAAK2qE,GAAGU,cAAc1jB,IAExB,YAAAypB,WAAA,SAAW3kC,EAA4B+d,EAAkBT,GACvD,QADuD,IAAAA,MAAA,GAClC,IAAjB/pD,KAAKshB,QACP,OAAO,IAAIo1D,EAAa1H,sBAAsBhvE,KAAK2qE,GAA8BngB,GAGnF,OAAQ/d,GACN,IAAK,QACH,OAAc,IAAVsd,GAAsC/pD,KAAK22E,yBACtC,IAAID,EAAaxH,qBAAqBlvE,KAAK2qE,GAAIngB,GAE/C,IAAIksB,EAAaxH,qBACpBlvE,KAAK2qE,GAAIngB,EAAUxqD,KAAK42E,0BAA2BC,gBAE3D,IAAK,MACH,MAAM,IAAIn3E,MAAM,mBAClB,IAAK,OACH,OAAO,IAAIg3E,EAAapH,iBAAiBtvE,KAAK2qE,GAAIngB,GACpD,QACE,MAAM,IAAI9qD,MAAM,qBAAqB+sC,KAG3C,YAAAif,oBAAA,WAEE,IADA,IAAMif,EAAK3qE,KAAK2qE,GACPmM,EAAO,EAAGA,EAAO92E,KAAK+2E,uBAAwBD,EACrDnM,EAAG0L,cAAc1L,EAAG2K,SAAWwB,GAC/BnM,EAAGiC,YAAYjC,EAAGuJ,WAAY,OAGlC,YAAAn7B,QAAA,WACE,IAAI/4C,KAAKg3E,SAAT,CAGA,IAAMrM,EAAK3qE,KAAK2qE,GAChBA,EAAGkK,gBAAgBlK,EAAGmK,YAAa,MACnCnK,EAAGsM,kBAAkBj3E,KAAK8zE,aAC1BnJ,EAAGuM,WAAWvM,EAAGwM,aAAc,MAC/BxM,EAAGyM,aAAap3E,KAAK4zE,cACrBjJ,EAAGuM,WAAWvM,EAAG0M,qBAAsB,MACvC1M,EAAGhvC,SACH37B,KAAKg3E,UAAW,IAGV,YAAAM,sBAAR,WAEE,OAAO,IAAIz2E,aAAa,EACrB,EAAK,EAAM,EAAK,EAAK,GACrB,GAAM,EAAK,EAAK,EAAK,EACtB,EAAM,EAAM,EAAK,EAAK,EACtB,GAAO,EAAK,EAAK,EAAK,KAGlB,YAAAgzE,mBAAR,WACE,IAAMlJ,EAAK3qE,KAAK2qE,GACVzmE,EAASymE,EAAG4M,eAClB,IAAKrzE,EACH,MAAM,IAAIxE,MAAM,gCAElB,IAAM83E,EAAWx3E,KAAKs3E,wBAItB,OAHA3M,EAAGuM,WAAWvM,EAAGwM,aAAcjzE,GAC/BymE,EAAG8M,WAAW9M,EAAGwM,aAAcK,EAAU7M,EAAG+M,aAC5C13E,KAAK20E,aACEzwE,GAED,YAAA6vE,kBAAR,WACE,IAAM1oD,EAAKrrB,KAAK2qE,GAAGoJ,oBACnB,IAAK1oD,EACH,MAAM,IAAI3rB,MAAM,mCAElB,OAAO2rB,GAGD,YAAA2oD,qBAAR,WACE,IAAMrJ,EAAK3qE,KAAK2qE,GAMhB,GAJA3qE,KAAK23E,sCAAwC33E,KAAK43E,2CAClD53E,KAAK22E,yBAA2B32E,KAAK63E,qBACrC73E,KAAK4rD,2BAA6B5rD,KAAK83E,uBAElB,IAAjB93E,KAAKshB,UAAkBthB,KAAK42E,4BAA8B52E,KAAK22E,yBACjE,MAAM,IAAIj3E,MAAM,0DAGlBM,KAAK+3E,kBAAoB/3E,KAAK22E,0BAA4B32E,KAAKg4E,oBAG/Dh4E,KAAKwtE,eAAiB7C,EAAG9xD,aAAa8xD,EAAGsN,kBACzCj4E,KAAK+2E,qBAAuBpM,EAAG9xD,aAAa8xD,EAAGuN,yBAM3Cl4E,KAAKshB,SAOH,YAAAqyD,cAAR,WACuB,IAAjB3zE,KAAKshB,SACPthB,KAAKm4E,0BAA4Bn4E,KAAK2qE,GAAGlpD,aAAa,0BACtDzhB,KAAKo4E,kCAAoCp4E,KAAK2qE,GAAGlpD,aAAa,qCAE9DzhB,KAAKq4E,sBAAwBr4E,KAAK2qE,GAAGlpD,aAAa,qBAClDzhB,KAAK42E,0BAA4B52E,KAAK2qE,GAAGlpD,aAAa,4BAIlD,YAAAm2D,yCAAR,WAGE,IAAMjN,EAAK3qE,KAAK2qE,GACV3iB,EAAU2iB,EAAGsJ,gBACnBtJ,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAE9B,IAAMwmB,EAAkC,IAAjBxuE,KAAKshB,QAAiBqpD,EAAoCiE,QAAUjE,EAAGkE,KAC9FlE,EAAG+J,WAAW/J,EAAGuJ,WAAY,EAAG1F,EAAgB,EAAG,EAAG,EAAG7D,EAAGkE,KAAMlE,EAAG3zB,MAAO,MAE5E,IAAMshC,EAAc3N,EAAGoJ,oBACvBpJ,EAAGkK,gBAAgBlK,EAAGmK,YAAawD,GAEnC3N,EAAGoK,qBAAqBpK,EAAGmK,YAAanK,EAAGqK,kBAAmBrK,EAAGuJ,WAAYlsB,EAAS,GAEtF,IAAMuwB,EAAa5N,EAAG6N,uBAAuB7N,EAAGmK,eAAiBnK,EAAG8N,qBAKpE,OAJA9N,EAAGiC,YAAYjC,EAAGuJ,WAAY,MAC9BvJ,EAAGkK,gBAAgBlK,EAAGmK,YAAa,MACnCnK,EAAGiH,cAAc5pB,GACjB2iB,EAAGsM,kBAAkBqB,GACdC,GAGD,YAAAV,mBAAR,WACE,GAAqB,IAAjB73E,KAAKshB,SACP,IAAKthB,KAAKm4E,0BACR,OAAO,OAGT,IAAKn4E,KAAKq4E,sBACR,OAAO,EAGX,OAAOr4E,KAAK23E,uCAGN,YAAAG,qBAAR,WACE,GAAqB,IAAjB93E,KAAKshB,SACP,IAAKthB,KAAKm4E,0BACR,OAAO,MAEJ,CACL,IAAKn4E,KAAKq4E,sBACR,OAAO,EAET,IAAKr4E,KAAK2qE,GAAGlpD,aAAa,4BACxB,OAAO,EAGX,OAAOzhB,KAAK23E,uCAMN,YAAAK,kBAAR,WAIE,IAEIhwB,EACAswB,EACAnN,EACAuN,EACA/wB,EANEgjB,EAAK3qE,KAAK2qE,GAQhB,IACE3iB,EAAU2iB,EAAGsJ,gBACbqE,EAAc3N,EAAGoJ,oBACjBpJ,EAAGiC,YAAYjC,EAAGuJ,WAAYlsB,GAG9B,IAAMwmB,EAAkC,IAAjBxuE,KAAKshB,QAAiBqpD,EAAoCiE,QAAUjE,EAAGkE,KAS9F,OARAlE,EAAG+J,WAAW/J,EAAGuJ,WAAY,EAAG1F,EAAgB,EAAG,EAAG,EAAG7D,EAAGkE,KAAMlE,EAAG3zB,MAAO,MAE5E2zB,EAAGkK,gBAAgBlK,EAAGmK,YAAawD,GACnC3N,EAAGoK,qBAAqBpK,EAAGmK,YAAanK,EAAGqK,kBAAmBrK,EAAGuJ,WAAYlsB,EAAS,GAEtF2iB,EAAGwI,OAAOxI,EAAGoI,UAEb5H,EAAeR,EAAGsL,aAAatL,EAAGoB,kBAIlCpB,EAAGjmB,aAAaymB,EAAc,iBAC9BR,EAAGmB,cAAcX,MAEjBuN,EAAiB/N,EAAGsL,aAAatL,EAAGuB,oBAIpCvB,EAAGjmB,aAAag0B,EAAgB,8DAChC/N,EAAGmB,cAAc4M,MAEjB/wB,EAAUgjB,EAAGwB,mBAIbxB,EAAGkL,aAAaluB,EAASwjB,GACzBR,EAAGkL,aAAaluB,EAAS+wB,GACzB/N,EAAGmL,YAAYnuB,GACfgjB,EAAGC,WAAWjjB,GAEdgjB,EAAG2L,WAAW3L,EAAGgO,OAAQ,EAAG,GACrBhO,EAAG6L,aAAe7L,EAAGiO,Y,QAG5BjO,EAAGiI,QAAQjI,EAAGoI,OAEVprB,GACFgjB,EAAGU,cAAc1jB,GAEfwjB,GACFR,EAAGS,aAAaD,GAEduN,GACF/N,EAAGS,aAAasN,GAEdJ,IACF3N,EAAGkK,gBAAgBlK,EAAGmK,YAAa,MACnCnK,EAAGsM,kBAAkBqB,IAEnBtwB,IACF2iB,EAAGiC,YAAYjC,EAAGuJ,WAAY,MAC9BvJ,EAAGiH,cAAc5pB,MAKvB,YAAA6wB,WAAA,WACE,GAAqB,IAAjB74E,KAAKshB,SAAiBthB,KAAKo4E,kCAAmC,CAChE,IAAMU,EAAM94E,KAAK2qE,GACXoO,EAAM/4E,KAAKo4E,kCAEXY,EAAQF,EAAIG,cAElB,OADAH,EAAII,WAAWH,EAAII,iBAAkBH,GAC9BA,EAGP,MAAM,IAAIt5E,MAAM,8CAIpB,YAAA05E,SAAA,WACE,GAAqB,IAAjBp5E,KAAKshB,UAAiBthB,KAAKo4E,kCAO7B,MAAM,IAAI14E,MAAM,4CANhB,IAAMo5E,EAAM94E,KAAK2qE,GACXoO,EAAM/4E,KAAKo4E,kCACjBU,EAAIO,SAASN,EAAII,mBAQrB,YAAAG,uBAAA,SAAuBN,GACrB,IAAIO,EAAmBC,EACvB,GAAqB,IAAjBx5E,KAAKshB,UAAiBthB,KAAKo4E,kCAQ7B,MAAM,IAAI14E,MAAM,4CAPhB,IAAMo5E,EAAM94E,KAAK2qE,GACXoO,EAAM/4E,KAAKo4E,kCASnB,OAPEmB,EAAYT,EAAIW,kBAAkBT,EAAOF,EAAIY,wBAC7CF,EAAWV,EAAIjgE,aAAakgE,EAAIY,kBAM3BJ,IAAcC,GAGvB,YAAAI,eAAA,SAAeZ,GACb,IAAIa,EACJ,GAAqB,IAAjB75E,KAAKshB,QAMP,MAAM,IAAI5hB,MAAM,4CALhB,IAAMo5E,EAAM94E,KAAK2qE,GAQnB,OAPEkP,EAAcf,EAAIW,kBAAkBT,EAAOF,EAAIgB,cAC/ChB,EAAIiB,YAAYf,GAMXa,EAAc,KAGjB,YAAAG,uBAAN,SAA6BhB,G,qGAC3B,SAAM,EAAAiB,aAAY,WAAM,SAAKX,uBAAuBN,O,OACpD,OADA,SACO,CAAP,EAAOh5E,KAAK45E,eAAeZ,YAGhB,YAAAvH,sBAAb,W,yEAEE,OADMyI,EAAel6E,KAAKm6E,YAAYn6E,KAAK2qE,IACpC,CAAP,EAAO3qE,KAAKo6E,UAAUF,WAGhB,YAAAC,YAAR,SAAoBxP,GAClB,IACMmO,EAAMnO,EACNqO,EAAQF,EAAIuB,UAAUvB,EAAIwB,2BAA4B,GAU5D,OATA3P,EAAG4P,QASI,CAACvB,MAAK,EAAEwB,cARD,OAAVxB,EACc,WAAM,UAEN,WACd,IAAMhvE,EAAS8uE,EAAI2B,eAAezB,EAAO,EAAG,GAC5C,OAAOhvE,IAAW8uE,EAAI4B,kBAAoB1wE,IAAW8uE,EAAI6B,uBAMzD,YAAAP,UAAN,SAAgBF,G,8EACd,MAAO,CAAP,EAAO,IAAItzE,SAAc,SAAA+iB,GAClB,EAAKixD,eAAc,WAAM,OAAAV,EAAaM,mBAAiB,WAAM,OAAA7wD,kBAMtE,YAAAkxD,UAAA,WAGE,IADA,IAAMhqD,EAAQ2iD,EAAqBxzE,KAAK0zE,YAAYnvE,KAAI,SAAA4F,GAAK,OAAAA,EAAE2wE,aACtDn7E,EAAI,EAAGA,GAAKkxB,IAASlxB,GAE5Bo7E,EADoB/6E,KAAK0zE,YAAY/zE,GAAE,aAGzCK,KAAK0zE,YAAc1zE,KAAK0zE,YAAYjrE,MAAMooB,EAAQ,IAGtC,YAAA+pD,cAAd,SAA4BE,EAAyBC,G,qGAEnD,OADA/6E,KAAK0zE,YAAY5zE,KAAK,CAACg7E,SAAQ,EAAEC,UAAS,IACtC/6E,KAAK0zE,YAAY9zE,OAAS,EAE5B,IAGF,GAAM,EAAAq6E,aAAY,WAGhB,OAFA,EAAKY,YAE8B,IAA5B,EAAKnH,YAAY9zE,W,cAH1B,S,YAMJ,EAnkBA,GAAa,EAAA6yE,gB,msEC3Bb,cAIA,EACE,SAAmBtE,EAAqBvmE,GAArB,KAAAumE,KAAqB,KAAAvmE,QAG1C,aACE,WAAoB6jC,EAAck3B,EAAyB0H,GAAvC,KAAA5+B,QAAuC,KAAA4+B,WACzDrqE,KAAK84C,WAAW6pB,GAgJpB,OA7IE,YAAA7pB,WAAA,SAAW6pB,GAAX,WACE3iE,KAAKqqE,SAASK,MAAM,UAAW,4BAA4B,WACzD,IAAMnoB,EAAa,EAAK9W,MAAMuvC,WAC9B,GAAIz4B,EAAW3iD,SAAW+iE,EAAI/iE,OAC5B,MAAM,IAAIF,MAAM,2CAGlB,EAAKu7E,KAAOtY,EAAIp+D,KAAI,SAAC4pE,EAAIxuE,GAAM,WAAIu7E,EAAS/M,EAAI5rB,EAAW5iD,OAC3D,EAAKq0C,QAGL,EAAKmnC,SAAW,GAChB,EAAKF,KAAKt/D,SAAQ,SAACwyD,EAAIxuE,G,QACjBy7E,GAAW,E,IACf,IAAoB,QAAAjN,EAAGvmE,KAAKggD,QAAM,8BAAE,CAA/B,IAAMzhC,EAAK,QACd,IACK,EAAKk1D,QAAQl1D,KACsC,IAAjD,EAAKslB,MAAM6vC,kBAAkBj7E,QAAQ8lB,GAC1C,CACAi1D,GAAW,EACX,Q,iGAGAA,GACF,EAAKD,SAASr7E,KAAKH,UAM3B,YAAAq0C,MAAA,WACEh0C,KAAKq7E,QAAUr7E,KAAKyrC,MAAMuiC,YAAYzpE,KAAI,SAAA5E,GAAK,OAAAA,EAAEgpD,WAG7C,YAAA4yB,QAAN,SAAcC,EAAgCC,G,8EAC5C,MAAO,CAAP,EAAOz7E,KAAKqqE,SAASK,MAAM,UAAW,yBAAyB,gD,qFAS7D,GAPA1qE,KAAKg0C,QAGC8c,EAAmB0qB,EAAe3N,yBAGlC6N,EAAc17E,KAAKyrC,MAAM6vC,kBAC3BG,EAAY77E,SAAW87E,EAAY97E,OACrC,MAAM,IAAIF,MAAM,kFACZ+7E,EAAY77E,OAAM,cAAc87E,EAAY97E,QAGlD67E,EAAY9/D,SAAQ,SAACwK,EAAOxmB,GAC1B,IAAMkxB,EAAQ6qD,EAAY/7E,GAC1B,EAAK07E,QAAQxqD,GAAS1K,KAIlBw1D,EAAqB37E,KAAKm7E,SAAS1yE,MAAM,GAGzCmzE,EAAc57E,KAAKyrC,MAAMuiC,YACzBzrB,EAAaviD,KAAKyrC,MAAMuvC,WAE1Ba,EAAO,E,+EAOT,GALMC,EAAcH,EAASE,KACvBE,EAAS,EAAKd,KAAKa,IAIa,KADhCE,EAAYD,EAAOn0E,KAAKggD,OAAOrjD,KAAI,SAAA5E,GAAK,SAAK07E,QAAQ17E,OAC7CU,aAAQZ,GACpB,MAAM,IAAIC,MAAM,kCAAkCq8E,EAAOn0E,MAUxC,OANbq0E,EAAeD,EACrB,EAAAviC,OAAOE,QACH,WACA,aAAaoiC,EAAOn0E,KAAK1I,KAAI,KACzB+8E,EAAa13E,KAAI,SAACmB,EAAG/F,GAAM,UAAIo8E,EAAOn0E,KAAKggD,OAAOjoD,GAAE,MAAM+F,EAAE/D,KAAI,IAAI+D,EAAE7D,KAAKqD,KAAK,KAAI,OAAKA,KAAK,MAAK,KAExF,GAAM,EAAKmlE,SAASK,MACnC,OAAQqR,EAAOn0E,KAAK1I,MAAM,2EAAY,SAAA68E,EAAO5N,GAAGE,KAAKvd,EAAkBmrB,EAAcF,EAAO5N,GAAGt0B,oB,OAGnG,IAJMqiC,EAAa,UAIJt8E,SAAWm8E,EAAOn0E,KAAK8+D,QAAQ9mE,OAC5C,MAAM,IAAIF,MAAM,uD,OAIlBw8E,EAAWvgE,SAAQ,SAACmvB,EAAQnrC,GAC1B,IAAMiG,EAAIm2E,EAAOn0E,KAAK8+D,QAAQ/mE,GAC9B,GAAI,EAAK07E,QAAQz1E,GACf,MAAM,IAAIlG,MAAM,WAAWkG,EAAC,2BAA2Bm2E,EAAOn0E,KAAK1I,MAErE,EAAKm8E,QAAQz1E,GAAKklC,KAIdqxC,EAAkB,IAAI/5B,IAC5B85B,EAAWvgE,SAAQ,SAACmvB,EAAQnrC,G,YACpBiG,EAAIm2E,EAAOn0E,KAAK8+D,QAAQ/mE,G,IAC9B,IAAyC,kBAAAi8E,EAAYh2E,GAAGw2E,KAAE,8BAAE,CAAvD,IAAMC,EAA0B,QAC7BC,EAAwB/5B,EAAW85B,GACrCjB,GAAW,E,IACf,IAAgB,kBAAAkB,EAAsB10B,SAAM,8BAAE,CAAzC,IAAMv9C,EAAC,QACV,IAAK,EAAKgxE,QAAQhxE,GAAI,CACpB+wE,GAAW,EACX,Q,iGAGAA,GACFe,EAAgB/3D,IAAIi4D,I,qGAI1BV,EAAS77E,KAAI,MAAb67E,EAAQ,OAASQ,K,wCApDZN,EAAOF,EAAS/7E,O,QAAM,M,oCAuDvBkrC,EAAmB,GAChBnrC,EAAI,E,sBAAGA,EAAIK,KAAKyrC,MAAM8wC,mBAAmB38E,QAAM,YAGtD,GAFM48E,EAAcx8E,KAAKyrC,MAAM8wC,mBAAmB58E,QAE7BF,KADfg9E,EAAez8E,KAAKq7E,QAAQmB,IAEhC,MAAM,IAAI98E,MAAM,oBAAoB88E,EAAW,yB,OAE7B,IAAhBA,EAAA,MACF,GAAMC,EAAaC,W,cAAnB,S,aAGAD,EAAa76E,K,iBAEfkpC,EAAOhrC,KAAK28E,G,wBAZ4C98E,I,aAgB1D,OAFA,EAAA85C,OAAOE,QAAQ,WAAY,iCAC3BmX,EAAiB/X,UACV,CAAP,EAAOjO,qBAOb,EAlJA,GAAa,EAAA6xC,iB,uaCVb,cAEA,UAEO9mC,EADP,QACgBC,YAAYC,aAAaC,IACzC,UACA,UAmEa,EAAA4mC,MAAQ,CAInBp8E,KAAM,SAACq8E,EAA2C9wC,GAC9C,WAAI+wC,EAAUD,EAAY9wC,KAGhC,iBACE,WAAYC,GACVhsC,KAAK+8E,WAAQt9E,EACbO,KAAKg9E,IAAM,GACXh9E,KAAK2oD,YAASlpD,EACdO,KAAK2B,UAAOlC,EAERusC,IACFhsC,KAAK2B,KAAO,EAAAs7E,UAAUC,yBAAyBlxC,EAAUrqC,KAAMisC,aAcrE,OATE,sBAAI,mBAAI,C,IAAR,WACE,OAAO5tC,KAAK+8E,O,gCAGd,sBAAI,iBAAE,C,IAAN,WACE,OAAO/8E,KAAKg9E,K,gCAIhB,EAtBA,GAwBA,EACE,SAAYG,EAAyCj+E,GAC/Ci+E,aAAsB,EAAA31C,KAAKqD,WAC7B7qC,KAAKd,KAAOi+E,EAAWj+E,KACvBc,KAAKgrC,OAASmyC,EAAWnyC,OACzBhrC,KAAKqhB,WAAa,IAAI,EAAA80B,UAAUgnC,EAAWpyC,YAClCoyC,aAAsBtnC,EAAOunC,OACtCp9E,KAAKd,KAAOA,UAAQi+E,EAAWj+E,OAC/Bc,KAAKgrC,OAASmyC,EAAWnyC,SACzBhrC,KAAKqhB,WAAa,IAAI,EAAA80B,UAAU,EAAA8mC,UAAUI,8BAA8BF,KAG1En9E,KAAK4nD,OAAS,GACd5nD,KAAK0mE,QAAU,GACf1mE,KAAKs9E,aAAc,GAWvB,aAWE,WAAY7xC,EAAsC8xC,GAChD,IAAK9xC,EACH,MAAM,IAAIlsC,UAAU,kBAItBS,KAAKw9E,WAAW/xC,GAGhBzrC,KAAKy9E,eAAeF,GAGpBv9E,KAAK09E,iBAsmBT,OAnmBE,YAAApC,gBAAA,WACE,OAAOt7E,KAAK29E,kBAGd,YAAAC,cAAA,WACE,OAAO59E,KAAK69E,gBAGd,YAAAtB,iBAAA,WACE,OAAOv8E,KAAK89E,mBAGd,YAAAC,eAAA,WACE,OAAO/9E,KAAKg+E,iBAGd,YAAAhQ,UAAA,WACE,OAAOhuE,KAAKi+E,UAGd,YAAAjD,SAAA,WACE,OAAOh7E,KAAKk+E,QAGN,YAAAV,WAAR,SAAmB/xC,GAEjB,GAAIA,aAAiB,EAAAjE,KAAK6B,WACxBrpC,KAAKm+E,yBAAyB1yC,OACzB,MAAIA,aAAiBoK,EAAO+mC,OAGjC,MAAM,IAAIr9E,UAAU,gCAFpBS,KAAKo+E,wBAAwB3yC,KAKzB,YAAA0yC,yBAAR,SAAiC1yC,G,4BACzB4yC,EAAc,IAAIz9E,IACxBZ,KAAKi+E,SAAW,GAEhBj+E,KAAK29E,iBAAmB,GACxB39E,KAAK69E,eAAiB,GAEtB79E,KAAK89E,kBAAoB,GACzB99E,KAAKg+E,gBAAkB,GAEvBh+E,KAAKk+E,OAAS,GAEd,IAAMI,EAAe,IAAI19E,IAGzB,IAAK6qC,EAAMtlB,MACT,MAAM,IAAIzmB,MAAM,uCAElB,IAAM6+E,EAAkB,G,IACxB,IAAgB,QAAA9yC,EAAMtlB,OAAK,8BAAE,CAAxB,IAAMxmB,EAAC,QACV,GAAI0+E,EAAY57B,IAAI9iD,EAAET,MACpB,MAAM,IAAIQ,MAAM,0BAA0BC,EAAET,MAE9C,IAAMs/E,EAAex+E,KAAKi+E,SAASn+E,KAAK,IAAI2+E,EAAM9+E,IAAM,EACxD0+E,EAAY/8E,IAAI3B,EAAET,KAAOs/E,GACzBD,EAAgBz+E,KAAKH,EAAET,O,iGAIzB,IAAKusC,EAAMM,YACT,MAAM,IAAIrsC,MAAM,6C,IAElB,IAAgB,QAAA+rC,EAAMM,aAAW,8BAAE,CAAxBpsC,EAAC,QAAP,IACCkxB,EAAQwtD,EAAYp8E,IAAItC,EAAET,MAC9B,QAAcO,IAAVoxB,EAAqB,CACvB,IAAMzwB,EAAQ,IAAIq+E,EAClBr+E,EAAMuB,KAAO,CACXmsC,MAAO,CAACjsC,KAAM,EAAAo7E,UAAUyB,oBAAoB/+E,EAAEkC,OAC9C+rC,WAAY,EAAAqvC,UAAU0B,wBAAwBh/E,EAAE8sC,WAElD5b,EAAQ7wB,KAAKi+E,SAASn+E,KAAKM,GAAS,EACpCi+E,EAAY/8E,IAAI3B,EAAET,KAAO2xB,GAE3B7wB,KAAKi+E,SAASptD,GAAOksD,OAAS,EAC9B/8E,KAAKi+E,SAASptD,GAAO83B,OAAS,EAAApnD,OAAO02C,UAAUt4C,I,iGAIjD,IAASA,EAAI,EAAGA,EAAIK,KAAKi+E,SAASr+E,OAAQD,IACnCK,KAAKi+E,SAASt+E,GAAGgpD,SACpB3oD,KAAK29E,iBAAiB79E,KAAKH,GAC3BK,KAAK69E,eAAe/9E,KAAKy+E,EAAgB5+E,KAK7C,IAAK8rC,EAAMX,OACT,MAAM,IAAIprC,MAAM,wC,IAElB,IAAgB,QAAA+rC,EAAMX,QAAM,8BAAE,CAC5B,GADSnrC,EAAC,QACN0+E,EAAY57B,IAAI9iD,EAAET,MACpB,MAAM,IAAIQ,MAAM,2BAA2BC,EAAET,MAEzCs/E,EAAex+E,KAAKi+E,SAASn+E,KAAK,IAAI2+E,EAAM9+E,IAAM,EACxD0+E,EAAY/8E,IAAI3B,EAAET,KAAOs/E,GACzBx+E,KAAK89E,kBAAkBh+E,KAAK0+E,GAC5Bx+E,KAAKg+E,gBAAgBl+E,KAAKH,EAAET,O,iGAI9B,IAAKusC,EAAM7jC,KACT,MAAM,IAAIlI,MAAM,sC,IAElB,IAAwB,QAAA+rC,EAAM7jC,MAAI,8BAAE,CAClC,KADSg3E,EAAS,SACH1/E,KAEb,IAAK,IAAI2/E,EAAO,GAAIA,IAAQ,CAC1B,IAAM,EAAO,WAAWD,EAAU5zC,OAAM,IAAI6zC,EAC5C,IAAKP,EAAa77B,IAAI,GAAO,CAC3Bm8B,EAAU1/E,KAAO,EACjB,OAKN,GAAIo/E,EAAa77B,IAAIm8B,EAAU1/E,MAC7B,MAAM,IAAIQ,MAAM,yBAAyBk/E,EAAU1/E,MAE/Cs/E,EAAex+E,KAAKk+E,OAAOp+E,KAAK,IAAIs9E,EAAKwB,IAAc,EAC7DN,EAAah9E,IAAIs9E,EAAU1/E,KAAMs/E,I,iGAInC,IAAS7+E,EAAI,EAAGA,EAAIK,KAAKk+E,OAAOt+E,OAAQD,IAAK,CAC3C,IAAMiI,EAAO5H,KAAKk+E,OAAOv+E,GAEzB,KADMi/E,EAAYnzC,EAAM7jC,KAAKjI,IACdmrC,OACb,MAAM,IAAIprC,MAAM,4BAA4Bk/E,EAAU1/E,M,IAExD,IAAqB,kBAAA0/E,EAAU9zC,SAAM,8BAAE,CAAlC,IAAMA,EAAM,QAQf,QANyB,KADrBg0C,EAAYT,EAAYp8E,IAAI6oC,MAE9Bg0C,EAAY9+E,KAAKi+E,SAASn+E,KAAK,IAAI2+E,GAAW,EAC9CJ,EAAY/8E,IAAIwpC,EAAQg0C,IAE1Bl3E,EAAK8+D,QAAQ5mE,KAAKg/E,QAEqBr/E,IAAnCO,KAAKi+E,SAASa,GAAW/B,MAC3B,MAAM,IAAIr9E,MAAM,4CAA4Co/E,GAM9D,GAJA9+E,KAAKi+E,SAASa,GAAW/B,MAAQp9E,EAIR,aAArBi/E,EAAU5zC,OAAuB,CACnC,IAAK4zC,EAAU7zC,WAA4C,IAA/B6zC,EAAU7zC,UAAUnrC,SAAiBg/E,EAAU7zC,UAAU,GAAGrlC,EACtF,MAAM,IAAIhG,MAAM,uFAElB,IAAKk/E,EAAU9zC,QAAsC,IAA5B8zC,EAAU9zC,OAAOlrC,OACxC,MAAM,IAAIF,MAAM,4EAElBkI,EAAK8+D,QAAQ31D,MACbnJ,EAAK01E,aAAc,EAEnBt9E,KAAKi+E,SAASa,GAAW/B,OAAS,EAClC/8E,KAAKi+E,SAASa,GAAWn2B,OAAS,EAAApnD,OAAO02C,UAAU2mC,EAAU7zC,UAAU,GAAGrlC,K,kGAMhF,IAAS/F,EAAI,EAAGA,EAAIK,KAAKk+E,OAAOt+E,OAAQD,IAAK,CAC3C,IACMi/E,EAEN,GAHMh3E,EAAO5H,KAAKk+E,OAAOv+E,KACnBi/E,EAAYnzC,EAAM7jC,KAAKjI,IAEdwmB,MACb,MAAM,IAAIzmB,MAAM,2BAA2Bk/E,EAAU1/E,M,IAEvD,IAAoB,kBAAA0/E,EAAUz4D,QAAK,8BAAE,CAAhC,IACG24D,EADG34D,EAAK,QAEd,QAAyB,KADnB24D,EAAYT,EAAYp8E,IAAIkkB,IAEhC,MAAM,IAAIzmB,MAAM,uBAAuBymB,EAAK,eAAey4D,EAAU1/E,MAEvE0I,EAAKggD,OAAO9nD,KAAKg/E,GAEjB9+E,KAAKi+E,SAASa,GAAW9B,IAAIl9E,KAAKH,I,kGAItC,OAAO,GAGD,YAAAy+E,wBAAR,SAAgC3yC,G,UACxB4yC,EAAc,IAAIz9E,IACxBZ,KAAKi+E,SAAW,GAEhBj+E,KAAK29E,iBAAmB,GACxB39E,KAAK69E,eAAiB,GAEtB79E,KAAK89E,kBAAoB,GACzB99E,KAAKg+E,gBAAkB,GAEvBh+E,KAAKk+E,OAAS,GAMd,IAJA,IAAMI,EAAe,IAAI19E,IAGnB29E,EAAkB,GACf5+E,EAAI,EAAGA,EAAI8rC,EAAMszC,eAAgBp/E,IAAK,CAC7C,IAAMq/E,EAAYvzC,EAAMmc,OAAOjoD,GAC/B,GAAI0+E,EAAY57B,IAAIu8B,GAClB,MAAM,IAAIt/E,MAAM,0BAA0Bs/E,GAG5C,IAAK,IAAIp5E,EAAI,EAAGA,EAAI6lC,EAAMwzC,iBAAkBr5E,IAC1C,IAAqB,QAAjB,EAAA6lC,EAAMyzC,SAASt5E,UAAE,eAAE1G,UAAW8/E,EAAW,CAC3C,IAAM5+E,EAAQ,IAAIq+E,EAElB,IAD2C,QAAzB,EAAiB,QAAjB,EAAAhzC,EAAMyzC,SAASt5E,UAAE,eAAEjE,cAAM,eAAEw9E,eAC3BtpC,EAAOupC,cAAcC,YACrC,MAAM,IAAI3/E,MAAM,0CAMlB,IAJA,IAAMssC,EAAYP,EAAMyzC,SAASt5E,GAAIjE,OAAQvB,MAAM,IAAIy1C,EAAOypC,oBACxD39E,EAAO,EAAAs7E,UAAU0B,wBAAwB3yC,EAAU6B,YACnDC,EAAQ9B,EAAU8B,QAClBjsC,EAAO,GACJwI,EAAI,EAAGA,EAAIyjC,EAAMyxC,YAAcl1E,IACtCxI,EAAK/B,KAAK,EAAA83C,SAASC,aAAa/J,EAAMxrC,IAAI+H,GAAIjK,QAASktC,aAEzDltC,EAAMuB,KAAO,CAACmsC,MAAO,CAACjsC,KAAI,GAAG+rC,WAAYjsC,GACzC,IAAM68E,EAAex+E,KAAKi+E,SAASn+E,KAAKM,GAAS,EACjDi+E,EAAY/8E,IAAI09E,EAAWR,GAC3BD,EAAgBz+E,KAAKk/E,IAK3B,IAASr/E,EAAI,EAAGA,EAAI8rC,EAAM+zC,qBAAsB7/E,IAAK,CACnD,IAAMosC,EAAcN,EAAMsiC,aAAapuE,GACnCkxB,EAAQwtD,EAAYp8E,IAAI8pC,EAAY7sC,aAC1BO,IAAVoxB,IACIzwB,EAAQ,IAAIq+E,EACZ58E,EAAO,EAAAo7E,UAAUwC,wBAAwB1zC,GACzCpqC,EAAO,EAAAs7E,UAAU0B,wBAAwB5yC,EAAYU,YAC3DrsC,EAAMuB,KAAO,CAACmsC,MAAO,CAACjsC,KAAI,GAAG+rC,WAAYjsC,GACzCkvB,EAAQ7wB,KAAKi+E,SAASn+E,KAAKM,GAAS,EACpCi+E,EAAY/8E,IAAIyqC,EAAY7sC,OAAS2xB,IAEvC7wB,KAAKi+E,SAASptD,GAAOksD,OAAS,EAC9B/8E,KAAKi+E,SAASptD,GAAO83B,OAAS,EAAApnD,OAAO22C,cAAcnM,GAIrD,IAASpsC,EAAI,EAAGA,EAAIK,KAAKi+E,SAASr+E,OAAQD,IACnCK,KAAKi+E,SAASt+E,GAAGgpD,SACpB3oD,KAAK29E,iBAAiB79E,KAAKH,GAC3BK,KAAK69E,eAAe/9E,KAAKy+E,EAAgB5+E,KAK7C,IAASA,EAAI,EAAGA,EAAI8rC,EAAMi0C,gBAAiB//E,IAAK,CAC9C,IAAMggF,EAAal0C,EAAMi7B,QAAQ/mE,GACjC,GAAI0+E,EAAY57B,IAAIk9B,GAClB,MAAM,IAAIjgF,MAAM,2BAA2BigF,GAEvCnB,EAAex+E,KAAKi+E,SAASn+E,KAAK,IAAI2+E,GAAW,EACvDJ,EAAY/8E,IAAIq+E,EAAYnB,GAC5Bx+E,KAAK89E,kBAAkBh+E,KAAK0+E,GAC5Bx+E,KAAKg+E,gBAAgBl+E,KAAK6/E,GAI5B,IAAKl0C,EAAMyW,MACT,MAAM,IAAIxiD,MAAM,sCAElB,IAASC,EAAI,EAAGA,EAAI8rC,EAAMm0C,cAAejgF,IAAK,CAC5C,IACI,GADEi/E,EAAYnzC,EAAMyW,MAAMviD,IACRT,OACtB,IAAK,EAEH,IAAK,IAAI2/E,EAAO,EACd,EAAO,WAAWD,EAAW5zC,SAAQ,IAAI6zC,EACpCP,EAAa77B,IAAI,GAFJo8B,KAStB,GAAIP,EAAa77B,IAAI,GACnB,MAAM,IAAI/iD,MAAM,yBAAyB,GAErC8+E,EAAex+E,KAAKk+E,OAAOp+E,KAAK,IAAIs9E,EAAKwB,EAAY,IAAS,EACpEN,EAAah9E,IAAI,EAAMk9E,GAIzB,IAAS7+E,EAAI,EAAGA,EAAIK,KAAKk+E,OAAOt+E,OAAQD,IAAK,CAC3C,IAAMiI,EAAO5H,KAAKk+E,OAAOv+E,GAEzB,GAAiB,OADXi/E,EAAYnzC,EAAMyW,MAAMviD,IAE5B,MAAM,IAAID,MAAM,2BAA2BC,GAE7C,GAAmC,KAA/Bi/E,aAAS,EAATA,EAAWc,iBACb,MAAM,IAAIhgF,MAAM,4BAA4Bk/E,EAAU1/E,MAExD,IAAS0G,EAAI,EAAGA,GAAIg5E,aAAS,EAATA,EAAWc,iBAAiB95E,IAAK,CACnD,IAAMklC,EAAS8zC,aAAS,EAATA,EAAWlY,QAAQ9gE,GAQlC,QANyB,KADrBk5E,EAAYT,EAAYp8E,IAAI6oC,MAE9Bg0C,EAAY9+E,KAAKi+E,SAASn+E,KAAK,IAAI2+E,GAAW,EAC9CJ,EAAY/8E,IAAIwpC,EAAQg0C,IAE1Bl3E,EAAK8+D,QAAQ5mE,KAAKg/E,QAEqBr/E,IAAnCO,KAAKi+E,SAASa,GAAW/B,MAC3B,MAAM,IAAIr9E,MAAM,4CAA4Co/E,GAM9D,GAJA9+E,KAAKi+E,SAASa,GAAW/B,MAAQp9E,EAIN,aAAvBi/E,EAAU5zC,SAAyB,CACrC,GAAqC,IAAjC4zC,EAAUiB,qBAA6BjB,EAAUv9D,WAAW,GAAI3b,IAClE,MAAM,IAAIhG,MAAM,uFAElB,GAAkC,IAA9Bk/E,EAAUc,gBACZ,MAAM,IAAIhgF,MAAM,4EAElBkI,EAAK8+D,QAAQ31D,MACbnJ,EAAK01E,aAAc,EAEnBt9E,KAAKi+E,SAASa,GAAW/B,OAAS,EAClC/8E,KAAKi+E,SAASa,GAAWn2B,OAAS,EAAApnD,OAAO22C,cAAc0mC,EAAUv9D,WAAW,GAAI3b,OAMtF,IAAS/F,EAAI,EAAGA,EAAIK,KAAKk+E,OAAOt+E,OAAQD,IAAK,CAC3C,IACMi/E,EAEN,GAHMh3E,EAAO5H,KAAKk+E,OAAOv+E,GAGQ,KAF3Bi/E,EAAYnzC,EAAMyW,MAAMviD,IAEhBo/E,eACZ,MAAM,IAAIr/E,MAAM,2BAA2Bk/E,EAAU1/E,MAEvD,IAAS0G,EAAI,EAAGA,EAAIg5E,EAAUG,eAAiBn5E,IAAK,CAClD,IACMk5E,EADA34D,EAAQy4D,EAAUh3B,OAAOhiD,GAE/B,QAAyB,KADnBk5E,EAAYT,EAAYp8E,IAAIkkB,IAEhC,MAAM,IAAIzmB,MAAM,uBAAuBymB,EAAK,eAAey4D,EAAW1/E,QAExE0I,EAAKggD,OAAO9nD,KAAKg/E,GAEjB9+E,KAAKi+E,SAASa,GAAW9B,IAAIl9E,KAAKH,MAKhC,YAAA+9E,eAAR,sBAEQoC,EAAwB,IAAI19B,IAClCpiD,KAAK29E,iBAAiBhiE,SAAQ,SAAAhc,GACf,EAAKs+E,SAASt+E,GACtBq9E,IAAIrhE,SAAQ,SAAA/V,GACfk6E,EAAS17D,IAAIxe,SAQjB,IAHA,IAAMm6E,EAAaj+E,MAAMtB,KAAKs/E,GACxBE,EAAa,IAAIl+E,MAAc9B,KAAKk+E,OAAOt+E,QAAQiX,KAAK,S,aAG5D,IAAMopE,EAAYF,EAAWhvE,MAEC,SAA1BivE,EAAWC,GACbD,EAAWC,GAAa,SAGxBF,EAAWjgF,KAAKmgF,GAChBD,EAAWC,GAAa,OAExB,EAAK/B,OAAO+B,GAAWvZ,QAAQ/qD,SAAQ,SAACukE,GACtC,IAAMt+E,EAAO,EAAKq8E,SAASiC,GAC3B,QAA2B,IAAhBt+E,EAAK+mD,OACd,MAAM,IAAIjpD,MAAM,0CAElB,GAAIkC,EAAKm7E,QAAUkD,EACjB,MAAM,IAAIvgF,MAAM,iFAElBkC,EAAKo7E,IAAIrhE,SAAQ,SAACwkE,GAEhB,GAAwC,SAApCH,EAAWG,GACb,MAAM,IAAIzgF,MAAM,yBAG2B,UAApCsgF,EAAWG,IAClBJ,EAAWjgF,KAAKqgF,W,OAzBnBJ,EAAWngF,OAAS,G,KAiCrB,YAAA69E,eAAR,SAAuBF,GAErBv9E,KAAKogF,yBACLpgF,KAAKqgF,wBACLrgF,KAAKsgF,0BAED/C,GACFA,EAAiBE,eAAez9E,MAIlCA,KAAKugF,iBASP,YAAAA,cAAA,WAGE,IAHF,I,EAAA,OACMnpE,EAAS,E,WAEJzX,GACP,IAAK,EAAKu+E,OAAOv+E,GAAG29E,Y,OAElBlmE,IAEA,EAAK8mE,OAAOv+E,GAAG+mE,QAAQ/qD,SAAQ,SAAA6kE,GAC7B,EAAKvC,SAASuC,GAAKzD,OAAS,KAE9B,EAAKmB,OAAOr+E,OAAOF,EAAG,GACtBA,I,EATKA,EAAC,WAYJyX,EAAS,IAEX,EAAK8mE,OAAOv+E,GAAGioD,OAAOjsC,SAAQ,SAAAvb,GAC5B,IAAMogF,EAAM,EAAKvC,SAAS79E,GAAO48E,IAAI38E,QAAQV,EAAIyX,IACpC,IAATopE,IACF,EAAKvC,SAAS79E,GAAO48E,IAAIwD,GAAO7gF,MAGpC,EAAKu+E,OAAOv+E,GAAG+mE,QAAQ/qD,SAAQ,SAAAvb,GACzB,EAAK69E,SAAS79E,GAAO28E,OAAS,EAAKkB,SAAS79E,GAAO28E,QAAWp9E,EAAIyX,IACpE,EAAK6mE,SAAS79E,GAAO28E,MAASp9E,O,EAtB7BA,G,OAAAA,EAAI,EAAGA,EAAIK,KAAKk+E,OAAOt+E,OAAQD,I,EAA/BA,KAAI,EA2BbyX,EAAS,E,iBAEAzX,GAEP,IAA+B,IAA3B,EAAKs+E,SAASt+E,GAAGa,OAA+D,IAAhD,EAAKs9E,kBAAkBz9E,QAAQV,EAAIyX,G,OACrEA,IACA,EAAK6mE,SAASp+E,OAAOF,EAAG,GACxBA,I,EALKA,EAAC,WAQR,GAAIyX,EAAS,EAAG,CACd,IAAI,GAAO,OAGmB3X,IAA1B,EAAKw+E,SAASt+E,GAAGa,OAAiD,IAA3B,EAAKy9E,SAASt+E,GAAGa,MAE7C,KADb,EAAM,EAAK09E,OAAO,EAAKD,SAASt+E,GAAGa,MAAMkmE,QAAQrmE,QAAQV,EAAIyX,MAE3D,EAAK8mE,OAAO,EAAKD,SAASt+E,GAAGa,MAAMkmE,QAAQ,GAAO/mE,IAKvC,KADb,EAAM,EAAKg+E,iBAAiBt9E,QAAQV,EAAIyX,MAEtC,EAAKumE,iBAAiB,GAAOh+E,GAKjC,EAAKs+E,SAASt+E,GAAGy8E,GAAGzgE,SAAQ,SAAA/T,IAEb,KADb,EAAM,EAAKs2E,OAAOt2E,GAAMggD,OAAOvnD,QAAQV,EAAIyX,MAEzC,EAAK8mE,OAAOt2E,GAAMggD,OAAO,GAAOjoD,MAGD,IAA/B,EAAKs+E,SAASt+E,GAAGy8E,GAAGx8E,SAGT,KADb,EAAM,EAAKk+E,kBAAkBz9E,QAAQV,EAAIyX,MAEvC,EAAK0mE,kBAAkB,GAAOn+E,G,EApC7BA,G,OAAT,IAASA,EAAI,EAAGA,EAAIK,KAAKi+E,SAASr+E,OAAQD,I,EAAjCA,KAAI,GA+CP,YAAA8gF,WAAR,SAAmBR,G,QACXr4E,EAAO5H,KAAKk+E,OAAO+B,GACzB,GAAIr4E,EAAKggD,OAAOhoD,OAAS,EACvB,MAAM,IAAIF,MAAM,yDAElB,GAAIkI,EAAK8+D,QAAQ9mE,OAAS,EACxB,IAAK,IAAID,EAAI,EAAGA,EAAIiI,EAAK8+D,QAAQ9mE,OAAQD,IACvC,GAAIK,KAAKi+E,SAASr2E,EAAK8+D,QAAQ/mE,IAAIy8E,GAAGx8E,OAAS,EAC7C,MAAM,IAAIF,MAAM,uFAMtBkI,EAAK01E,aAAc,EACnB,IAAMoD,EAAkB94E,EAAKggD,OAAO,GAC9B+4B,EAAmB/4E,EAAK8+D,QAAQ,GAChCka,EAAuB5gF,KAAKi+E,SAAS0C,GAAkBvE,GAGvDyE,EAAW7gF,KAAKi+E,SAASyC,GAAiBtE,GAAG/7E,QAAQ4/E,GAE3D,IAAkB,IAAdY,EACF,MAAM,IAAInhF,MAAM,yEAElBM,KAAKi+E,SAASyC,GAAiBtE,GAAGv8E,OAAOghF,EAAU,GAGnD7gF,KAAKi+E,SAAS0C,GAAkB3D,IAAM,GAGtC,IAAMnsD,EAAQ7wB,KAAK89E,kBAAkBz9E,QAAQsgF,GAM7C,IALe,IAAX9vD,IACF7wB,KAAK89E,kBAAkBjtD,GAAS6vD,GAI9BE,GAAwBA,EAAqBhhF,OAAS,E,IACxD,IAAwB,QAAAghF,GAAoB,8BAAE,CAAzC,IAAM,EAAS,QACZE,EAAe9gF,KAAKk+E,OAAO,GAAWt2B,OAAOvnD,QAAQsgF,GAE3D,IAAsB,IAAlBG,EACF,MAAM,IAAIphF,MAAM,4EAElBM,KAAKk+E,OAAO,GAAWt2B,OAAOk5B,GAAgBJ,EAC9C1gF,KAAKi+E,SAASyC,GAAiBtE,GAAGt8E,KAAK,I,mGAK7C,YAAAugF,sBAAA,W,QACMJ,EAAY,E,IAChB,IAAmB,QAAAjgF,KAAKk+E,QAAM,8BAAE,CAA3B,IAAMt2E,EAAI,QAEb,GAAoB,YAAhBA,EAAKojC,OAAsB,CAE7B,GAA2B,IAAvBpjC,EAAKggD,OAAOhoD,OACd,MAAM,IAAIF,MAAM,iDAElB,GAA4B,IAAxBkI,EAAK8+D,QAAQ9mE,QAAwC,IAAxBgI,EAAK8+D,QAAQ9mE,OAC5C,MAAM,IAAIF,MAAM,wDAGlB,GAA4B,IAAxBkI,EAAK8+D,QAAQ9mE,QAA8D,IAA9CI,KAAKi+E,SAASr2E,EAAK8+D,QAAQ,IAAIsW,IAAIp9E,OAClE,MAAM,IAAIF,MAAM,yEAElBM,KAAKygF,WAAWR,GAElBA,K,mGAIJ,YAAAG,uBAAA,W,QACMH,EAAY,E,IAChB,IAAmB,QAAAjgF,KAAKk+E,QAAM,8BAER,aAFP,QAEJlzC,QACPhrC,KAAKygF,WAAWR,GAElBA,I,mGAIJ,YAAAc,aAAA,SAAah7E,GACX,OAAQA,EAAEilC,QAER,IAAK,OACL,IAAK,UACL,IAAK,OACH,OAAO,EACT,QACE,OAAO,IAIb,YAAAs1C,wBAAA,W,YACE,IAAmB,QAAAtgF,KAAKk+E,QAAM,8BAAE,CAA3B,IAAMt2E,EAAI,QACb,GAAoB,SAAhBA,EAAKojC,OAAmB,CAC1B,IAAMoI,EAAOpzC,KAAKi+E,SAASr2E,EAAK8+D,QAAQ,IAAIsW,IAC5C,GAAoB,IAAhB5pC,EAAKxzC,QAAgBI,KAAK+gF,aAAa/gF,KAAKk+E,OAAO9qC,EAAK,KAAM,CAChE,IAAM4tC,EAAQhhF,KAAKk+E,OAAO9qC,EAAK,IAC/BxrC,EAAKyZ,WAAW/f,IAAI,wBAAyB,SAAW0/E,EAAY,QAE/C,SAAjBA,EAAMh2C,SACRpjC,EAAKyZ,WAAW/f,IAAI,aAAc,QAAS0/E,EAAM3/D,WAAWk1B,SAAS,QACrE3uC,EAAKyZ,WAAW/f,IAAI,aAAc,QAAS0/E,EAAM3/D,WAAWk1B,SAAS,SAEvEv2C,KAAKygF,WAAWrtC,EAAK,O,mGAK/B,EA7nBA,I,q/CC5CA,+BAIA,OAHE,YAAA7oC,IAAA,SAAI02E,EAA4BC,EAAkBC,KAGpD,EAJA,GAKA,2BAsBA,OArBE,YAAA52E,IAAA,SAAI62E,EAA2BC,EAAiBC,GAE9Cn4E,QAAQoB,IAAOvK,KAAKuhF,MAAMH,GAAS,KAAIE,EAAW,QAAaA,EAAW,QAAa,IAAKD,IAGtF,YAAAE,MAAR,SAAcH,GACZ,OAAQA,GACN,IAAK,UACH,MAAO,gBACT,IAAK,OACH,MAAO,aACT,IAAK,UACH,MAAO,gBACT,IAAK,QACH,MAAO,gBACT,IAAK,QACH,MAAO,cACT,QACE,MAAM,IAAI1hF,MAAM,yBAAyB0hF,KAGjD,EAtBA,GAwBMI,EAAiB,CACrB7nC,QAAS,IACT8nC,KAAM,IACN7nC,QAAS,IACTxwC,MAAO,IACPs4E,MAAO,KAGHC,IAAmB,MAChB,KAAG,IAAIC,EACd,EAAU,QAAG,IAAIC,E,GAEbC,EAAwB,CAC5BC,SAAU,UACVC,gBAAiB,UACjBC,aAAa,EACbC,mBAAmB,GAEjBC,IAAiB,MAC2C,IAAKL,EAAgD,GAMrH,SAASv3E,EACL/I,EAA8BC,EAAeC,EAAsBoC,GACrE,QAAarE,IAATgC,EAEF,OAkB6B6/E,EAlBE9/E,EAmB1B,CACLm4C,QAASpvC,EAAIovC,QAAQnvC,KAAK,KAAM82E,GAChCG,KAAMl3E,EAAIk3E,KAAKj3E,KAAK,KAAM82E,GAC1B1nC,QAASrvC,EAAIqvC,QAAQpvC,KAAK,KAAM82E,GAChCl4E,MAAOmB,EAAInB,MAAMoB,KAAK,KAAM82E,GAC5BI,MAAOn3E,EAAIm3E,MAAMl3E,KAAK,KAAM82E,IAvBvB,QAAa7hF,IAATiC,EAET0gF,EAAY5gF,EAAyBC,QAChC,GAAoB,iBAATC,QAA8BjC,IAATqE,EAErCs+E,EAAY5gF,EAAyBC,QAChC,GAAoB,iBAATC,QAA8BjC,IAATqE,EAErCs+E,EAAY5gF,EAAyBE,EAAM,EAAGD,OACzC,IAAoB,iBAATC,GAAqC,iBAAToC,EAI5C,MAAM,IAAIvE,UAAU,kBAFpB6iF,EAAY5gF,EAAyBE,EAAMoC,EAAMrC,GAMrD,IAAiC6/E,EAajC,SAASc,EAAYhB,EAA2BC,EAAiBnhE,EAAeohE,GAC9E,IAAM1Q,EAASuR,EAAkBb,GAAY,KAAOa,EAAkB,IAClEX,EAAeJ,GAAYI,EAAe5Q,EAAOoR,mBAIjDpR,EAAOqR,cACTZ,GAAa,IAAI1tE,MAAO0uE,cAAa,IAAIhB,GAGvCzQ,EAAOsR,kBAIXP,EAAoB/Q,EAAOmR,UAAUx3E,IAAI62E,EAAUC,EAASC,KAI9D,SAAU/2E,GA2BR,SAAgBypC,EAAM48B,GACpBuR,EAAoB,GACpB7gF,EAAI,GAAIsvE,GAAU,IAEpB,SAAgBtvE,EAAIggF,EAAkB1Q,GACpC,GAAiB,MAAb0Q,EACFttC,EAAM48B,OACD,CACL,IAAM0R,EAAiBH,EAAkBb,IAAaQ,EACtDK,EAAkBb,GAAY,CAC5BS,SAAUnR,EAAOmR,UAAYO,EAAeP,SAC5CC,gBAAiBpR,EAAOoR,iBAAmBM,EAAeN,gBAC1DC,iBAAqCxiF,IAAvBmxE,EAAOqR,YAA6BK,EAAeL,YAAcrR,EAAOqR,YACtFC,uBAAiDziF,IAA7BmxE,EAAOsR,kBAAmCI,EAAeJ,kBACftR,EAAOsR,oBAtC3D,EAAAvoC,QAAhB,SAAwBn4C,EAAcC,GACpC8I,EAAI,UAAW/I,EAAMC,IAIP,EAAAggF,KAAhB,SAAqBjgF,EAAcC,GACjC8I,EAAI,OAAQ/I,EAAMC,IAIJ,EAAAm4C,QAAhB,SAAwBp4C,EAAcC,GACpC8I,EAAI,UAAW/I,EAAMC,IAIP,EAAA2H,MAAhB,SAAsB5H,EAAcC,GAClC8I,EAAI,QAAS/I,EAAMC,IAIL,EAAAigF,MAAhB,SAAsBlgF,EAAcC,GAClC8I,EAAI,QAAS/I,EAAMC,IAGL,EAAAuyC,MAAK,EAIL,EAAA1yC,IAAG,EAiBH,EAAAo4C,WAAhB,SAA2B35C,GACzB,IAAM6wE,EAAwB,GAC1B7wE,EAAIwiF,WACN3R,EAAOoR,gBAAkBjiF,EAAIwiF,UAE/BjhF,EAAI,GAAIsvE,IArDZ,CAAUrmE,MAAG,KA0DA,EAAAkvC,OAAiBlvC,EAkB9B,iBACE,WACW+2E,EAAyCpiF,EAAqBsjF,EAC7DC,EAAsDC,EAA2B/xD,GADlF,KAAA2wD,WAAyC,KAAApiF,OAAqB,KAAAsjF,YAC7D,KAAAC,cAAsD,KAAAC,QAA2B,KAAA/xD,MAc/F,OAZE,YAAAY,IAAA,WACE,OAAOvxB,KAAKyiF,YAAYziF,OAGpB,YAAA2iF,WAAN,W,mEACE,QAAiBljF,IAAbO,KAAK2wB,UAAoClxB,IAAfO,KAAK0iF,MACjC,MAAM,IAAIhjF,MAAM,wBAGhB,OADAM,KAAK2wB,IAAIyoD,WACF,CAAP,EAAOp5E,KAAK2wB,IAAIqpD,uBAAuBh6E,KAAK0iF,eAGlD,EAjBA,GAmBA,EACE,SACWpB,EAAyCpiF,EAAqBsjF,EAA0BI,GAAxF,KAAAtB,WAAyC,KAAApiF,OAAqB,KAAAsjF,YAA0B,KAAAI,WAGrG,aAQE,WAAoBC,EAA0BC,EAAyBC,GA+H/D,KAAAC,UAAW,EASX,KAAAC,cAAgB,EAvItBjjF,KAAKgjF,UAAW,EAChBhjF,KAAKkjF,sBAAuCzjF,IAApBojF,EAAgC,IAAQA,EAChE7iF,KAAKmjF,qBAAqC1jF,IAAnBqjF,EAA+B,GAAKA,EAC3D9iF,KAAKojF,kCAA+D3jF,IAAhCsjF,EAA4C,IAAOA,EAqI3F,OAhJS,EAAAlkE,OAAP,SAAc+xD,GACZ,YAAenxE,IAAXmxE,EACK,IAAI5wE,KAEN,IAAIA,KAAK4wE,EAAOiS,gBAAiBjS,EAAOkS,eAAgBlS,EAAOmS,8BAWxE,YAAAzxD,MAAA,WACEtxB,KAAKgjF,UAAW,EAChBhjF,KAAKqjF,cAAgB,GACrBrjF,KAAKsjF,WAAa,EAAA7vE,MAClBzT,KAAKijF,cAAgB,GAIvB,YAAAM,KAAA,WAEE,IADAvjF,KAAKgjF,UAAW,EACThjF,KAAKijF,cAAgBjjF,KAAKqjF,cAAczjF,OAAQI,KAAKijF,gBAC1DjjF,KAAKwjF,YAAYxjF,KAAKqjF,cAAcrjF,KAAKijF,iBAQ7C,YAAAvY,MAAA,SAAS4W,EAAkCpiF,EAAc26D,EAA4BlpC,GAArF,WAEQ+5C,EAAQ1qE,KAAKgjF,SAAWhjF,KAAKktC,MAAMo0C,EAAUpiF,EAAMyxB,QAAOlxB,EAC5DgkF,GAAY,EAEVh+C,EAAMo0B,IAGZ,GAAIp0B,GAA2C,mBAA5BA,EAAmBlc,KAEpC,OADAk6D,GAAY,EACL,IAAI78E,SAAW,SAAC+iB,EAASoH,GAC7B0U,EACIlc,MACG,SAAMnpB,GAAK,qC,yDACLsqE,EACF,GAAMA,EAAMn5C,OADV,M,OACF,S,wBAEF5H,EAAQvpB,G,cAEV,SAAMsjF,GAAM,qC,yDACNhZ,EACF,GAAMA,EAAMn5C,OADV,M,OACF,S,wBAEFR,EAAO2yD,G,iBAIrB,IAAKD,GAAa/Y,EAAO,CACvB,IAAM,EAAWA,EAAMn5C,MACvB,GAAI,GAAqC,mBAAlB,EAAShI,KAC9B,OAAO,IAAI3iB,SAAW,SAAC+iB,EAASoH,GAC9B,EAAWxH,MACP,WACEI,EAAQ8b,MAEV,SAACi+C,GACC3yD,EAAO2yD,SAKnB,OAAOj+C,GAIT,YAAAyH,MAAA,SAAMo0C,EAAkCpiF,EAAcyxB,GAAtD,WACE,IAAK3wB,KAAKgjF,SACR,MAAM,IAAItjF,MAAM,+BAElB,QAAYD,IAARkxB,EAAmB,CACrB,IAAM6xD,EAAY,EAAA/uE,MAElB,OADAzT,KAAKu6E,MAAMiI,GACJ,IAAImB,EAAMrC,EAAUpiF,EAAMsjF,GAAW,SAAAx9E,GAAK,SAAK4+E,QAAQ5+E,MAE9D,IAAM09E,EAAoB/xD,EAAIkoD,aAC9B,OAAO,IAAI8K,EAAMrC,EAAUpiF,EAAM,GAAG,SAAM8F,GAAC,gEAAI,SAAAhF,KAAKuxB,IAAIvsB,YAAI09E,EAAO/xD,IAKzD,YAAAY,IAAd,SAAkBm5C,G,gGACQ,SAAMA,EAAMiY,c,cAA9BC,EAAkB,SACpB5iF,KAAKqjF,cAAczjF,OAASI,KAAKkjF,mBACnCljF,KAAKqjF,cAAcvjF,KAAK,IAAI+jF,EAAYnZ,EAAM4W,SAAU5W,EAAMxrE,KAAMwrE,EAAM8X,UAAWI,IACrF5iF,KAAKu6E,MAAMqI,I,YAIP,YAAAgB,QAAR,SAAgBlZ,GACd,IAAMkY,EAAkB,EAAAnvE,MACpBzT,KAAKqjF,cAAczjF,OAASI,KAAKkjF,mBACnCljF,KAAKqjF,cAAcvjF,KAAK,IAAI+jF,EAAYnZ,EAAM4W,SAAU5W,EAAMxrE,KAAMwrE,EAAM8X,UAAWI,IACrF5iF,KAAKu6E,MAAMqI,KAIP,YAAAY,YAAR,SAAoB9Y,GAClB,EAAAjxB,OAAOE,QACH,YAAY+wB,EAAM4W,UACd5W,EAAMkY,QAAUlY,EAAM8X,WAAWsB,QAAQ,GAAE,gBAAgBpZ,EAAMxrE,KAAI,QAAQwrE,EAAMkY,QAAQkB,QAAQ,KAGrG,YAAAvJ,MAAR,SAAcwJ,GACZ,GAAI/jF,KAAKqjF,cAAczjF,OAASI,KAAKijF,eAAiBjjF,KAAKmjF,iBACvDY,EAAc/jF,KAAKsjF,YAActjF,KAAKojF,6BAA8B,CAGtE,IAAK,IAAMY,EAAkBhkF,KAAKijF,cAAejjF,KAAKijF,cAAgBe,EAAkBhkF,KAAKmjF,iBACxFnjF,KAAKijF,cAAgBjjF,KAAKqjF,cAAczjF,OACxCI,KAAKijF,gBACRjjF,KAAKwjF,YAAYxjF,KAAKqjF,cAAcrjF,KAAKijF,gBAG3CjjF,KAAKsjF,WAAa,EAAA7vE,QAItB,sBAAI,sBAAO,C,IAAX,WACE,OAAOzT,KAAKgjF,U,gCAYhB,EAjJA,GAAa,EAAAiB,WAsJA,EAAAxwE,IAA8B,oBAAhBvJ,aAA+BA,YAAYuJ,IAAO,WAAM,OAAAvJ,YAAYuJ,OAAQE,KAAKF,K,kGC3b5G,cACA,UAEA,UAGOoiC,EADP,QACgBC,YAAYC,aAAaC,IACzC,UAEA,aAEE,cAwDF,OAtDE,YAAAjnC,KAAA,SAAKyjB,EAAiB+qD,EAAsC2G,GAC1D,IAAKA,EAEH,IAEE,YADAlkF,KAAKmkF,mBAAmB3xD,EAAK+qD,GAE7B,MAAOv4E,GACP,QAAoBvF,IAAhBykF,EACF,MAAMl/E,EAKZhF,KAAKokF,kBAAkB5xD,EAAK+qD,IAGtB,YAAA4G,mBAAR,SAA2B3xD,EAAiB+qD,GAC1C,IAAM8G,EAAa,EAAA78C,KAAK0D,WAAW3/B,OAAOinB,GAE1C,GADkB,EAAAolB,SAASC,aAAawsC,EAAWh5C,WACnC,EACd,MAAM,IAAI3rC,MAAM,8CAGlBM,KAAKskF,QACDD,EAAWl5C,YAAY5mC,KAAI,SAAA5E,GAAK,OAAEsrC,OAAQtrC,EAAEsrC,OAAkB3pB,QAAS,EAAAs2B,SAASC,aAAal4C,EAAE2hB,aAEnGthB,KAAKukF,OAAS,EAAA3H,MAAMp8E,KAAK6jF,EAAW54C,MAAQ8xC,IAGtC,YAAA6G,kBAAR,SAA0B5xD,EAAiB+qD,GACzC,IAAMlyD,EAAK,IAAI,EAAA6K,YAAYwB,WAAWlF,GAChCgyD,EAAW3uC,EAAOlzC,iBAAiB8hF,0BAA0Bp5D,GAAIq5D,QAEvE,GADkB,EAAA9sC,SAASC,aAAa2sC,EAASn5C,aACjC,EACd,MAAM,IAAI3rC,MAAM,8CAElBM,KAAKskF,QAAU,GACf,IAAK,IAAI3kF,EAAI,EAAGA,EAAI6kF,EAASG,oBAAqBhlF,IAAK,CACrD,IAAMilF,EAAUJ,EAASr5C,YAAYxrC,GACrCK,KAAKskF,QAAQxkF,KAAK,CAACmrC,OAAQ25C,aAAO,EAAPA,EAAS35C,SAAoB3pB,QAAS,EAAAs2B,SAASC,aAAa+sC,EAAQtjE,aAGjGthB,KAAKukF,OAAS,EAAA3H,MAAMp8E,KAAKgkF,EAAS/4C,QAAU8xC,IAI9C,sBAAI,oBAAK,C,IAAT,WACE,OAAOv9E,KAAKukF,Q,gCAId,sBAAI,qBAAM,C,IAAV,WACE,OAAOvkF,KAAKskF,S,gCAEhB,EA1DA,GAAa,EAAAO,S,gICGA,EAAAnqB,aACT,CAAC,UAAW,UAAW,QAAS,QAAS,OAAQ,SAAU,SAAU,SAC5D,EAAAoqB,UAAwC,CAAC,QAAS,QAAS,OAAQ,SAAU,SAAU,SACvF,EAAAC,YAA0C,CAAC,UAAW,Y,qWCgCnE,SAASC,EAAc1jE,EAAiB2jE,GACtC,GAAIA,EAASC,SAAS,KAAM,CAE1B,IAAMC,EAAa5iF,OAAO++B,SAAS2jD,EAASzmE,UAAU,EAAGymE,EAASrlF,OAAS,GAAI,IAC/E,OAAQwzB,MAAM+xD,IAAeA,GAAc7jE,EACtC,GAAmC,IAA/B2jE,EAASzrE,MAAM,KAAK5Z,OAAc,CAE3C,IAAMwlF,EAAOH,EAASzrE,MAAM,KAEtB6rE,GADAF,EAAa5iF,OAAO++B,SAAS8jD,EAAK,GAAI,IAC3B7iF,OAAO++B,SAAS8jD,EAAK,GAAI,KAC1C,OAAQhyD,MAAM+xD,KAAgB/xD,MAAMiyD,IAAaF,GAAc7jE,GAAWA,GAAW+jE,EAGrF,OAAO9iF,OAAO++B,SAAS2jD,EAAU,MAAQ3jE,E,0EArC7C,2BAAgC1Z,EAAkBsmE,EAA0BoX,G,gBAC1E,IAAmB,QAAAA,GAAK,8BAAE,CAArB,IAAMC,EAAI,QACPv6C,EAASu6C,EAAK,GACdt6C,EAASs6C,EAAK,GACdC,EAAkBD,EAAK,GACvBjX,EAASiX,EAAK,GACdhX,EAASgX,EAAK,GAEpB,GAAI39E,EAAKojC,SAAWA,E,IAClB,IAAoB,kBAAAkjC,IAAM,8BAAE,CAAvB,IAAM1E,EAAK,QAEd,IAAIA,EAAMv+B,SAAWA,GAA4B,YAAjBu+B,EAAMv+B,QAAmC,KAAXA,IACxD+5C,EAAcxb,EAAMloD,QAASkkE,GAC/B,MAAO,CAAClX,OAAM,EAAEC,OAAM,I,oMAOhC,MAAM,IAAIhvE,UAAU,4BAA4BqI,EAAKojC,OAAM,kBACvDkjC,EAAO3pE,KAAI,SAAAjD,GAAO,OAAGA,EAAI2pC,QAAU,WAAS,KAAK3pC,EAAIggB,WAAWpc,KAAK,S,wGC5C3E,IAKiB4wC,EAAYC,EAAaC,EAC5BvL,EANd,UAKiBqL,EAAA,EAAAA,cAAA,EAAAA,YAAW,IAACC,EAAA,EAAAA,eAAA,EAAAA,aAAY,IAACC,EAAA,EAAAA,MAAA,EAAAA,IAAG,KAC/BvL,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KACvB,2BACA,qBACA,iBACA,uBACA,uBACA,qBACA,uBACA,mBACA,yBACA,yBACA,wBACA,sCACA,wCAOJ,SAAiBqL,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYyvC,KAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAAE,uBAAa,qBAAW,qBADhB,GAAAzvC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAY0vC,KAAA,EAAAA,iBAAA,EAAAA,eAAc,KACxB,2BACA,qBACA,qBACA,mBACA,uBACA,qBACA,qBACA,qBACA,uBACA,mBACA,0BACA,wBACA,wBACA,wBACA,8BACA,gCACA,4BAlBsC,GAAA1vC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyB5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAY2vC,KAAA,EAAAA,WAAA,EAAAA,SAAQ,KAAE,2BAAe,qBADG,GAAA3vC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,IAAYopC,KAAA,EAAAA,gBAAA,EAAAA,cAAa,KAAE,iBAAU,iCAAiB,qCAAmB,2BADjC,GAAAppC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAO5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAqGX,OA/FE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA6lF,eAAP,SAAsBh7D,EAA4B+P,GAChD,OAAQA,GAAO,IAAIkrD,GAASF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ3E,EAAAk7D,2BAAP,SAAkCl7D,EAA4B+P,GAE5D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIkrD,GAASF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQlF,YAAAvoB,IAAA,SAAIuuB,EAAe+J,GACjB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI5I,WACpCw4C,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA00D,UAAA,WACE,IAAInoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAA4uE,WAAP,SAAkBC,GAChBA,EAAQhrD,YAAY,IAOf,EAAAirD,OAAP,SAAcD,EAA8B9/B,GAC1C8/B,EAAQzrD,eAAe,EAAG2rB,EAAW,IAQhC,EAAAggC,gBAAP,SAAuBF,EAA8BrkF,GACnDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAwpD,eAAP,SAAsBH,EAA8BI,GAClDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAC,SAAP,SAAgBL,GAEd,OADaA,EAAQ9qD,aAIhB,EAAAorD,YAAP,SAAmBN,EAA8B9/B,GAG/C,OAFA2/B,EAAME,WAAWC,GACjBH,EAAMI,OAAOD,EAAS9/B,GACf2/B,EAAMQ,SAASL,IAE1B,EAxGA,GAAa,EAAAH,MAAK,EADsB,GAAA9vC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA8G5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA6FX,OAvFE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAwmF,mBAAP,SAA0B37D,EAA4B+P,GACpD,OAAQA,GAAO,IAAIwS,GAAaw4C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ/E,EAAA47D,+BAAP,SAAsC57D,EAA4B+P,GAEhE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIwS,GAAaw4C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAOtF,YAAAzqB,MAAA,SAAMw6B,GACJ,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI0wC,gBACpCd,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MASlB,YAAA2iB,WAAA,SAAWm5C,GACT,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAMvE,EAAAC,eAAP,SAAsBX,GACpBA,EAAQhrD,YAAY,IAOf,EAAA4rD,SAAP,SAAgBZ,EAA8Ba,GAC5Cb,EAAQzrD,eAAe,EAAGssD,EAAa,IAOlC,EAAAC,cAAP,SAAqBd,EAA8Be,GACjDf,EAAQzrD,eAAe,EAAGwsD,EAAkB,IAOvC,EAAAC,aAAP,SAAoBhB,GAElB,OADaA,EAAQ9qD,aAIhB,EAAA+rD,gBAAP,SACIjB,EAA8Ba,EAC9BE,GAIF,OAHA55C,EAAUw5C,eAAeX,GACzB74C,EAAUy5C,SAASZ,EAASa,GAC5B15C,EAAU25C,cAAcd,EAASe,GAC1B55C,EAAU65C,aAAahB,IAElC,EAhGA,GAAa,EAAA74C,UAAS,EADkB,GAAA4I,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA4GX,OAtGE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAmnF,wBAAP,SAA+Bt8D,EAA4B+P,GACzD,OAAQA,GAAO,IAAI8rD,GAAkBd,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQpF,EAAAu8D,oCAAP,SAA2Cv8D,EAA4B+P,GAErE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI8rD,GAAkBd,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAM3F,YAAAw8D,QAAA,WACE,IAAIjwE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAIqS,SAASl9B,KAAKi+B,OAAS7mB,GACzC0+B,EAAYC,aAAaC,IAAIyvC,mBAAmB6B,SAMlE,YAAAh6C,SAAA,WACE,IAAIl2B,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAKi+B,OAAS7mB,GAAUpX,KAAK6qB,GAAIkS,WAAW,EAAG,IASpF,YAAAwQ,SAAA,SAASo5C,GACP,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAMvE,EAAAY,oBAAP,SAA2BtB,GACzBA,EAAQhrD,YAAY,IAOf,EAAAusD,WAAP,SAAkBvB,EAA8BoB,GAC9CpB,EAAQlsD,aAAa,EAAGstD,EAASvxC,EAAYC,aAAaC,IAAIyvC,mBAAmB6B,UAO5E,EAAAG,YAAP,SAAmBxB,EAA8B34C,GAC/C24C,EAAQ5rD,cAAc,EAAGiT,EAAU24C,EAAQlpD,WAAW,EAAG,KAOpD,EAAA2qD,YAAP,SAAmBzB,EAA8B0B,GAC/C1B,EAAQzrD,eAAe,EAAGmtD,EAAgB,IAOrC,EAAAC,kBAAP,SAAyB3B,GAEvB,OADaA,EAAQ9qD,aAIhB,EAAA0sD,qBAAP,SACI5B,EAA8BoB,EAC9B/5C,EAA4Bq6C,GAK9B,OAJAjB,EAAea,oBAAoBtB,GACnCS,EAAec,WAAWvB,EAASoB,GACnCX,EAAee,YAAYxB,EAAS34C,GACpCo5C,EAAegB,YAAYzB,EAAS0B,GAC7BjB,EAAekB,kBAAkB3B,IAE5C,EA/GA,GAAa,EAAAS,eAAc,EADa,GAAA1wC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA4FX,OAtFE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA8nF,4BAAP,SAAmCj9D,EAA4B+P,GAC7D,OAAQA,GAAO,IAAI0kD,GAAsBsG,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQxF,EAAAk9D,wCAAP,SAA+Cl9D,EAA4B+P,GAGzE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI0kD,GAAsBsG,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAM/F,YAAAgjB,SAAA,WACE,IAAIz2B,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAI0vC,eAAesC,WAO9D,YAAAl6C,MAAA,SAAMlT,GACJ,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI8vC,OACpCF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAAo9D,wBAAP,SAA+BhC,GAC7BA,EAAQhrD,YAAY,IAOf,EAAAitD,YAAP,SAAmBjC,EAA8Bp4C,GAC/Co4C,EAAQ7rD,cAAc,EAAGyT,EAAUiI,EAAYC,aAAaC,IAAI0vC,eAAesC,YAO1E,EAAAG,SAAP,SAAgBlC,EAA8BmC,GAC5CnC,EAAQzrD,eAAe,EAAG4tD,EAAa,IAOlC,EAAAC,sBAAP,SAA6BpC,GAE3B,OADaA,EAAQ9qD,aAIhB,EAAAmtD,yBAAP,SACIrC,EAA8Bp4C,EAC9Bu6C,GAIF,OAHA9I,EAAmB2I,wBAAwBhC,GAC3C3G,EAAmB4I,YAAYjC,EAASp4C,GACxCyxC,EAAmB6I,SAASlC,EAASmC,GAC9B9I,EAAmB+I,sBAAsBpC,IAEpD,EA/FA,GAAa,EAAA3G,mBAAkB,EADS,GAAAtpC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAqG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA2FX,OArFE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAuoF,iBAAP,SAAwB19D,EAA4B+P,GAClD,OAAQA,GAAO,IAAI4tD,GAAW5C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ7E,EAAA49D,6BAAP,SAAoC59D,EAA4B+P,GAE9D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI4tD,GAAW5C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAMpF,YAAA69D,QAAA,WACE,IAAItxE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAI0vC,eAAesC,WAO9D,YAAA7I,UAAA,SAAUvkD,GACR,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI2yC,UACpC/C,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAA+9D,aAAP,SAAoB3C,GAClBA,EAAQhrD,YAAY,IAOf,EAAA4tD,WAAP,SAAkB5C,EAA8ByC,GAC9CzC,EAAQ7rD,cAAc,EAAGsuD,EAAS5yC,EAAYC,aAAaC,IAAI0vC,eAAesC,YAOzE,EAAAc,aAAP,SAAoB7C,EAA8B8C,GAChD9C,EAAQzrD,eAAe,EAAGuuD,EAAiB,IAOtC,EAAAC,WAAP,SAAkB/C,GAEhB,OADaA,EAAQ9qD,aAIhB,EAAA8tD,cAAP,SACIhD,EAA8ByC,EAC9BK,GAIF,OAHAP,EAAQI,aAAa3C,GACrBuC,EAAQK,WAAW5C,EAASyC,GAC5BF,EAAQM,aAAa7C,EAAS8C,GACvBP,EAAQQ,WAAW/C,IAE9B,EA9FA,GAAa,EAAAuC,QAAO,EADoB,GAAAxyC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAoG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAuEX,OAjEE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAkpF,sBAAP,SAA6Br+D,EAA4B+P,GACvD,OAAQA,GAAO,IAAIuuD,GAAgBvD,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQlF,EAAAu+D,kCAAP,SAAyCv+D,EAA4B+P,GAEnE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIuuD,GAAgBvD,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAOzF,YAAAgjB,SAAA,SAASjT,GACP,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI2yC,UACpC/C,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAAw+D,kBAAP,SAAyBpD,GACvBA,EAAQhrD,YAAY,IAOf,EAAAitD,YAAP,SAAmBjC,EAA8BqD,GAC/CrD,EAAQzrD,eAAe,EAAG8uD,EAAgB,IAOrC,EAAAC,gBAAP,SAAuBtD,GAErB,OADaA,EAAQ9qD,aAIhB,EAAAquD,mBAAP,SAA0BvD,EAA8BqD,GAGtD,OAFAH,EAAaE,kBAAkBpD,GAC/BkD,EAAajB,YAAYjC,EAASqD,GAC3BH,EAAaI,gBAAgBtD,IAExC,EA1EA,GAAa,EAAAkD,aAAY,EADe,GAAAnzC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAgF5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAiDX,OA3CE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAMT,YAAAigF,UAAA,WACE,OAAOjgF,KAAK6qB,GAAIwS,WAAWr9B,KAAKi+B,SAMlC,YAAAwrD,YAAA,WACE,OAAOzpF,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS,IAM1C,YAAAyrD,YAAA,WACE,OAAO1pF,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS,IAUnC,EAAA0rD,cAAP,SACI1D,EAA8B2D,EAAoBC,EAClDC,GAKF,OAJA7D,EAAQrtD,KAAK,EAAG,IAChBqtD,EAAQ5sD,WAAWywD,GACnB7D,EAAQ5sD,WAAWwwD,GACnB5D,EAAQ5sD,WAAWuwD,GACZ3D,EAAQ7uE,UAEnB,EApDA,GAAa,EAAA2yE,QAAO,EADoB,GAAA/zC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0D5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAgJX,OA1IE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAgqF,kBAAP,SAAyBn/D,EAA4B+P,GACnD,OAAQA,GAAO,IAAIqvD,GAAYrE,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ9E,EAAAq/D,8BAAP,SAAqCr/D,EAA4B+P,GAE/D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIqvD,GAAYrE,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAMrF,YAAAo1D,UAAA,WACE,IAAI7oE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIwS,WAAWr9B,KAAKi+B,OAAS7mB,GAAU,GAQ9D,YAAA+yE,WAAA,SAAWt5D,EAAe+J,GACxB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI+zC,SACpCnE,OAAO5lF,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,GAARyZ,EAAY7wB,KAAK6qB,IACvE,MAMlB,YAAAu/D,iBAAA,WACE,IAAIhzE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAAizE,YAAA,SAAYx5D,EAAe+J,GACzB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI+zC,SACpCnE,OAAO5lF,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,GAARyZ,EAAY7wB,KAAK6qB,IACvE,MAMlB,YAAAy/D,kBAAA,WACE,IAAIlzE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAAmzE,cAAP,SAAqBtE,GACnBA,EAAQhrD,YAAY,IAOf,EAAAuvD,aAAP,SAAoBvE,EAA8BhG,GAChDgG,EAAQ7rD,cAAc,EAAG6lD,EAAW,IAO/B,EAAAwK,cAAP,SAAqBxE,EAA8ByE,GACjDzE,EAAQzrD,eAAe,EAAGkwD,EAAkB,IAOvC,EAAAC,sBAAP,SAA6B1E,EAA8BI,GACzDJ,EAAQzpD,YAAY,GAAI6pD,EAAU,IAO7B,EAAAuE,eAAP,SAAsB3E,EAA8B4E,GAClD5E,EAAQzrD,eAAe,EAAGqwD,EAAmB,IAOxC,EAAAC,uBAAP,SAA8B7E,EAA8BI,GAC1DJ,EAAQzpD,YAAY,GAAI6pD,EAAU,IAO7B,EAAA0E,YAAP,SAAmB9E,GAEjB,OADaA,EAAQ9qD,aAIhB,EAAA6vD,eAAP,SACI/E,EAA8BhG,EAAmByK,EACjDG,GAKF,OAJAZ,EAASM,cAActE,GACvBgE,EAASO,aAAavE,EAAShG,GAC/BgK,EAASQ,cAAcxE,EAASyE,GAChCT,EAASW,eAAe3E,EAAS4E,GAC1BZ,EAASc,YAAY9E,IAEhC,EAnJA,GAAa,EAAAgE,SAAQ,EADmB,GAAAj0C,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAyJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAodX,OA9cE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAirF,cAAP,SAAqBpgE,EAA4B+P,GAC/C,OAAQA,GAAO,IAAIwiD,GAAQwI,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ1E,EAAAqgE,0BAAP,SAAiCrgE,EAA4B+P,GAE3D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIwiD,GAAQwI,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IASjF,YAAA3rB,KAAA,SAAKynF,GACH,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAAh+C,UAAA,SAAUg+C,GACR,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAA17C,OAAA,SAAO07C,GACL,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAAwE,aAAA,WACE,IAAI/zE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAAU,GAM7D,YAAAyZ,MAAA,WACE,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIwS,WAAWr9B,KAAKi+B,OAAS7mB,GAAU,GAS9D,YAAA4zB,OAAA,SAAO27C,GACL,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAAhlF,KAAA,WACE,IAAIyV,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAI2vC,SAASyF,WASxD,YAAAC,sBAAA,SAAsB1E,GACpB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAU9E,YAAA/+B,OAAA,SAAO/2B,EAAe81D,GACpB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAA5H,aAAA,WACE,IAAI3nE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAUhE,YAAAsvD,QAAA,SAAQ71C,EAAe81D,GACrB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAAjH,cAAA,WACE,IAAItoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAAiK,WAAA,SAAWwP,EAAe+J,GAExB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIG,WACpCyvC,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAAg1D,iBAAA,WACE,IAAIzoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAOhE,YAAAk0E,eAAA,SAAez6D,GACb,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI0R,UAAUv8B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAa,GAM5F,YAAA06D,qBAAA,WACE,IAAIn0E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAAo0E,oBAAA,WACE,IAAIp0E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EACH,IAAIlW,WACAlB,KAAK6qB,GAAI6N,QAAQx0B,OAAQlE,KAAK6qB,GAAI6N,QAAQv0B,WAAanE,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GACvFpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,IACxC,MAUN,YAAAq0E,eAAA,SAAe56D,EAAe81D,GAC5B,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAA+E,qBAAA,WACE,IAAIt0E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAAu0E,UAAP,SAAiB1F,GACfA,EAAQhrD,YAAY,KAOf,EAAA2wD,QAAP,SAAe3F,EAA8B4F,GAC3C5F,EAAQzrD,eAAe,EAAGqxD,EAAY,IAOjC,EAAAC,aAAP,SAAoB7F,EAA8B8F,GAChD9F,EAAQzrD,eAAe,EAAGuxD,EAAiB,IAOtC,EAAAC,UAAP,SAAiB/F,EAA8BgG,GAC7ChG,EAAQzrD,eAAe,EAAGyxD,EAAc,IAOnC,EAAAC,gBAAP,SAAuBjG,EAA8BkF,GACnDlF,EAAQ7rD,cAAc,EAAG+wD,EAAc,IAOlC,EAAAgB,SAAP,SAAgBlG,EAA8Bp1D,GAC5Co1D,EAAQ7rD,cAAc,EAAGvJ,EAAO,IAO3B,EAAAu7D,UAAP,SAAiBnG,EAA8BoG,GAC7CpG,EAAQzrD,eAAe,EAAG6xD,EAAc,IAOnC,EAAAC,QAAP,SAAerG,EAA8BtkF,GAC3CskF,EAAQ7rD,cAAc,EAAGz4B,EAAMm0C,EAAYC,aAAaC,IAAI2vC,SAASyF,YAOhE,EAAAmB,yBAAP,SAAgCtG,EAA8BuG,GAC5DvG,EAAQzrD,eAAe,EAAGgyD,EAA6B,IAOlD,EAAAC,UAAP,SAAiBxG,EAA8ByG,GAC7CzG,EAAQzrD,eAAe,EAAGkyD,EAAc,IAQnC,EAAAC,mBAAP,SAA0B1G,EAA8BrkF,GACtDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAgwD,kBAAP,SAAyB3G,EAA8BI,GACrDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAwG,WAAP,SAAkB5G,EAA8B6G,GAC9C7G,EAAQzrD,eAAe,EAAGsyD,EAAe,IAQpC,EAAAC,oBAAP,SAA2B9G,EAA8BrkF,GACvDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAowD,mBAAP,SAA0B/G,EAA8BI,GACtDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA4G,cAAP,SAAqBhH,EAA8BiH,GACjDjH,EAAQzrD,eAAe,GAAI0yD,EAAkB,IAQxC,EAAAC,uBAAP,SAA8BlH,EAA8BrkF,GAC1DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAwwD,sBAAP,SAA6BnH,EAA8BI,GACzDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAgH,kBAAP,SAAyBpH,EAA8BqH,GACrDrH,EAAQzrD,eAAe,GAAI8yD,EAAsB,IAQ5C,EAAAC,2BAAP,SAAkCtH,EAA8BrkF,GAC9DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQtsD,SAAS/3B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAA4wD,0BAAP,SAAiCvH,EAA8BI,GAC7DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAoH,kBAAP,SAAyBxH,EAA8ByH,GACrDzH,EAAQzrD,eAAe,GAAIkzD,EAAsB,IAQ5C,EAAAC,2BAAP,SAAkC1H,EAA8BrkF,GAC9DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAgxD,0BAAP,SAAiC3H,EAA8BI,GAC7DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAwH,QAAP,SAAe5H,GAEb,OADaA,EAAQ9qD,aAIhB,EAAA2yD,WAAP,SACI7H,EAA8B4F,EAAgCE,EAC9DE,EAAkCd,EAAsBt6D,EAAew7D,EACvE1qF,EAA6C6qF,EAC7CE,EAAkCI,EAAmCI,EACrEI,EAA0CI,GAe5C,OAdAtQ,EAAKuO,UAAU1F,GACf7I,EAAKwO,QAAQ3F,EAAS4F,GACtBzO,EAAK0O,aAAa7F,EAAS8F,GAC3B3O,EAAK4O,UAAU/F,EAASgG,GACxB7O,EAAK8O,gBAAgBjG,EAASkF,GAC9B/N,EAAK+O,SAASlG,EAASp1D,GACvBusD,EAAKgP,UAAUnG,EAASoG,GACxBjP,EAAKkP,QAAQrG,EAAStkF,GACtBy7E,EAAKmP,yBAAyBtG,EAASuG,GACvCpP,EAAKqP,UAAUxG,EAASyG,GACxBtP,EAAKyP,WAAW5G,EAAS6G,GACzB1P,EAAK6P,cAAchH,EAASiH,GAC5B9P,EAAKiQ,kBAAkBpH,EAASqH,GAChClQ,EAAKqQ,kBAAkBxH,EAASyH,GACzBtQ,EAAKyQ,QAAQ5H,IAExB,EAvdA,GAAa,EAAA7I,KAAI,EADuB,GAAApnC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAiHX,OA3GE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA+tF,mBAAP,SAA0BljE,EAA4B+P,GACpD,OAAQA,GAAO,IAAIozD,GAAapI,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ/E,EAAAojE,+BAAP,SAAsCpjE,EAA4B+P,GAEhE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIozD,GAAapI,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAStF,YAAA3rB,KAAA,SAAKynF,GACH,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAAh+C,UAAA,SAAUg+C,GACR,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAAhlF,KAAA,SAAKi5B,GACH,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI2yC,UACpC/C,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAAqjE,eAAP,SAAsBjI,GACpBA,EAAQhrD,YAAY,IAOf,EAAA2wD,QAAP,SAAe3F,EAA8B4F,GAC3C5F,EAAQzrD,eAAe,EAAGqxD,EAAY,IAOjC,EAAAC,aAAP,SAAoB7F,EAA8B8F,GAChD9F,EAAQzrD,eAAe,EAAGuxD,EAAiB,IAOtC,EAAAO,QAAP,SAAerG,EAA8BkI,GAC3ClI,EAAQzrD,eAAe,EAAG2zD,EAAY,IAOjC,EAAAC,aAAP,SAAoBnI,GAElB,OADaA,EAAQ9qD,aAIhB,EAAAkzD,gBAAP,SACIpI,EAA8B4F,EAAgCE,EAC9DoC,GAKF,OAJAH,EAAUE,eAAejI,GACzB+H,EAAUpC,QAAQ3F,EAAS4F,GAC3BmC,EAAUlC,aAAa7F,EAAS8F,GAChCiC,EAAU1B,QAAQrG,EAASkI,GACpBH,EAAUI,aAAanI,IAElC,EApHA,GAAa,EAAA+H,UAAS,EADkB,GAAAh4C,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0H5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA6GX,OAvGE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAsuF,kBAAP,SAAyBzjE,EAA4B+P,GACnD,OAAQA,GAAO,IAAI+tD,GAAY/C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ9E,EAAA0jE,8BAAP,SAAqC1jE,EAA4B+P,GAE/D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI+tD,GAAY/C,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IASrF,YAAA2iB,WAAA,SAAWm5C,GACT,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAAxH,UAAA,WACE,IAAI/nE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAIsS,UAAUn9B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAIopC,cAAcoP,MAO7D,YAAApuF,MAAA,SAAmCw6B,GACjC,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIsT,QAAQvD,EAAK56B,KAAKi+B,OAAS7mB,GAAU,MAMzD,EAAAq3E,cAAP,SAAqBxI,GACnBA,EAAQhrD,YAAY,IAOf,EAAA8rD,cAAP,SAAqBd,EAA8Be,GACjDf,EAAQzrD,eAAe,EAAGwsD,EAAkB,IAOvC,EAAA8B,aAAP,SAAoB7C,EAA8B9G,GAChD8G,EAAQlsD,aAAa,EAAGolD,EAAWrpC,EAAYC,aAAaC,IAAIopC,cAAcoP,OAOzE,EAAA3H,SAAP,SAAgBZ,EAA8Ba,GAC5Cb,EAAQzrD,eAAe,EAAGssD,EAAa,IAOlC,EAAA4H,YAAP,SAAmBzI,GAEjB,OADaA,EAAQ9qD,aAIhB,EAAAwzD,eAAP,SACI1I,EAA8Be,EAC9B7H,EAAuD2H,GAKzD,OAJA6B,EAAS8F,cAAcxI,GACvB0C,EAAS5B,cAAcd,EAASe,GAChC2B,EAASG,aAAa7C,EAAS9G,GAC/BwJ,EAAS9B,SAASZ,EAASa,GACpB6B,EAAS+F,YAAYzI,IAEhC,EAhHA,GAAa,EAAA0C,SAAQ,EADmB,GAAA3yC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsH5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAyFX,OAnFE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA4uF,uBAAP,SAA8B/jE,EAA4B+P,GACxD,OAAQA,GAAO,IAAIi0D,GAAiBjJ,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQnF,EAAAikE,mCAAP,SAA0CjkE,EAA4B+P,GAEpE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIi0D,GAAiBjJ,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAS1F,YAAAogB,OAAA,SAAO07C,GACL,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAArlE,QAAA,WACE,IAAIlK,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAKi+B,OAAS7mB,GAAUpX,KAAK6qB,GAAIkS,WAAW,EAAG,IAM7E,EAAAgyD,mBAAP,SAA0B9I,GACxBA,EAAQhrD,YAAY,IAOf,EAAA+wD,UAAP,SAAiB/F,EAA8BgG,GAC7ChG,EAAQzrD,eAAe,EAAGyxD,EAAc,IAOnC,EAAA+C,WAAP,SAAkB/I,EAA8B3kE,GAC9C2kE,EAAQ5rD,cAAc,EAAG/Y,EAAS2kE,EAAQlpD,WAAW,EAAG,KAOnD,EAAAkyD,iBAAP,SAAwBhJ,GAEtB,OADaA,EAAQ9qD,aAIhB,EAAA+zD,oBAAP,SACIjJ,EAA8BgG,EAAkC3qE,GAIlE,OAHAutE,EAAcE,mBAAmB9I,GACjC4I,EAAc7C,UAAU/F,EAASgG,GACjC4C,EAAcG,WAAW/I,EAAS3kE,GAC3ButE,EAAcI,iBAAiBhJ,IAE1C,EA5FA,GAAa,EAAA4I,cAAa,EADc,GAAA74C,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAkG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA6QX,OAvQE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAmvF,gBAAP,SAAuBtkE,EAA4B+P,GACjD,OAAQA,GAAO,IAAIr5B,GAAUqkF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ5E,EAAAukE,4BAAP,SAAmCvkE,EAA4B+P,GAE7D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIr5B,GAAUqkF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IASnF,YAAA3rB,KAAA,SAAKynF,GACH,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAAh+C,UAAA,SAAUg+C,GACR,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAA9kF,KAAA,SAAKgvB,GACH,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAC7D7wB,KAAK6qB,GAAIkS,WAAW,EAAG,IAMzC,YAAAsyD,WAAA,WACE,IAAIj4E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAAq1B,SAAA,WACE,IAAIr1B,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAI0vC,eAAesC,WAO9D,YAAAr7C,QAAA,SAAQ9b,GACN,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIsS,UAAUn9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAUyZ,GAAS,GAMxF,YAAAy+D,cAAA,WACE,IAAIl4E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAAm4E,aAAA,WACE,IAAIn4E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EACH,IAAItW,WACAd,KAAK6qB,GAAI6N,QAAQx0B,OAAQlE,KAAK6qB,GAAI6N,QAAQv0B,WAAanE,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GACvFpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,IACxC,MAUN,YAAAg1B,WAAA,SAAWvb,EAAe81D,GACxB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAA6I,iBAAA,WACE,IAAIp4E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAAq4E,YAAP,SAAmBxJ,GACjBA,EAAQhrD,YAAY,IAOf,EAAA2wD,QAAP,SAAe3F,EAA8B4F,GAC3C5F,EAAQzrD,eAAe,EAAGqxD,EAAY,IAOjC,EAAAC,aAAP,SAAoB7F,EAA8B8F,GAChD9F,EAAQzrD,eAAe,EAAGuxD,EAAiB,IAOtC,EAAA2D,QAAP,SAAezJ,EAA8B0J,GAC3C1J,EAAQzrD,eAAe,EAAGm1D,EAAY,IAQjC,EAAAC,iBAAP,SAAwB3J,EAA8BrkF,GACpDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQrsD,SAASh4B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAAizD,gBAAP,SAAuB5J,EAA8BI,GACnDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAyJ,YAAP,SAAmB7J,EAA8Bx5C,GAC/Cw5C,EAAQ7rD,cAAc,EAAGqS,EAAUqJ,EAAYC,aAAaC,IAAI0vC,eAAesC,YAO1E,EAAA+H,WAAP,SAAkB9J,EAA8B+J,GAC9C/J,EAAQzrD,eAAe,EAAGw1D,EAAe,IAQpC,EAAAC,oBAAP,SAA2BhK,EAA8BrkF,GACvDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxsD,QAAQ73B,EAAKjC,IAEvB,OAAOsmF,EAAQrpD,aAOV,EAAAszD,mBAAP,SAA0BjK,EAA8BI,GACtDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA8J,cAAP,SAAqBlK,EAA8BmK,GACjDnK,EAAQzrD,eAAe,EAAG41D,EAAkB,IAQvC,EAAAC,uBAAP,SAA8BpK,EAA8BrkF,GAC1DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAA0zD,sBAAP,SAA6BrK,EAA8BI,GACzDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAkK,UAAP,SAAiBtK,GAEf,OADaA,EAAQ9qD,aAIhB,EAAAq1D,aAAP,SACIvK,EAA8B4F,EAAgCE,EAC9D4D,EAAgCljD,EAChCujD,EAAmCI,GAQrC,OAPA7uF,EAAOkuF,YAAYxJ,GACnB1kF,EAAOqqF,QAAQ3F,EAAS4F,GACxBtqF,EAAOuqF,aAAa7F,EAAS8F,GAC7BxqF,EAAOmuF,QAAQzJ,EAAS0J,GACxBpuF,EAAOuuF,YAAY7J,EAASx5C,GAC5BlrC,EAAOwuF,WAAW9J,EAAS+J,GAC3BzuF,EAAO4uF,cAAclK,EAASmK,GACvB7uF,EAAOgvF,UAAUtK,IAE5B,EAhRA,GAAa,EAAA1kF,OAAM,EADqB,GAAAy0C,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsR5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA6IX,OAvIE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAywF,sBAAP,SAA6B5lE,EAA4B+P,GACvD,OAAQA,GAAO,IAAI81D,GAAgB9K,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQlF,EAAA8lE,kCAAP,SAAyC9lE,EAA4B+P,GAEnE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI81D,GAAgB9K,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAOzF,YAAA0c,OAAA,SAAO3M,GACL,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIz0C,QACpCqkF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAOlB,YAAA+lE,QAAA,SAAQh2D,GACN,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIz0C,QACpCqkF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAOlB,YAAAhpB,KAAA,SAAKgvB,GACH,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAC7D7wB,KAAK6qB,GAAIkS,WAAW,EAAG,IAMzC,YAAAsyD,WAAA,WACE,IAAIj4E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAAy5E,kBAAP,SAAyB5K,GACvBA,EAAQhrD,YAAY,IAOf,EAAA61D,UAAP,SAAiB7K,EAA8B8K,GAC7C9K,EAAQzrD,eAAe,EAAGu2D,EAAc,IAOnC,EAAAC,WAAP,SAAkB/K,EAA8BgL,GAC9ChL,EAAQzrD,eAAe,EAAGy2D,EAAe,IAOpC,EAAAvB,QAAP,SAAezJ,EAA8B0J,GAC3C1J,EAAQzrD,eAAe,EAAGm1D,EAAY,IAQjC,EAAAC,iBAAP,SAAwB3J,EAA8BrkF,GACpDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQrsD,SAASh4B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAAizD,gBAAP,SAAuB5J,EAA8BI,GACnDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA6K,gBAAP,SAAuBjL,GAErB,OADaA,EAAQ9qD,aAIhB,EAAAg2D,mBAAP,SACIlL,EAA8B8K,EAAkCE,EAChEtB,GAKF,OAJAe,EAAaG,kBAAkB5K,GAC/ByK,EAAaI,UAAU7K,EAAS8K,GAChCL,EAAaM,WAAW/K,EAASgL,GACjCP,EAAahB,QAAQzJ,EAAS0J,GACvBe,EAAaQ,gBAAgBjL,IAExC,EAhJA,GAAa,EAAAyK,aAAY,EADe,GAAA16C,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsJ5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAidX,OA3cE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAoxF,mBAAP,SAA0BvmE,EAA4B+P,GACpD,OAAQA,GAAO,IAAIub,GAAayvC,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ/E,EAAAwmE,+BAAP,SAAsCxmE,EAA4B+P,GAEhE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIub,GAAayvC,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAStF,YAAA3rB,KAAA,SAAKynF,GACH,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAAh+C,UAAA,SAAUg+C,GACR,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAAhlF,KAAA,WACE,IAAIyV,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAAkBpX,KAAK6qB,GAAI0R,UAAUv8B,KAAKi+B,OAAS7mB,GAC1C0+B,EAAYC,aAAaC,IAAIvL,cAAcu9C,WAM7D,YAAAnhF,EAAA,WACE,IAAIuQ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2S,YAAYx9B,KAAKi+B,OAAS7mB,GAAU,GAM/D,YAAAzX,EAAA,WACE,IAAIyX,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAKi+B,OAAS7mB,GAAUpX,KAAK6qB,GAAIkS,WAAW,EAAG,IASpF,YAAAr2B,EAAA,SAAEigF,GACA,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAAjhF,EAAA,SAAEk1B,GACA,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIz0C,QACpCqkF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAOlB,YAAAzjB,EAAA,SAAEwzB,GACA,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI4mC,OACpCgJ,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAOlB,YAAAwd,OAAA,SAAOxX,GACL,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2S,YAAYx9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAa,GAM9F,YAAAygE,aAAA,WACE,IAAIl6E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAAkhC,YAAA,WACE,IAAIlhC,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EACH,IAAIvW,aACAb,KAAK6qB,GAAI6N,QAAQx0B,OAAQlE,KAAK6qB,GAAI6N,QAAQv0B,WAAanE,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GACvFpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,IACxC,MAON,YAAAkxB,KAAA,SAAKzX,GACH,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAC7D7wB,KAAK6qB,GAAIkS,WAAW,EAAG,IAMzC,YAAAwb,WAAA,WACE,IAAInhC,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAUhE,YAAAmxB,QAAA,SAAQ1X,EAAe81D,GACrB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAAnuC,cAAA,WACE,IAAIphC,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAAoxB,QAAA,SAAQ3X,EAAe+J,GACrB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIz0C,QACpCqkF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA4tB,cAAA,WACE,IAAIrhC,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAAqxB,OAAA,SAAO5X,EAAe+J,GACpB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI4mC,OACpCgJ,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA0mE,aAAA,WACE,IAAIn6E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAAo6E,eAAP,SAAsBvL,GACpBA,EAAQhrD,YAAY,KAOf,EAAA2wD,QAAP,SAAe3F,EAA8B4F,GAC3C5F,EAAQzrD,eAAe,EAAGqxD,EAAY,IAOjC,EAAAC,aAAP,SAAoB7F,EAA8B8F,GAChD9F,EAAQzrD,eAAe,EAAGuxD,EAAiB,IAOtC,EAAAO,QAAP,SAAerG,EAA8BtkF,GAC3CskF,EAAQ7rD,cAAc,EAAGz4B,EAAMm0C,EAAYC,aAAaC,IAAIvL,cAAcu9C,YAOrE,EAAAyJ,KAAP,SAAYxL,EAA8Bp/E,GACxCo/E,EAAQ3rD,gBAAgB,EAAGzzB,EAAG,IAOzB,EAAA6qF,KAAP,SAAYzL,EAA8BtmF,GACxCsmF,EAAQ5rD,cAAc,EAAG16B,EAAGsmF,EAAQlpD,WAAW,EAAG,KAO7C,EAAA40D,KAAP,SAAY1L,EAA8B2L,GACxC3L,EAAQzrD,eAAe,EAAGo3D,EAAS,IAO9B,EAAAC,KAAP,SAAY5L,EAA8B6L,GACxC7L,EAAQzrD,eAAe,EAAGs3D,EAAS,IAO9B,EAAAC,KAAP,SAAY9L,EAA8B+L,GACxC/L,EAAQzrD,eAAe,EAAGw3D,EAAS,IAO9B,EAAAC,UAAP,SAAiBhM,EAA8BiM,GAC7CjM,EAAQzrD,eAAe,EAAG03D,EAAc,IAQnC,EAAAC,mBAAP,SAA0BlM,EAA8BrkF,GACtDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQpsD,WAAWj4B,EAAKjC,IAE1B,OAAOsmF,EAAQrpD,aAOV,EAAAw1D,kBAAP,SAAyBnM,EAA8BI,GACrDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAgM,QAAP,SAAepM,EAA8BqM,GAC3CrM,EAAQzrD,eAAe,EAAG83D,EAAY,IAQjC,EAAAC,iBAAP,SAAwBtM,EAA8BrkF,GACpDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQrsD,SAASh4B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAA41D,gBAAP,SAAuBvM,EAA8BI,GACnDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAoM,WAAP,SAAkBxM,EAA8ByM,GAC9CzM,EAAQzrD,eAAe,GAAIk4D,EAAe,IAQrC,EAAAC,oBAAP,SAA2B1M,EAA8BrkF,GACvDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAg2D,mBAAP,SAA0B3M,EAA8BI,GACtDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAwM,WAAP,SAAkB5M,EAA8B6M,GAC9C7M,EAAQzrD,eAAe,GAAIs4D,EAAe,IAQrC,EAAAC,oBAAP,SAA2B9M,EAA8BrkF,GACvDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAo2D,mBAAP,SAA0B/M,EAA8BI,GACtDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA4M,UAAP,SAAiBhN,EAA8BiN,GAC7CjN,EAAQzrD,eAAe,GAAI04D,EAAc,IAQpC,EAAAC,mBAAP,SAA0BlN,EAA8BrkF,GACtDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAw2D,kBAAP,SAAyBnN,EAA8BI,GACrDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAgN,aAAP,SAAoBpN,GAElB,OADaA,EAAQ9qD,aAIhB,EAAAm4D,gBAAP,SACIrN,EAA8B4F,EAAgCE,EAC9DpqF,EAAkDkF,EAAWlH,EAAqBiyF,EAClFE,EAA6BE,EAA6BE,EAC1DI,EAAgCI,EAAmCI,EACnEI,GAeF,OAdA/8C,EAAUq7C,eAAevL,GACzB9vC,EAAUy1C,QAAQ3F,EAAS4F,GAC3B11C,EAAU21C,aAAa7F,EAAS8F,GAChC51C,EAAUm2C,QAAQrG,EAAStkF,GAC3Bw0C,EAAUs7C,KAAKxL,EAASp/E,GACxBsvC,EAAUu7C,KAAKzL,EAAStmF,GACxBw2C,EAAUw7C,KAAK1L,EAAS2L,GACxBz7C,EAAU07C,KAAK5L,EAAS6L,GACxB37C,EAAU47C,KAAK9L,EAAS+L,GACxB77C,EAAU87C,UAAUhM,EAASiM,GAC7B/7C,EAAUk8C,QAAQpM,EAASqM,GAC3Bn8C,EAAUs8C,WAAWxM,EAASyM,GAC9Bv8C,EAAU08C,WAAW5M,EAAS6M,GAC9B38C,EAAU88C,UAAUhN,EAASiN,GACtB/8C,EAAUk9C,aAAapN,IAElC,EApdA,GAAa,EAAA9vC,UAAS,EADkB,GAAAH,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0d5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAwaX,OAlaE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAuzF,eAAP,SAAsB1oE,EAA4B+P,GAChD,OAAQA,GAAO,IAAIgiD,GAASgJ,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ3E,EAAA2oE,2BAAP,SAAkC3oE,EAA4B+P,GAE5D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIgiD,GAASgJ,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQlF,YAAAkjD,aAAA,SAAal9C,EAAe+J,GAC1B,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIz0C,QACpCqkF,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA20D,mBAAA,WACE,IAAIpoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAA8nE,SAAA,SAASruD,EAAe+J,GACtB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIg4C,WACpCpI,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAAo0D,eAAA,WACE,IAAI7nE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAA8qC,MAAA,SAAMrxB,EAAe+J,GACnB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIonC,MACpCwI,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA+0D,YAAA,WACE,IAAIxoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAAq8E,aAAA,WACE,IAAIr8E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIwS,WAAWr9B,KAAKi+B,OAAS7mB,GAAU,GAQ9D,YAAAs8E,UAAA,SAAU7iE,EAAe+J,GACvB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIi0C,UACpCrE,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA8oE,gBAAA,WACE,IAAIv8E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAUhE,YAAAwwC,OAAA,SAAO/2B,EAAe81D,GACpB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAA5H,aAAA,WACE,IAAI3nE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAUhE,YAAAsvD,QAAA,SAAQ71C,EAAe81D,GACrB,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,EAAW81D,GAAoB,MAM7G,YAAAjH,cAAA,WACE,IAAItoE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAQhE,YAAAw8E,mBAAA,SAAmB/iE,EAAe+J,GAEhC,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI06C,cACpC9K,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAAgpE,yBAAA,WACE,IAAIz8E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAA08E,WAAP,SAAkB7N,GAChBA,EAAQhrD,YAAY,IAOf,EAAA84D,gBAAP,SAAuB9N,EAA8B+N,GACnD/N,EAAQzrD,eAAe,EAAGw5D,EAAoB,IAQzC,EAAAC,yBAAP,SAAgChO,EAA8BrkF,GAC5DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAs3D,wBAAP,SAA+BjO,EAA8BI,GAC3DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA8N,YAAP,SAAmBlO,EAA8BmO,GAC/CnO,EAAQzrD,eAAe,EAAG45D,EAAgB,IAQrC,EAAAC,qBAAP,SAA4BpO,EAA8BrkF,GACxDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAA03D,oBAAP,SAA2BrO,EAA8BI,GACvDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAkO,SAAP,SAAgBtO,EAA8BuO,GAC5CvO,EAAQzrD,eAAe,EAAGg6D,EAAa,IAQlC,EAAAC,kBAAP,SAAyBxO,EAA8BrkF,GACrDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAA83D,iBAAP,SAAwBzO,EAA8BI,GACpDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAsO,gBAAP,SAAuB1O,EAA8BwN,GACnDxN,EAAQ7rD,cAAc,EAAGq5D,EAAc,IAOlC,EAAAmB,aAAP,SAAoB3O,EAA8B4O,GAChD5O,EAAQzrD,eAAe,EAAGq6D,EAAiB,IAQtC,EAAAC,sBAAP,SAA6B7O,EAA8BrkF,GACzDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAm4D,qBAAP,SAA4B9O,EAA8BI,GACxDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAoG,UAAP,SAAiBxG,EAA8ByG,GAC7CzG,EAAQzrD,eAAe,EAAGkyD,EAAc,IAQnC,EAAAC,mBAAP,SAA0B1G,EAA8BrkF,GACtDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAgwD,kBAAP,SAAyB3G,EAA8BI,GACrDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAwG,WAAP,SAAkB5G,EAA8B6G,GAC9C7G,EAAQzrD,eAAe,EAAGsyD,EAAe,IAQpC,EAAAC,oBAAP,SAA2B9G,EAA8BrkF,GACvDqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAowD,mBAAP,SAA0B/G,EAA8BI,GACtDJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA2O,sBAAP,SAA6B/O,EAA8BgP,GACzDhP,EAAQzrD,eAAe,EAAGy6D,EAA0B,IAQ/C,EAAAC,+BAAP,SAAsCjP,EAA8BrkF,GAElEqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAu4D,8BAAP,SAAqClP,EAA8BI,GACjEJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA+O,SAAP,SAAgBnP,GAEd,OADaA,EAAQ9qD,aAIhB,EAAAk6D,YAAP,SACIpP,EAA8B+N,EAAwCI,EACtEI,EAAiCf,EAAsBoB,EACvDnI,EAAkCI,EAClCmI,GAUF,OATArY,EAAMkX,WAAW7N,GACjBrJ,EAAMmX,gBAAgB9N,EAAS+N,GAC/BpX,EAAMuX,YAAYlO,EAASmO,GAC3BxX,EAAM2X,SAAStO,EAASuO,GACxB5X,EAAM+X,gBAAgB1O,EAASwN,GAC/B7W,EAAMgY,aAAa3O,EAAS4O,GAC5BjY,EAAM6P,UAAUxG,EAASyG,GACzB9P,EAAMiQ,WAAW5G,EAAS6G,GAC1BlQ,EAAMoY,sBAAsB/O,EAASgP,GAC9BrY,EAAMwY,SAASnP,IAE1B,EA3aA,GAAa,EAAArJ,MAAK,EADsB,GAAA5mC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAib5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAoQX,OA9PE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAs1F,eAAP,SAAsBzqE,EAA4B+P,GAChD,OAAQA,GAAO,IAAIiqD,GAASe,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ3E,EAAA0qE,2BAAP,SAAkC1qE,EAA4B+P,GAE5D,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIiqD,GAASe,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAMlF,YAAAwgB,UAAA,WACE,IAAIj0B,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAKi+B,OAAS7mB,GAAUpX,KAAK6qB,GAAIkS,WAAW,EAAG,IAQpF,YAAAoO,YAAA,SAAYta,EAAe+J,GAEzB,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI64C,eACpCjJ,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAA85D,kBAAA,WACE,IAAIvtE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAShE,YAAAk0B,aAAA,SAAaq7C,GACX,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAAp7C,gBAAA,SAAgBo7C,GACd,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAS9E,YAAA17C,OAAA,SAAO07C,GACL,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAM9E,YAAAn7C,aAAA,WACE,IAAIp0B,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIyS,UAAUt9B,KAAKi+B,OAAS7mB,GAAUpX,KAAK6qB,GAAIkS,WAAW,EAAG,IASpF,YAAA4L,UAAA,SAAUg+C,GACR,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAAl7C,MAAA,SAAM7Q,GACJ,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI4mC,OACpCgJ,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MASlB,YAAA2qE,eAAA,SAAe7O,GACb,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,IAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAMvE,EAAA8O,WAAP,SAAkBxP,GAChBA,EAAQhrD,YAAY,IAOf,EAAAy6D,aAAP,SAAoBzP,EAA8B56C,GAChD46C,EAAQ5rD,cAAc,EAAGgR,EAAW46C,EAAQlpD,WAAW,EAAG,KAOrD,EAAA44D,eAAP,SAAsB1P,EAA8B2P,GAClD3P,EAAQzrD,eAAe,EAAGo7D,EAAmB,IAQxC,EAAAC,wBAAP,SAA+B5P,EAA8BrkF,GAC3DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAk5D,uBAAP,SAA8B7P,EAA8BI,GAC1DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAA0P,gBAAP,SAAuB9P,EAA8B+P,GACnD/P,EAAQzrD,eAAe,EAAGw7D,EAAoB,IAOzC,EAAAC,mBAAP,SAA0BhQ,EAA8BiQ,GACtDjQ,EAAQzrD,eAAe,EAAG07D,EAAuB,IAO5C,EAAAlK,UAAP,SAAiB/F,EAA8BgG,GAC7ChG,EAAQzrD,eAAe,EAAGyxD,EAAc,IAOnC,EAAAkK,gBAAP,SAAuBlQ,EAA8Bz6C,GACnDy6C,EAAQ5rD,cAAc,EAAGmR,EAAcy6C,EAAQlpD,WAAW,EAAG,KAOxD,EAAA+uD,aAAP,SAAoB7F,EAA8B8F,GAChD9F,EAAQzrD,eAAe,EAAGuxD,EAAiB,IAOtC,EAAAqK,SAAP,SAAgBnQ,EAA8BoQ,GAC5CpQ,EAAQzrD,eAAe,EAAG67D,EAAa,IAOlC,EAAAC,kBAAP,SAAyBrQ,EAA8BsQ,GACrDtQ,EAAQzrD,eAAe,EAAG+7D,EAAsB,IAO3C,EAAAC,SAAP,SAAgBvQ,GAEd,OADaA,EAAQ9qD,aAIhB,EAAAs7D,YAAP,SACIxQ,EAA8B56C,EAA6BuqD,EAC3DI,EAAwCE,EACxCjK,EAAkCzgD,EAAgCugD,EAClEsK,EAAiCE,GAWnC,OAVA1R,EAAM4Q,WAAWxP,GACjBpB,EAAM6Q,aAAazP,EAAS56C,GAC5Bw5C,EAAM8Q,eAAe1P,EAAS2P,GAC9B/Q,EAAMkR,gBAAgB9P,EAAS+P,GAC/BnR,EAAMoR,mBAAmBhQ,EAASiQ,GAClCrR,EAAMmH,UAAU/F,EAASgG,GACzBpH,EAAMsR,gBAAgBlQ,EAASz6C,GAC/Bq5C,EAAMiH,aAAa7F,EAAS8F,GAC5BlH,EAAMuR,SAASnQ,EAASoQ,GACxBxR,EAAMyR,kBAAkBrQ,EAASsQ,GAC1B1R,EAAM2R,SAASvQ,IAE1B,EAvQA,GAAa,EAAApB,MAAK,EADsB,GAAA7uC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA6Q5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAiKX,OA3JE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA02F,2BAAP,SAAkC7rE,EAA4B+P,GAC5D,OAAQA,GAAO,IAAI+7D,GAAqB/Q,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQvF,EAAA+rE,uCAAP,SAA8C/rE,EAA4B+P,GAGxE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAI+7D,GAAqB/Q,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAO9F,YAAAgsE,YAAA,SAAYhmE,GACV,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIwS,WAAWr9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAa,GAM7F,YAAAimE,kBAAA,WACE,IAAI1/E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMhE,YAAA2/E,iBAAA,WACE,IAAI3/E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EACH,IAAIhW,YACApB,KAAK6qB,GAAI6N,QAAQx0B,OAAQlE,KAAK6qB,GAAI6N,QAAQv0B,WAAanE,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GACvFpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,IACxC,MAON,YAAA4/E,gBAAA,SAAgBnmE,GACd,IAAIzZ,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI0S,WAAWv9B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAC9D7wB,KAAK6qB,GAAIkS,WAAW,EAAG,IAMzC,YAAAk6D,sBAAA,WACE,IAAI7/E,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAA8/E,uBAAP,SAA8BjR,GAC5BA,EAAQhrD,YAAY,IAOf,EAAAk8D,eAAP,SAAsBlR,EAA8BmR,GAClDnR,EAAQzrD,eAAe,EAAG48D,EAAmB,IAQxC,EAAAC,wBAAP,SAA+BpR,EAA8BrkF,GAC3DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQtsD,SAAS/3B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAA06D,uBAAP,SAA8BrR,EAA8BI,GAC1DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAkR,mBAAP,SAA0BtR,EAA8BuR,GACtDvR,EAAQzrD,eAAe,EAAGg9D,EAAuB,IAQ5C,EAAAC,4BAAP,SAAmCxR,EAA8BrkF,GAC/DqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQrsD,SAASh4B,EAAKjC,IAExB,OAAOsmF,EAAQrpD,aAOV,EAAA86D,2BAAP,SAAkCzR,EAA8BI,GAC9DJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAsR,qBAAP,SAA4B1R,GAE1B,OADaA,EAAQ9qD,aAIhB,EAAAy8D,wBAAP,SACI3R,EAA8BmR,EAC9BI,GAIF,OAHAb,EAAkBO,uBAAuBjR,GACzC0Q,EAAkBQ,eAAelR,EAASmR,GAC1CT,EAAkBY,mBAAmBtR,EAASuR,GACvCb,EAAkBgB,qBAAqB1R,IAElD,EApKA,GAAa,EAAA0Q,kBAAiB,EADU,GAAA3gD,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KA0K5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA+FX,OAzFE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA63F,8BAAP,SAAqChtE,EAA4B+P,GAC/D,OAAQA,GAAO,IAAIk9D,GAAwBlS,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQ1F,EAAAktE,0CAAP,SAAiDltE,EAA4B+P,GAG3E,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIk9D,GAAwBlS,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IASjG,YAAAmtE,QAAA,SAAQrR,GACN,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAAsR,aAAA,SAAar9D,GACX,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIkiD,cACpCtS,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAAstE,0BAAP,SAAiClS,GAC/BA,EAAQhrD,YAAY,IAOf,EAAAm9D,WAAP,SAAkBnS,EAA8BoS,GAC9CpS,EAAQzrD,eAAe,EAAG69D,EAAe,IAOpC,EAAAC,gBAAP,SAAuBrS,EAA8BsS,GACnDtS,EAAQzrD,eAAe,EAAG+9D,EAAoB,IAOzC,EAAAC,wBAAP,SAA+BvS,GAC7B,IAAI7uE,EAAS6uE,EAAQ9qD,YAErB,OADA8qD,EAAQ/pD,cAAc9kB,EAAQ,GACvBA,GAGF,EAAAqhF,2BAAP,SACIxS,EAA8BoS,EAC9BE,GAIF,OAHAT,EAAqBK,0BAA0BlS,GAC/C6R,EAAqBM,WAAWnS,EAASoS,GACzCP,EAAqBQ,gBAAgBrS,EAASsS,GACvCT,EAAqBU,wBAAwBvS,IAExD,EAlGA,GAAa,EAAA6R,qBAAoB,EADO,GAAA9hD,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAwG5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EA6HX,OAvHE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAA04F,sBAAP,SAA6B7tE,EAA4B+P,GACvD,OAAQA,GAAO,IAAIs9D,GAAgBtS,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQlF,EAAA8tE,kCAAP,SAAyC9tE,EAA4B+P,GAEnE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIs9D,GAAgBtS,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAOzF,YAAA+tE,QAAA,SAAQh+D,GACN,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI2gD,mBACpC/Q,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAQlB,YAAAguE,sBAAA,SAAsBhoE,EAAe+J,GAEnC,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI8hD,sBACpClS,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAK6qB,GAAI0T,SAASv+B,KAAKi+B,OAAS7mB,GAAkB,EAARyZ,GAAY7wB,KAAK6qB,IAC3F,MAMlB,YAAAiuE,4BAAA,WACE,IAAI1hF,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAI2T,aAAax+B,KAAKi+B,OAAS7mB,GAAU,GAMzD,EAAA2hF,kBAAP,SAAyB9S,GACvBA,EAAQhrD,YAAY,IAOf,EAAA+9D,WAAP,SAAkB/S,EAA8BgT,GAC9ChT,EAAQzrD,eAAe,EAAGy+D,EAAe,IAOpC,EAAAC,yBAAP,SAAgCjT,EAA8BkT,GAC5DlT,EAAQzrD,eAAe,EAAG2+D,EAA6B,IAQlD,EAAAC,kCAAP,SAAyCnT,EAA8BrkF,GAErEqkF,EAAQzpD,YAAY,EAAG56B,EAAKhC,OAAQ,GACpC,IAAK,IAAID,EAAIiC,EAAKhC,OAAS,EAAGD,GAAK,EAAGA,IACpCsmF,EAAQxrD,UAAU74B,EAAKjC,IAEzB,OAAOsmF,EAAQrpD,aAOV,EAAAy8D,iCAAP,SAAwCpT,EAA8BI,GACpEJ,EAAQzpD,YAAY,EAAG6pD,EAAU,IAO5B,EAAAiT,gBAAP,SAAuBrT,GAErB,OADaA,EAAQ9qD,aAIhB,EAAAo+D,mBAAP,SACItT,EAA8BgT,EAC9BE,GAIF,OAHAjB,EAAaa,kBAAkB9S,GAC/BiS,EAAac,WAAW/S,EAASgT,GACjCf,EAAagB,yBAAyBjT,EAASkT,GACxCjB,EAAaoB,gBAAgBrT,IAExC,EAhIA,GAAa,EAAAiS,aAAY,EADe,GAAAliD,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,KAsI5B,SAAiBA,IAAY,SAAAC,IAAa,SAAAC,GACxC,8BACE,KAAAnrB,GAAkC,KAElC,KAAAoT,OAAS,EAyIX,OAnIE,YAAA2nD,OAAA,SAAOjmF,EAAWkrB,GAGhB,OAFA7qB,KAAKi+B,OAASt+B,EACdK,KAAK6qB,GAAKA,EACH7qB,MAQF,EAAAykF,0BAAP,SAAiC55D,EAA4B+P,GAC3D,OAAQA,GAAO,IAAIj4B,GAAoBijF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAQtF,EAAA2uE,sCAAP,SAA6C3uE,EAA4B+P,GAEvE,OADA/P,EAAGmQ,YAAYnQ,EAAG8N,WAAa,EAAAzC,YAAYM,qBACnCoE,GAAO,IAAIj4B,GAAoBijF,OAAO/6D,EAAG0R,UAAU1R,EAAG8N,YAAc9N,EAAG8N,WAAY9N,IAOtF,EAAA4uE,oBAAP,SAA2B5uE,GACzB,OAAOA,EAAG4T,iBAAiB,SAS7B,YAAAi7D,WAAA,SAAW/S,GACT,IAAIvvE,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,EAASpX,KAAK6qB,GAAIuT,SAASp+B,KAAKi+B,OAAS7mB,EAAQuvE,GAAoB,MAO9E,YAAAjC,MAAA,SAAM9pD,GACJ,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAI6uC,OACpCe,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAOlB,YAAAotE,aAAA,SAAar9D,GACX,IAAIxjB,EAASpX,KAAK6qB,GAAImT,SAASh+B,KAAKi+B,OAAQ,GAC5C,OAAO7mB,GAAUwjB,GAAO,IAAIkb,EAAYC,aAAaC,IAAIkiD,cACpCtS,OAAO5lF,KAAK6qB,GAAIyT,WAAWt+B,KAAKi+B,OAAS7mB,GAASpX,KAAK6qB,IAC5D,MAMX,EAAA8uE,sBAAP,SAA6B1T,GAC3BA,EAAQhrD,YAAY,IAOf,EAAA2+D,cAAP,SAAqB3T,EAA8B4T,GACjD5T,EAAQzrD,eAAe,EAAGq/D,EAAkB,IAOvC,EAAAC,SAAP,SAAgB7T,EAA8B8T,GAC5C9T,EAAQzrD,eAAe,EAAGu/D,EAAa,IAOlC,EAAAzB,gBAAP,SAAuBrS,EAA8BsS,GACnDtS,EAAQzrD,eAAe,EAAG+9D,EAAoB,IAOzC,EAAAyB,oBAAP,SAA2B/T,GAEzB,OADaA,EAAQ9qD,aAQhB,EAAA8+D,6BAAP,SAAoChU,EAA8B7uE,GAChE6uE,EAAQtqD,OAAOvkB,EAAQ,SAOlB,EAAA8iF,yCAAP,SAAgDjU,EAA8B7uE,GAC5E6uE,EAAQtqD,OAAOvkB,EAAQ,QAAQ,IAG1B,EAAA+iF,uBAAP,SACIlU,EAA8B4T,EAAsCE,EACpExB,GAKF,OAJA51F,EAAiBg3F,sBAAsB1T,GACvCtjF,EAAiBi3F,cAAc3T,EAAS4T,GACxCl3F,EAAiBm3F,SAAS7T,EAAS8T,GACnCp3F,EAAiB21F,gBAAgBrS,EAASsS,GACnC51F,EAAiBq3F,oBAAoB/T,IAEhD,EA5IA,GAAa,EAAAtjF,iBAAgB,EADW,GAAAqzC,MAAA,EAAAA,IAAG,KAAhB,GAAAD,eAAA,EAAAA,aAAY,KAAzC,CAAiB,EAAAD,cAAA,EAAAA,YAAW,M,g/CCxoH5B,cAEA,UAEA,aACE,WAAoBxB,GAAA,KAAAA,UAClBt0C,KAAKuD,WAAavD,KAAKs0C,QAAQ/wC,WAC/BvD,KAAKiD,YAAcjD,KAAKs0C,QAAQrxC,YAiCpC,OA9BQ,YAAA81C,QAAN,W,oFAGM,YAAAt1C,IAAN,SACIZ,EAAiCu3F,EACjCC,G,wGAEF,IAAW,KADLC,EAAW,IAAI15F,IACFiC,EACbO,OAAOQ,eAAeC,KAAKhB,EAAO,KAC9B03F,EAAO13F,EAAM,GACnBy3F,EAASh5F,IACL,EACA,IAAI,SACAi5F,EAAK14F,KAAM04F,EAAK54F,UAA+BlC,OAAWA,EAC1D86F,EAAK34F,QAGC,SAAM5B,KAAKs0C,QAAQ7wC,IAAI62F,I,OAKzC,OALME,EAAY,SACZ1vD,EAAoC,GAC1C0vD,EAAU7+E,SAAQ,SAACgtC,EAAQzpD,GACzB4rC,EAAO5rC,GAAQ,IAAI,EAAAqC,OAAOonD,EAAOhnD,KAAMgnD,EAAO/mD,KAAM+mD,EAAO9mD,SAEtD,CAAP,EAAOipC,WAET,YAAA1lC,eAAA,WACEpF,KAAKs0C,QAAQlvC,kBAEf,YAAAC,aAAA,WACErF,KAAKs0C,QAAQjvC,gBAEjB,EApCA,GAAa,EAAAovC,wB,m+CCJb,cACA,UAEA,UACA,UAEA,UACA,UAiBA,aACE,WAAYm8B,QAAA,IAAAA,MAAA,IACV5wE,KAAKy6F,cAAe,EACpBz6F,KAAK44C,YAAcg4B,EAAOh4B,YAC1B54C,KAAKqqE,SAAW,EAAA4Z,SAASplE,OAAO+xD,EAAOvG,UACvCrqE,KAAK65C,QAAU,CAACwwB,SAAUrqE,KAAKqqE,SAAUqwB,gBAAiB,GAAIC,eAAgB,IAiOlF,OA9NE,sBAAI,yBAAU,C,IAAd,WACE,OAAO36F,KAAK46F,OAAOnvD,MAAMmyC,iB,gCAE3B,sBAAI,0BAAW,C,IAAf,WACE,OAAO59E,KAAK46F,OAAOnvD,MAAMsyC,kB,gCAG3B,YAAA34E,eAAA,WACEpF,KAAKqqE,SAAS/4C,SAGhB,YAAAjsB,aAAA,WACErF,KAAKqqE,SAASkZ,QAMV,YAAA/uC,UAAN,SAAgB3/B,EAAoC1Q,EAAqBvE,G,qGACvE,SAAMI,KAAKqqE,SAASK,MAAM,UAAW,qBAAqB,gD,8DAExC,SAAM,EAAAvlE,eAAenF,KAAK44C,c,cAApCz5C,EAAU,SAChBa,KAAKw7E,eAAiBr8E,EAAQG,qBAAqBU,KAAK65C,SAExD75C,KAAK46F,OAAS,IAAI,EAAA/V,MACC,iBAARhwE,EAAP,OACIqvE,EAAcrvE,EAAIqwE,SAAS,QACZ,oBAAV77D,MAAP,MAEU,GAAM,EAAA+rB,UAAU,EAAA9sC,SAAV,CAAoBuM,K,cAAhC2d,EAAM,SACZxyB,KAAK84C,WAAWtK,OAAOhuC,KAAKgyB,GAAM0xD,G,aAGjB,SAAM76D,MAAMxU,I,OACjB,SADK,SACU4U,e,OAArB+I,EAAM,SACZxyB,KAAK84C,WAAW,IAAIh4C,WAAW0xB,GAAM0xD,G,oCAE7BlgF,YAAY62F,OAAOhmF,GAM7B7U,KAAK84C,WAAWjkC,IAJVijC,EAAM,IAAIh3C,WAAW+T,EAAK1Q,GAAc,EAAGvE,GAAUiV,EAAIzQ,YAC/DpE,KAAK84C,WAAWhB,I,oDArBpB,S,YA6BM,YAAAgB,WAAR,SAAmBgiD,EAA4B5W,GAA/C,WACE,GAAIlkF,KAAKy6F,aACP,MAAM,IAAI/6F,MAAM,uBAGlBM,KAAKqqE,SAASK,MAAM,UAAW,sBAAsB,WAEnD,IAAM6S,EACF,EAAK/B,eAAeiC,eAAiB,EAAKjC,oBAAsC/7E,EACpF,EAAKm7F,OAAO7rF,KAAK+rF,EAAgBvd,EAAkB2G,GAG/C,EAAK1I,eAAe1N,oBACtB,EAAK0N,eAAe1N,mBAAmB,EAAK8sB,OAAOnvD,OAGrD,EAAKsvD,cAAc,EAAKH,OAAOnvD,OAG/B,EAAKuvD,eAAiB,IAAI,EAAAre,cAAc,EAAKie,OAAOnvD,MAAO,EAAKwvC,KAAM,EAAK5Q,aAG7ErqE,KAAKy6F,cAAe,GAGhB,YAAAh3F,IAAN,SAAUmkD,G,8EACR,IAAK5nD,KAAKy6F,aACR,MAAM,IAAI/6F,MAAM,+BAGlB,MAAO,CAAP,EAAOM,KAAKqqE,SAASK,MAAM,UAAW,eAAe,gD,0DAG7B,OAFhBuR,EAAej8E,KAAKi7F,2BAA2BrzC,GAE/B,GAAM5nD,KAAKg7F,eAAezf,QAAQv7E,KAAKw7E,eAAgBS,I,OAE7E,OAFMif,EAAgB,SAEf,CAAP,EAAOl7F,KAAKm7F,aAAaD,sBAIrB,YAAAD,2BAAR,SAAmCrzC,GACjC,IAAMwzC,EAAkBp7F,KAAK46F,OAAOnvD,MAAMmyC,gBAI1C,GAAI97E,MAAMC,QAAQ6lD,IAChB,GAAIA,EAAOhoD,SAAWw7F,EAAgBx7F,OACpC,MAAM,IAAIF,MAAM,0CAA0C07F,EAAgBx7F,OAAM,YAAYgoD,EAAOhoD,YAKlG,CACH,GAAIgoD,EAAOvlD,OAAS+4F,EAAgBx7F,OAClC,MAAM,IAAIF,MAAM,sCAAsC07F,EAAgBx7F,OAAM,YAAYgoD,EAAOvlD,MAKjG,IAFA,IAAMg5F,EAAe,IAAIv5F,MAAc8lD,EAAOvlD,MAC1Ci5F,EAAoB,EACf37F,EAAI,EAAGA,EAAIy7F,EAAgBx7F,SAAUD,EAAG,CAC/C,IAAMgpD,EAASf,EAAO3lD,IAAIm5F,EAAgBz7F,IAC1C,IAAKgpD,EACH,MAAM,IAAIjpD,MAAM,8BAA8BR,KAAI,KAEpDm8F,EAAaC,KAAuB3yC,EAGtCf,EAASyzC,EAKX,GAAKr7F,KAAK65C,QAAQ6gD,iBAA2D,IAAxC16F,KAAK65C,QAAQ6gD,gBAAgB96F,QAAiBI,KAAK65C,QAAQ8gD,gBACrD,IAAvC36F,KAAK65C,QAAQ8gD,eAAe/6F,OAqB9BI,KAAKu7F,wBAAwBv7F,KAAK65C,QAAQ8gD,eAAgB/yC,GAAQ,OArBtB,CAC5C,IAAM4zC,EAAoBx7F,KAAK46F,OAAOnvD,MAAM6vC,kBACtCmgB,EAAcz7F,KAAK46F,OAAOnvD,MAAMuiC,YAEhC2sB,EAAiB,IAAI74F,MAAyB05F,EAAkB57F,QAEtE,IAASD,EAAI,EAAGA,EAAI67F,EAAkB57F,SAAUD,EAAG,CACjD,IAAM+7F,EAAaD,EAAYD,EAAkB77F,IACjDg7F,EAAeh7F,GAAK+7F,EAAW/5F,KAAMmsC,MAAMjsC,KAI3C7B,KAAK65C,QAAQ6gD,gBAAiB56F,KAAK47F,EAAW/5F,KAAMisC,YACpD5tC,KAAK65C,QAAQ8gD,eAAgB76F,KAAK8nD,EAAOjoD,GAAGkC,MAG9C7B,KAAKu7F,wBAAwBZ,EAAgB/yC,GAAQ,GAWvD,OAFA5nD,KAAK27F,yBAAyB37F,KAAK65C,QAAQ6gD,gBAAkB9yC,GAEtDA,GAGD,YAAA+zC,yBAAR,SAAiCjB,EAAoCkB,GACnE,IAAK,IAAIj8F,EAAI,EAAGA,EAAIi8F,EAAYh8F,OAAQD,IAAK,CAC3C,IAAMk8F,EAAenB,EAAgB/6F,GAC/Bm8F,EAAaF,EAAYj8F,GAAGgC,KAClC,GAAIk6F,IAAiBC,EACnB,MAAM,IAAIp8F,MAAM,gBAAgBC,EAAC,kCAAkCk8F,EAAY,aAAaC,KAK1F,YAAAP,wBAAR,SACIZ,EAA0CiB,EAAuBG,GACnE,IAAK,IAAIp8F,EAAI,EAAGA,EAAIi8F,EAAYh8F,OAAQD,IAAK,CAC3C,IAAMq8F,EAAerB,EAAeh7F,GAC9Bs8F,EAAaL,EAAYj8F,GAAGkC,KAClC,IAAK7B,KAAKk8F,kBAAkBF,EAAcC,EAAYF,GACpD,MAAM,IAAIr8F,MAAM,gBAAgBC,EAAC,oCAAoCq8F,EAAa92F,KAAK,KAAI,eACvF+2F,EAAW/2F,KAAK,KAAI,OAKtB,YAAAg3F,kBAAR,SAA0BF,EAAiCC,EAA+BF,GAExF,GAAIC,EAAap8F,SAAWq8F,EAAWr8F,OACrC,OAAO,EAGT,IAAK,IAAID,EAAI,EAAGA,EAAIq8F,EAAap8F,SAAUD,EACzC,GAAIq8F,EAAar8F,KAAOs8F,EAAWt8F,MAAQo8F,GAAwC,IAApBC,EAAar8F,IAE1E,OAAO,EAIX,OAAO,GAGD,YAAAw7F,aAAR,SAAqBD,GACnB,IAAMiB,EAAmBn8F,KAAK46F,OAAOnvD,MAAMsyC,iBAC3C,GAAImd,EAAct7F,SAAWu8F,EAAiBv8F,OAC5C,MAAM,IAAIF,MAAM,uEAIlB,IADA,IAAMorC,EAAS,IAAIlqC,IACVjB,EAAI,EAAGA,EAAIw8F,EAAiBv8F,SAAUD,EAC7CmrC,EAAOxpC,IAAI66F,EAAiBx8F,GAAIu7F,EAAcv7F,IAGhD,OAAOmrC,GAGD,YAAAiwD,cAAR,SAAsBtvD,GACpB,IAAMyW,EAAQzW,EAAMuvC,WACpBh7E,KAAKi7E,KAAO,IAAIn5E,MAAMogD,EAAMtiD,QAE5B,IAAK,IAAID,EAAI,EAAGA,EAAIuiD,EAAMtiD,OAAQD,IAChCK,KAAKi7E,KAAKt7E,GAAKK,KAAKw7E,eAAe7xD,QAAQu4B,EAAMviD,GAAIK,KAAK46F,OAAO1sB,OAAQziC,IAe/E,EAtOA,GAAa,EAAA8I,W,kjDCxBb,cACA,aACA,UAIOsB,EAFP,QAEgBC,YAAYC,aAAaC,IAEzC,UAiCA,aA+GE,WAIoBn0C,EAIAF,EAA+By6F,EACvCC,EAA+Cj8D,EAIvC2oB,QAAA,IAAAA,MAAe,EAAAnqB,KAAK/f,UATpB,KAAAhd,OAIA,KAAAF,OAA+B,KAAAy6F,eACvC,KAAAC,oBAA+C,KAAAj8D,QAIvC,KAAA2oB,SAClB/oD,KAAKqC,KAAO,EAAAo8C,UAAU69C,wBAAwBz6F,GAC9C,IAAMQ,EAAOrC,KAAKqC,KACZk6F,OAA0B98F,IAAjB28F,QAAoD38F,IAAtB48F,QAA6C58F,IAAV2gC,EAEhF,QAAc3gC,IAAV2gC,GACEA,EAAMxgC,SAAWyC,EACnB,MAAM,IAAII,WAAW,yCAIzB,GAAa,WAATd,EAAmB,CACrB,UAAclC,IAAV2gC,GAAyBt+B,MAAMC,QAAQq+B,IAAWA,EAAMyjC,OAAM,SAAAlkE,GAAK,MAAa,iBAANA,MAC5E,MAAM,IAAIJ,UAAU,kCAGlBg9F,IACFv8F,KAAKogC,MAAQ,IAAIt+B,MAAcO,QAE5B,CACL,QAAc5C,IAAV2gC,EAAqB,CACvB,IAAMh+B,EAAco6F,EAAoB76F,GACxC,KAAMy+B,aAAiBh+B,GACrB,MAAM,IAAI7C,UAAU,wBAAwB6C,EAAYlD,MAI5D,GAAIq9F,EAAO,CACT,IAAM/pE,EAAM,IAAIxuB,YAAY3B,EA4JpC,SAAgBV,GACd,OAAQA,GACN,IAAK,OACL,IAAK,OACL,IAAK,QACH,OAAO,EACT,IAAK,QACL,IAAK,SACH,OAAO,EACT,IAAK,QACL,IAAK,SACL,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,QACE,MAAM,IAAIjC,MAAM,qCAAqCiC,IA5KhB86F,CAAO96F,IAC1C3B,KAAKogC,MAqMb,SAAoB5H,EAAyB72B,GAC3C,OAAO,IAAK66F,EAAoB76F,GAAzB,CAAgC62B,GAtMpBkkE,CAAWlqE,EAAK7wB,KAyJrC,OA9SE,sBAAI,mBAAI,C,IAAR,WACE,QAAmBlC,IAAfO,KAAKogC,MAAqB,CAC5B,IAAMx+B,EAAO5B,KAAKo8F,aAAcp8F,KAAK+oD,QACrC,GAAInnD,EAAKhC,SAAWI,KAAKqC,KACvB,MAAM,IAAI3C,MAAM,8FAElBM,KAAKogC,MAAQx+B,EAEf,OAAO5B,KAAKogC,O,gCAMd,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAdpgC,KAAK2B,KACP,MAAM,IAAIpC,UAAU,2BAGtB,OAAOS,KAAK4B,M,gCAOd,sBAAI,0BAAW,C,IAAf,WACE,OAAQ5B,KAAK2B,MACX,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,OACH,OAAO3B,KAAK4B,KAEd,QACE,MAAM,IAAIrC,UAAU,gF,gCAO1B,sBAAI,wBAAS,C,IAAb,WACE,OAAQS,KAAK2B,MACX,IAAK,UACL,IAAK,UACH,OAAO3B,KAAK4B,KAEd,QACE,MAAM,IAAIrC,UAAU,+C,gCAQ1B,sBAAI,yBAAU,C,IAAd,WACE,GAAkB,WAAdS,KAAK2B,KACP,OAAO3B,KAAK4B,KAEd,MAAM,IAAIrC,UAAU,uC,gCAMtB,YAAA0C,IAAA,SAAI2uF,GACF,OAAO5wF,KAAK4B,KAAK,EAAA68C,UAAUuH,gBAAgB4qC,EAAS5wF,KAAKma,WAM3D,YAAA7Y,IAAA,SAAIsvF,EAA4BxwF,GAC9BJ,KAAK4B,KAAK,EAAA68C,UAAUuH,gBAAgB4qC,EAAS5wF,KAAKma,UAAY/Z,GAM1D,YAAAs8E,QAAN,W,4GACqBj9E,IAAfO,KAAKogC,MAAL,OACF,EAAApgC,KAAa,GAAMA,KAAKq8F,kBAAmBr8F,KAAK+oD,U,OAAhD,EAAK3oB,MAAQ,S,iBAEf,MAAO,CAAP,EAAOpgC,KAAKogC,eAYd,sBAAI,sBAAO,C,IAAX,WAIE,OAHKpgC,KAAK28F,WACR38F,KAAK28F,SAAW,EAAAl+C,UAAUgM,eAAezqD,KAAK6B,OAEzC7B,KAAK28F,U,gCAsDP,EAAA1kD,UAAP,SAAiB2kD,GACf,IAAKA,EACH,MAAM,IAAIl9F,MAAM,+CAElB,IAAMiC,EAAO,EAAAs7E,UAAU0B,wBAAwBie,EAAYnwD,UAGrDrsC,EAAQ,IAAImB,EAFL,EAAA07E,UAAUyB,oBAAoBke,EAAY/6F,MAExBF,GAE/B,GAAa,WAATA,EAGFi7F,EAAYxwD,WAAYzwB,SAAQ,SAACwlB,EAAKxhC,GACpC,IAAM6yB,EAAMgc,OAAOhuC,KAAK2gC,EAAIj9B,OAAQi9B,EAAIh9B,WAAYg9B,EAAI/8B,YACxDhE,EAAMwB,KAAKjC,GAAK6yB,EAAI9U,mBAGjB,GACHk/E,EAAYjwD,SAAqD,iBAAnCiwD,EAAYjwD,QAAQvoC,YAClDw4F,EAAYjwD,QAAQvoC,WAAa,EAAG,CAItC,IAAMy4F,EAAWz8F,EAAMwB,KACjBk7F,EACF,IAAIC,SAASH,EAAYjwD,QAAQzoC,OAAQ04F,EAAYjwD,QAAQxoC,WAAYy4F,EAAYjwD,QAAQvoC,YAC3F44F,EAAcC,EAAYL,EAAYnwD,UACtC,EAASmwD,EAAYjwD,QAAQvoC,WAAa44F,EAEhD,GAAIJ,EAAYjwD,QAAQvoC,WAAa44F,GAAgB,EACnD,MAAM,IAAIt9F,MAAM,yBAElB,GAAIm9F,EAASj9F,SAAW,EACtB,MAAM,IAAIF,MAAM,0BAGlB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAMoG,EAAIm3F,EAAUJ,EAAYF,EAAYnwD,SAAW9sC,EAAIq9F,GAC3DH,EAASl9F,GAAKoG,OAEX,CAEL,IAAIk8D,OAAK,EACT,OAAQ26B,EAAYnwD,UAClB,KAAK,EAAAjF,KAAK0B,YAAY+D,SAAS+J,MAC7BirB,EAAQ26B,EAAY1wD,UACpB,MACF,KAAK,EAAA1E,KAAK0B,YAAY+D,SAASkwD,MAC/B,KAAK,EAAA31D,KAAK0B,YAAY+D,SAASmwD,MAC/B,KAAK,EAAA51D,KAAK0B,YAAY+D,SAASowD,OAC/B,KAAK,EAAA71D,KAAK0B,YAAY+D,SAASqwD,KAC/B,KAAK,EAAA91D,KAAK0B,YAAY+D,SAASswD,MAC/B,KAAK,EAAA/1D,KAAK0B,YAAY+D,SAASuwD,KAC7Bv7B,EAAQ26B,EAAYzwD,UACpB,MACF,KAAK,EAAA3E,KAAK0B,YAAY+D,SAASwwD,MAC7Bx7B,EAAQ26B,EAAYvwD,UACpB,MACF,KAAK,EAAA7E,KAAK0B,YAAY+D,SAASywD,OAC7Bz7B,EAAQ26B,EAAYrwD,WACpB,MACF,KAAK,EAAA/E,KAAK0B,YAAY+D,SAAS0wD,OAC/B,KAAK,EAAAn2D,KAAK0B,YAAY+D,SAAS2wD,OAC7B37B,EAAQ26B,EAAYpwD,WACpB,MACF,QAEE,MAAM,IAAI9sC,MAAM,oBAGpB,GAAIuiE,QACF,MAAM,IAAIviE,MAAM,oDAGlB,IAAMkC,EAAOxB,EAAMwB,KACnB,GAAIA,EAAKhC,SAAWqiE,EAAMriE,OACxB,MAAM,IAAIF,MAAM,yBAGlB,IAASC,EAAI,EAAGA,EAAIsiE,EAAMriE,OAAQD,IAAK,CACrC,IAAMk+F,EAAU57B,EAAMtiE,GAClB,UAAKkgC,OAAOg+D,GACdj8F,EAAKjC,GAAKk4C,EAAagmD,EAASjB,EAAYnwD,UAE5C7qC,EAAKjC,GAAKk+F,GAKhB,OAAOz9F,GAUF,EAAA09F,SAAP,SAAgBl8F,EAA2CC,EAAyBF,GAClF,OAAO,IAAIJ,EAAOM,EAAMF,OAAMlC,OAAWA,EAAWmC,IAG/C,EAAAs2C,cAAP,SAAqB6lD,GACnB,IAAKA,EACH,MAAM,IAAIr+F,MAAM,+CAElB,IAAMmC,EAAO,EAAAo7E,UAAUwC,wBAAwBse,GACzCp8F,EAAO,EAAAs7E,UAAU0B,wBAAwBof,EAAUtxD,YAEnDrsC,EAAQ,IAAImB,EAAOM,EAAMF,GAE/B,GAAa,WAATA,EAGF,IAAK,IAAIhC,EAAI,EAAGA,EAAIo+F,EAAUvO,mBAAoB7vF,IAChDS,EAAMwB,KAAKjC,GAAKo+F,EAAU3xD,WAAWzsC,QAGlC,GACHo+F,EAAUxO,gBAAuD,iBAA9BwO,EAAUzO,iBAAgCyO,EAAUzO,gBAAkB,EAAG,CAI9G,IAAMuN,EAAWz8F,EAAMwB,KACjBk7F,EAAa,IAAIC,SACnBgB,EAAUxO,eAAgBrrF,OAAQ65F,EAAUxO,eAAgBprF,WAAY45F,EAAUzO,iBAChF0N,EAAcC,EAAYc,EAAUtxD,YACpC,EAASsxD,EAAUzO,gBAAkB0N,EAE3C,GAAIe,EAAUzO,gBAAkB0N,GAAgB,EAC9C,MAAM,IAAIt9F,MAAM,yBAElB,GAAIm9F,EAASj9F,SAAW,EACtB,MAAM,IAAIF,MAAM,0BAGlB,IAASC,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAC/B,IAAMoG,EAAIm3F,EAAUJ,EAAYiB,EAAUtxD,WAAY9sC,EAAIq9F,GAC1DH,EAASl9F,GAAKoG,GAGlB,OAAO3F,GAEX,EAlTA,GAwUA,SAAS68F,EAAYt7F,GACnB,OAAQA,GACN,KAAK,EAAA6lC,KAAK0B,YAAY+D,SAASswD,MAC/B,KAAK,EAAA/1D,KAAK0B,YAAY+D,SAASqwD,KAC/B,KAAK,EAAA91D,KAAK0B,YAAY+D,SAASuwD,KAC7B,OAAO,EACT,KAAK,EAAAh2D,KAAK0B,YAAY+D,SAASowD,OAC/B,KAAK,EAAA71D,KAAK0B,YAAY+D,SAASmwD,MAC7B,OAAO,EACT,KAAK,EAAA51D,KAAK0B,YAAY+D,SAAS+J,MAC/B,KAAK,EAAAxP,KAAK0B,YAAY+D,SAASkwD,MAC/B,KAAK,EAAA31D,KAAK0B,YAAY+D,SAAS0wD,OAC7B,OAAO,EACT,KAAK,EAAAn2D,KAAK0B,YAAY+D,SAASwwD,MAC/B,KAAK,EAAAj2D,KAAK0B,YAAY+D,SAASywD,OAC/B,KAAK,EAAAl2D,KAAK0B,YAAY+D,SAAS2wD,OAC7B,OAAO,EACT,QACE,MAAM,IAAIl+F,MAAM,qCAAqC,EAAA8nC,KAAK0B,YAAY+D,SAAStrC,KAQrF,SAAS66F,EAAoB76F,GAC3B,OAAQA,GACN,IAAK,OACL,IAAK,QACH,OAAOb,WACT,IAAK,OACH,OAAOC,UACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOD,YACT,IAAK,QACH,OAAOE,WACT,IAAK,SACH,OAAOE,YACT,IAAK,UACH,OAAOP,aACT,IAAK,UACH,OAAOM,aACT,QAEE,MAAM,IAAIzB,MAAM,sBAKtB,SAASm4C,EAAal4C,EAASgC,GAE7B,GAAIA,IAAS,EAAA6lC,KAAK0B,YAAY+D,SAASwwD,OAAS97F,IAASk0C,EAAO6vC,eAAe+X,OAC7E,GAAI99F,EAAEkkC,mBAAmB,aAAelkC,EAAE6jC,UAAU,YAClD,MAAM,IAAIjkC,UAAU,8BAEjB,IACHoC,IAAS,EAAA6lC,KAAK0B,YAAY+D,SAAS0wD,QAAUh8F,IAASk0C,EAAO6vC,eAAeiY,QAC5Eh8F,IAAS,EAAA6lC,KAAK0B,YAAY+D,SAAS2wD,QAAUj8F,IAASk0C,EAAO6vC,eAAekY,OAK9E,MAAM,IAAIr+F,UAAU,oBAAoB,EAAAioC,KAAK0B,YAAY+D,SAAStrC,IAJlE,GAAIhC,EAAEkkC,mBAAmB,aAAelkC,EAAE6jC,SAAS,GACjD,MAAM,IAAIjkC,UAAU,2BAMxB,OAAOI,EAAEsiC,WAIX,SAASi7D,EAAUc,EAAgBr8F,EAAuDwC,GACxF,OAAQxC,GACN,KAAK,EAAA6lC,KAAK0B,YAAY+D,SAASuwD,KAC/B,KAAK,EAAAh2D,KAAK0B,YAAY+D,SAASswD,MAC7B,OAAOS,EAAKC,SAAS95F,GACvB,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAASqwD,KAC7B,OAAOU,EAAKE,QAAQ/5F,GACtB,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAASowD,OAC7B,OAAOW,EAAKG,UAAUh6F,GAAY,GACpC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAASmwD,MAC7B,OAAOY,EAAKI,SAASj6F,GAAY,GACnC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAAS+J,MAC7B,OAAOgnD,EAAKK,WAAWl6F,GAAY,GACrC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAASkwD,MAC7B,OAAOa,EAAKM,SAASn6F,GAAY,GACnC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAAS0wD,OAC7B,OAAOK,EAAKO,UAAUp6F,GAAY,GACpC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAASwwD,MAC7B,OAAO5lD,EACH,UAAKxX,SAAS29D,EAAKO,UAAUp6F,GAAY,GAAO65F,EAAKO,UAAUp6F,EAAa,GAAG,IAAO,GAAQxC,GACpG,KAAK,EAAA6lC,KAAK0B,YAAY+D,SAASywD,OAC7B,OAAOM,EAAKQ,WAAWr6F,GAAY,GACrC,KAAK,EAAAqjC,KAAK0B,YAAY+D,SAAS2wD,OAC7B,OAAO/lD,EACH,UAAKxX,SAAS29D,EAAKO,UAAUp6F,GAAY,GAAO65F,EAAKO,UAAUp6F,EAAa,GAAG,IAAO,GAAOxC,GACnG,QACE,MAAM,IAAIjC,MAAM,sCAAsC,EAAA8nC,KAAK0B,YAAY+D,SAAStrC,KA1azE,EAAAJ,U,o9BCzCb,cACA,aACA,UAIA,UAMA,4BAAiCqmD,G,IAAkB,wDACjD,IAAKA,GAAUA,EAAOhoD,SAAW6+F,EAAmB7+F,OAClD,OAAO,EAET,IAAK,IAAID,EAAI,EAAGA,EAAIioD,EAAOhoD,OAAQD,IACjC,IAAKioD,EAAOjoD,GAAGkC,MAAQ+lD,EAAOjoD,GAAGkC,KAAKjC,SAAW6+F,EAAmB9+F,GAClE,OAAO,EAGX,OAAO,GAIT,kBAAuB++F,EAAeC,GACpC,IAAKD,EACH,MAAM,IAAIh/F,MAAqB,iBAARi/F,EAAmBA,EAAMA,MAIpD,+BAsBA,OAfS,EAAAviD,YAAP,SACIwiD,EAEAC,GAEF,GAAID,EAAGh/F,SAAWi/F,EAAGj/F,OACnB,OAAO,EAET,IAAK,IAAID,EAAI,EAAGA,EAAIi/F,EAAGh/F,OAAQD,IAC7B,GAAIi/F,EAAGj/F,KAAOk/F,EAAGl/F,GACf,OAAO,EAGX,OAAO,GAEX,EAtBA,GAAa,EAAAw8C,YAwBb,+BAkDA,OA3CS,EAAA2iD,sBAAP,SAA6BC,EAA0BC,GAYrD,MAAO,CAPqB,IAAjBD,EAAMn/F,OAAgB,CAAC,EAAGm/F,EAAM,IAAMA,EAKrB,IAAjBC,EAAMp/F,OAAgB,CAACo/F,EAAM,GAAI,GAAKA,IAY5C,EAAAC,uBAAP,SAA8BvsC,EAAuBI,EAAeC,GAEpD,IAAVD,GAEFJ,EAAY7yD,OAAO6yD,EAAY9yD,OAAS,EAAG,GAG/B,IAAVmzD,GACFL,EAAY3hD,OAUT,EAAAmuF,gBAAP,SAAuB54F,EAAqBa,GAC1C,OAAQb,EAAE,KAAOa,EAAE,QAAM1H,EAAY,CAAC6G,EAAE,GAAIa,EAAE,KAElD,EAlDA,GAAa,EAAAg4F,aAoDb,+BA+LA,OAvLS,EAAAtsC,UAAP,SAAiBusC,EAA0BC,EAA0BC,G,WAAA,IAAAA,OAAA,GACnE,IAAM9gC,EAAQ4gC,EAAMx/F,OACd6+D,EAAQ4gC,EAAMz/F,OACpB,GAAc,IAAV4+D,EACF,OAAO6gC,EAET,GAAc,IAAV5gC,EACF,OAAO2gC,EAET,IAAMG,EAAQ7oF,KAAKgG,IAAI0iF,EAAMx/F,OAAQy/F,EAAMz/F,QACrC4/F,EAAQ,IAAI19F,MAAcy9F,GAGhC,GAAID,EAAU,CACZ,GAAI9gC,EAAQ,GAAKC,EAAQ,EACvB,OAEF,IAAMghC,EACFN,EAAWD,gBAAgB,CAACE,EAAM5gC,EAAQ,GAAI4gC,EAAM5gC,EAAQ,IAAK,CAAC6gC,EAAM5gC,EAAQ,GAAI4gC,EAAM5gC,EAAQ,KACtG,QAAqBh/D,IAAjBggG,EACF,OAEF,IAAuCA,EAAY,GAAlDD,EAAMD,EAAQ,GAAE,KAAEC,EAAMD,EAAQ,GAAE,KAGrC,IAAK,IAAI5/F,EAAI2/F,EAAW,EAAI,EAAG3/F,GAAK4/F,EAAO5/F,IAAK,CAC9C,IAAM+/F,EAAOlhC,EAAQ7+D,EAAI,EAAI,EAAIy/F,EAAM5gC,EAAQ7+D,GACzCggG,EAAOlhC,EAAQ9+D,EAAI,EAAI,EAAI0/F,EAAM5gC,EAAQ9+D,GAE/C,GAAI+/F,IAASC,GAAQD,EAAO,GAAKC,EAAO,EACtC,OAEFH,EAAMD,EAAQ5/F,GAAK+W,KAAKgG,IAAIgjF,EAAMC,GAGpC,OAAOH,GASF,EAAA3uE,MAAP,SAAa+uE,EAAuCC,GAIlD,IAAMC,EAAkB,IAAIh+F,MAAM+9F,EAAcjgG,QAEhD,OADAq+C,EAAc8hD,UAAUH,EAAoBC,EAAeC,GACpDA,GAUF,EAAAC,UAAP,SAAiBH,EAAuCC,EAAkCC,GAKxF,IADA,IAAM35C,EAAYy5C,EAAmBhgG,OAASigG,EAAcjgG,OACnDD,EAAI,EAAGA,EAAIkgG,EAAcjgG,OAAQD,IACxCmgG,EAAgBngG,GAAKigG,EAAmBz5C,EAAYxmD,GAAKkgG,EAAclgG,IAYpE,EAAAqgG,KAAP,SACI15F,EAAWa,EAAWgnE,EAA+D8xB,EACrFC,GACF,IAAMxtC,EAAczU,EAAc4U,UAAUvsD,EAAEzE,KAAMsF,EAAEtF,MAEtD,GAAI6wD,EAAa,CACf,GAAIutC,IAAYxhD,EAAUgU,SAASC,EAAapsD,EAAEzE,MAEhD,OAGF,IAAMQ,EAAOo8C,EAAUp8C,KAAKqwD,GACtBjsD,EAAIw5F,EAAU35F,EAAI,IAAI,EAAA/E,OAAOmxD,EAAawtC,GAAc55F,EAAE3E,MAGhE,GAA2B,IAAvB+wD,EAAY9yD,OACd6G,EAAEnF,IAAI,GAAI6sE,EAAG7nE,EAAErE,IAAI,IAAKkF,EAAElF,IAAI,UAI3B,CACH,IAAMk+F,EAAgB,IAAIr+F,MAAc4wD,EAAY9yD,QAC9CwgG,EAAmB,IAAIt+F,MAAMwE,EAAEzE,KAAKjC,QACpCygG,EAAmB,IAAIv+F,MAAMqF,EAAEtF,KAAKjC,QACtC0gG,EAAsB,EACtBC,EAAsB,EACtBC,GAAY,EACZC,GAAY,EACM,IAAlBn6F,EAAEzE,KAAKjC,SACT0gG,EAAOh6F,EAAErE,IAAI,IACbu+F,GAAY,GAEQ,IAAlBr5F,EAAEtF,KAAKjC,SACT2gG,EAAOp5F,EAAElF,IAAI,IACbw+F,GAAY,GAGd,IADA,IAAIC,OAAI,EACC/gG,EAAI,EAAGA,EAAI0C,EAAM1C,IAAK,CAE7B+gG,EAAO/gG,EACP,IAAK,IAAIiG,EAAI8sD,EAAY9yD,OAAS,EAAGgG,GAAK,EAAGA,IAC3Cu6F,EAAcv6F,GAAK86F,EAAOhuC,EAAY9sD,GACtC86F,EAAOhqF,KAAK6c,MAAMmtE,EAAOhuC,EAAY9sD,IAGlC46F,IAEHviD,EAAc8hD,UAAUI,EAAe75F,EAAEzE,KAAMu+F,GAC/CE,EAAOh6F,EAAErE,IAAIm+F,IAEVK,IACHxiD,EAAc8hD,UAAUI,EAAeh5F,EAAEtF,KAAMw+F,GAC/CE,EAAOp5F,EAAElF,IAAIo+F,IAGf55F,EAAEnF,IAAI6+F,EAAehyB,EAAGmyB,EAAMC,KAIlC,OAAO95F,IAWJ,EAAAk6F,iBAAP,SAAwB7yD,EAA0B8yD,GAEhD,IAAM/hC,EAAY/wB,EAAMluC,OAClBihG,EAAYD,EAAWhhG,OAC7B,GAAIi/D,EAAYgiC,EACd,OAAO,EAET,IAAK,IAAIlhG,EAAI,EAAGA,GAAKk/D,EAAWl/D,IAC9B,GAA6B,IAAzBmuC,EAAM+wB,EAAYl/D,IAAYmuC,EAAM+wB,EAAYl/D,KAAOihG,EAAWC,EAAYlhG,GAChF,OAAO,EAGX,OAAO,GAUF,EAAAu+C,iBAAP,SAAwBmV,EAA+BX,GAGrD,IAFA,IAAM5U,EAASuV,EAAWzzD,OACpBiC,EAAiB,GACdlC,EAAI,EAAGA,EAAIm+C,EAAQn+C,IAAK,CAC/B,IAAM2C,EAAMw7C,EAAS,EAAIn+C,EACnB2G,EAAI+sD,EAAW/wD,IAAQ,GACnBowD,EAAYA,EAAY9yD,OAAS,EAAID,IAAM,GAC7C,GAAW,IAAN2G,GACXzE,EAAK+L,QAAQtL,GAGjB,OAAOT,GAEX,EA/LA,GAAa,EAAAo8C,gBAmMb,2BACIlrC,EAAoCmpC,EAAoC4kD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAe7kD,EAAOt8C,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIohG,EAAc,GAAKA,GAAe/tF,EAAOnT,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIqhG,EAAcC,EAAY9kD,EAAOt8C,OACnC,MAAM,IAAIF,MAAM,kDAElB,GAAIohG,EAAcE,EAAYjuF,EAAOnT,OACnC,MAAM,IAAIF,MAAM,4CAGlB,IAAK,IAAI0X,EAAS,EAAGA,EAAS4pF,EAAW5pF,IACvCrE,EAAO+tF,EAAc1pF,GAAU8kC,EAAO6kD,EAAc3pF,IAIxD,+BA+CA,OA3CS,EAAAgkD,qBAAP,SACI6lC,EAA8BC,EAAoBC,EAA+BC,EACjFC,GACF,GAAyB,IAArBJ,EAAUrhG,QAAsC,IAAtBuhG,EAAWvhG,OACvC,MAAM,IAAIF,MAAM,8BAGlB,IAAI+K,EACA0C,EACA3B,EAEA01F,GACFz2F,EAAIw2F,EAAU,GACd9zF,EAAI8zF,EAAU,KAEdx2F,EAAIw2F,EAAU,GACd9zF,EAAI8zF,EAAU,IAGhB,IAAIK,GAAQ,EAUZ,GARIF,GACF51F,EAAI21F,EAAW,GACfG,EAAO,IAEP91F,EAAI21F,EAAW,GACfG,EAAO,GAGLH,EAAWG,KAAUn0F,EACvB,MAAM,IAAIzN,MAAM,sBAGlB,GAAI+K,GAAK,GAAKe,GAAK,GAAK2B,GAAK,EAC3B,MAAM,IAAIzN,MAAM,2BAGlB,GAAI2hG,IAAcpjD,EAAc0iD,iBAAiBU,EAAW,CAAC52F,EAAGe,IAC9D,MAAM,IAAI9L,MAAM,0CAGlB,MAAO,CAAC+K,EAAGe,EAAG2B,IAElB,EA/CA,GAAa,EAAAguD,WAiDb,+BAgGA,OA/FS,EAAAwjB,wBAAP,SAA+B4iB,GAE7B,OAAQA,GACN,KAAK,EAAA/5D,KAAK0B,YAAY+D,SAASqwD,KAC7B,MAAO,OACT,KAAK,EAAA91D,KAAK0B,YAAY+D,SAASswD,MAC7B,MAAO,QACT,KAAK,EAAA/1D,KAAK0B,YAAY+D,SAASuwD,KAC7B,MAAO,OACT,KAAK,EAAAh2D,KAAK0B,YAAY+D,SAASmwD,MAC7B,MAAO,QACT,KAAK,EAAA51D,KAAK0B,YAAY+D,SAASowD,OAC7B,MAAO,SACT,KAAK,EAAA71D,KAAK0B,YAAY+D,SAASkwD,MAC7B,MAAO,QACT,KAAK,EAAA31D,KAAK0B,YAAY+D,SAAS0wD,OAC7B,MAAO,SACT,KAAK,EAAAn2D,KAAK0B,YAAY+D,SAAS+J,MAC7B,MAAO,UACT,KAAK,EAAAxP,KAAK0B,YAAY+D,SAASywD,OAC7B,MAAO,UACT,KAAK,EAAAl2D,KAAK0B,YAAY+D,SAASiK,OAC7B,MAAO,SAIT,KAAK,EAAA1P,KAAK0B,YAAY+D,SAASwwD,MAC7B,MAAO,QACT,KAAK,EAAAj2D,KAAK0B,YAAY+D,SAAS2wD,OAC7B,MAAO,SAET,QACE,MAAM,IAAIl+F,MAAM,0BAA0B,EAAA8nC,KAAK0B,YAAY+D,SAASs0D,MAInE,EAAAC,2BAAP,SAAkC7/F,GAChC,OAAQA,GACN,IAAK,OACH,OAAO,EAAA6lC,KAAK0B,YAAY+D,SAASqwD,KACnC,IAAK,QACH,OAAO,EAAA91D,KAAK0B,YAAY+D,SAASswD,MACnC,IAAK,OACH,OAAO,EAAA/1D,KAAK0B,YAAY+D,SAASuwD,KACnC,IAAK,QACH,OAAO,EAAAh2D,KAAK0B,YAAY+D,SAASmwD,MACnC,IAAK,SACH,OAAO,EAAA51D,KAAK0B,YAAY+D,SAASowD,OACnC,IAAK,QACH,OAAO,EAAA71D,KAAK0B,YAAY+D,SAASkwD,MACnC,IAAK,SACH,OAAO,EAAA31D,KAAK0B,YAAY+D,SAAS0wD,OACnC,IAAK,UACH,OAAO,EAAAn2D,KAAK0B,YAAY+D,SAAS+J,MACnC,IAAK,UACH,OAAO,EAAAxP,KAAK0B,YAAY+D,SAASywD,OACnC,IAAK,SACH,OAAO,EAAAl2D,KAAK0B,YAAY+D,SAASiK,OACnC,IAAK,QACH,OAAO,EAAA1P,KAAK0B,YAAY+D,SAASwwD,MACnC,IAAK,SACH,OAAO,EAAAj2D,KAAK0B,YAAY+D,SAAS2wD,OAEnC,QACE,MAAM,IAAIl+F,MAAM,0BAA0BiC,KAIzC,EAAA+8E,oBAAP,SAA2B78E,GAEzB,OAAOA,EAAK0C,KAAI,SAAAwC,GAAK,iBAAK84B,OAAO94B,GAAKA,EAAEk7B,WAAal7B,MAGhD,EAAAm2E,yBAAP,SAAgCiC,GAC9B,MAAO,CACLvxC,WAAYqvC,EAAU0B,wBAAwBQ,EAAUtxC,UACxDC,MAAO,CAACjsC,KAAMo7E,EAAUyB,oBAAoBS,EAAUrxC,MAAOxrC,IAAKiC,KAAI,SAAAwC,GAAK,OAAAA,EAAEumC,gBAI1E,EAAAmyC,wBAAP,SAA+B92B,GAE7B,IADA,IAAM9mD,EAAO,GACJlC,EAAI,EAAGA,EAAIgpD,EAAO0mC,aAAc1vF,IACvCkC,EAAK/B,KAAK83C,EAASC,aAAa8Q,EAAO9mD,KAAKlC,KAE9C,OAAOkC,GAGF,EAAAw7E,8BAAP,SAAqCz1E,GAEnC,IADA,IAAMyZ,EAAa,GACV1hB,EAAI,EAAGA,EAAIiI,EAAKi4E,mBAAoBlgF,IAC3C0hB,EAAWvhB,KAAK8H,EAAKyZ,WAAW1hB,IAElC,OAAO0hB,GAEX,EAhGA,GAAa,EAAA47D,YAkGb,+BAYA,OAXS,EAAAplC,aAAP,SAAoB9xC,GAClB,OAAI,UAAK85B,OAAO95B,GACPA,EAAEk8B,WACAl8B,aAAa,EAAAmwB,YAAYc,KAC3B,UAAKyK,UAAU,CAACxK,IAAKlxB,EAAEkxB,IAAKC,KAAMnxB,EAAEmxB,KAAM0I,UAAU,IAAOqC,WAE7Dl8B,GAEF,EAAA85B,OAAP,SAAc95B,GACZ,OAAO,UAAK85B,OAAO95B,IAAMA,aAAa,EAAAmwB,YAAYc,MAEtD,EAZA,GAAa,EAAA4gB,WAcb,+BA0UA,OAzUS,EAAAv1C,KAAP,SAAYR,GACV,OAAO48C,EAAUgjD,0BAA0B5/F,EAAM,EAAGA,EAAKjC,SAIpD,EAAAimE,kBAAP,SAAyBhkE,EAAyB6iB,GAChD,GAAIA,EAAO,GAAKA,EAAO7iB,EAAKjC,OAC1B,MAAM,IAAIF,MAAM,wBAAwBglB,EAAI,wCAAwC7iB,EAAKjC,OAAM,gBAEjG,OAAO6+C,EAAUgjD,0BAA0B5/F,EAAM6iB,EAAM7iB,EAAKjC,SAIvD,EAAAgmE,gBAAP,SAAuB/jE,EAAyB6iB,GAC9C,GAAIA,EAAO,GAAKA,EAAO7iB,EAAKjC,OAC1B,MAAM,IAAIF,MAAM,wBAAwBglB,EAAI,sCAAsC7iB,EAAKjC,OAAM,gBAE/F,OAAO6+C,EAAUgjD,0BAA0B5/F,EAAM,EAAG6iB,IAG/C,EAAA+8E,0BAAP,SAAiC5/F,EAAyByvB,EAAeC,GAEvE,IADA,IAAIlvB,EAAO,EACF1C,EAAI2xB,EAAO3xB,EAAI4xB,EAAK5xB,IAAK,CAGhC,GAAIkC,EAAKlC,IAAM,EACb,MAAM,IAAID,MAEN,sHAEN2C,GAAQR,EAAKlC,GAEf,OAAO0C,GAGF,EAAAooD,eAAP,SAAsB5oD,GACpB,IAAM66C,EAAO76C,EAAKjC,OAClB,GAAa,IAAT88C,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAAC,GAEV,IAAMviC,EAAU,IAAIrY,MAAM46C,GAC1BviC,EAAQuiC,EAAO,GAAK,EACpBviC,EAAQuiC,EAAO,GAAK76C,EAAK66C,EAAO,GAChC,IAAK,IAAI/8C,EAAI+8C,EAAO,EAAG/8C,GAAK,IAAKA,EAC/Bwa,EAAQxa,GAAKwa,EAAQxa,EAAI,GAAKkC,EAAKlC,EAAI,GAEzC,OAAOwa,GAGF,EAAAqN,UAAP,SAAiB3lB,GAEf,OADaA,EAAK4G,QACNu4C,WAGP,EAAAgF,gBAAP,SAAuB4qC,EAA4Bz2E,EAA4BuK,QAChEjlB,IAATilB,IACFA,EAAOksE,EAAQhxF,QAGjB,IADA,IAAIwX,EAAS,EACJzX,EAAI,EAAGA,EAAI+kB,IAAQ/kB,EAC1ByX,GAAU+C,EAAQxa,GAAKixF,EAAQjxF,GAEjC,OAAOyX,GAGF,EAAA2uC,gBAAP,SAAuB3uC,EAAgB+C,GACrC,IAAMuiC,EAAOviC,EAAQva,OACrB,GAAa,IAAT88C,EACF,MAAO,GACF,GAAa,IAATA,EACT,MAAO,CAACtlC,EAAS+C,EAAQ,IAG3B,IADA,IAAMy2E,EAAoB,IAAI9uF,MAAMqY,EAAQva,QACnCD,EAAI,EAAGA,EAAIixF,EAAQhxF,OAAS,IAAKD,EACxCixF,EAAQjxF,GAAK+W,KAAK6c,MAAMnc,EAAS+C,EAAQxa,IACzCyX,GAAUw5E,EAAQjxF,GAAKwa,EAAQxa,GAGjC,OADAixF,EAAQA,EAAQhxF,OAAS,GAAKwX,EACvBw5E,GAMF,EAAAr2B,cAAP,SAAqB71C,EAAcuwC,GACjC,GAAIvwC,GAAQuwC,GAAcvwC,GAAQuwC,EAChC,MAAM,IAAIv1D,MAAM,wCAElB,OAAOglB,EAAO,EAAIA,EAAOuwC,EAAavwC,GAGjC,EAAAg+C,cAAP,SAAqBJ,EAAyBrN,GAA9C,WACE,OAAOqN,EAAK/9D,KAAI,SAAA4F,GAAK,SAAKowD,cAAcpwD,EAAG8qD,OAWtC,EAAAysC,eAAP,SAAsB7wE,EAAiBhvB,EAAyB8/F,GAC9D,GAAoB,IAAhB9/F,EAAKjC,QAAiC,IAAjBixB,EAAMjxB,OAC7B,MAAM,IAAIF,MAAM,oDAElB,QAA0BD,IAAtBkiG,EACFA,EAAoB9/F,EAAKjC,YAEzB,GAAI+hG,GAAqB,GAAKA,EAAoB9/F,EAAKjC,OACrD,MAAM,IAAIF,MAAM,kCAIpB,IAAK,IAAI2K,EAAIs3F,EAAoB,EAAGt3F,GAAK,IACvCwmB,EAAMxmB,OACFwmB,EAAMxmB,GAAKxI,EAAKwI,OAFwBA,EAK5CwmB,EAAMxmB,GAAK,GAgBR,EAAAk5D,sBAAP,SAA6Bq+B,EAAiCC,GAE5D,GAA0B,IAAtBA,EAAWjiG,OAAc,CAC3B,GAA4B,IAAxBgiG,EAAahiG,QAAiD,IAAjC6+C,EAAUp8C,KAAKu/F,GAC9C,MAAO,GAEP,MAAM,IAAIliG,MAAM,qCAQpB,IAJA,IAAMoiG,EAAQD,EAAWjiG,OACnBwqD,EAAe,IAAItoD,MAAcggG,GACnCC,GAAoB,EACpBC,EAAgB,EACXriG,EAAI,EAAGA,EAAImiG,EAAOniG,IAAK,CAC9B,GAAIkiG,EAAWliG,IAAM,EACnB,MAAM,IAAID,MAAM,qDAElB,IAAuB,IAAnBmiG,EAAWliG,GAAW,CACxB,IAA0B,IAAtBoiG,EACF,MAAM,IAAIriG,MAAM,kDAElBqiG,EAAmBpiG,MACd,CACL,GAAsB,IAAlBkiG,EAAWliG,GAAU,CACvB,GAAIA,GAAKiiG,EAAahiG,OACpB,MAAM,IAAIF,MAAM,gFAElB0qD,EAAazqD,GAAKiiG,EAAajiG,QAE/ByqD,EAAazqD,GAAKkiG,EAAWliG,GAE/BqiG,GAAiB53C,EAAazqD,IAIlC,IAAMsiG,EAAgBxjD,EAAUp8C,KAAKu/F,GACrC,IAA0B,IAAtBG,EAAyB,CAC3B,GAAIE,EAAgBD,GAAkB,EACpC,MAAM,IAAItiG,MAAM,6EACZkiG,EAAY,oBAAoBC,EAAU,KAEhDz3C,EAAa23C,GAAoBE,EAAgBD,OAIjD,GAAIA,IAAkBC,EACpB,MAAM,IAAIviG,MAAM,2DAGpB,OAAO0qD,GASF,EAAAod,gBAAP,SAAuBlhE,EAAsBsyD,GAC3C,OAAIA,EACKA,EAAKr0D,KAAI,SAACjB,GAAM,OAAAgD,EAAEhD,MAElBgD,EAAEmC,QAAQu4C,WASd,EAAAue,SAAP,SAAgB19D,EAAyBo3B,GACvC,IAAMyjB,EAAO76C,EAAKjC,OAClB,OAAOiC,EAAK0C,KAAI,SAACjB,EAAG3D,GAAM,OAAA2D,EAAI21B,EAAIt5B,GAAKs5B,EAAIt5B,EAAI+8C,OAQ1C,EAAA+V,SAAP,SAAgByvC,EAA2BC,GACzC,OAAID,EAAOtiG,SAAWuiG,EAAOviG,QAGtBsiG,EAAOr+B,OAAM,SAACvgE,EAAG3D,GAAM,OAAA2D,IAAM6+F,EAAOxiG,OAOtC,EAAA28F,wBAAP,SAA+Bz6F,G,QAC7B,GAAIA,EAAKjC,OAAS,EAChB,MAAM,IAAIL,UAAU,mDAEtB,IAAI8C,EAAO,E,IACX,IAAgB,QAAAR,GAAI,8BAAE,CAAjB,IAAMkE,EAAC,QACV,IAAKxD,OAAOunC,UAAU/jC,GACpB,MAAM,IAAIxG,UAAU,kBAAkBwG,EAAC,sBAEzC,GAAIA,EAAI,GAAKA,EAAI,WACf,MAAM,IAAIxG,UAAU,yBAAyBwG,EAAC,mBAEhD1D,GAAQ0D,G,iGAEV,OAAO1D,GAQF,EAAAu3D,aAAP,SAAoB/3D,EAAyB6iB,GACvCA,EAAO,IACTA,GAAQ7iB,EAAKjC,QAEf,IAAMwiG,EAAQvgG,EAAKkgE,QAAO,SAAC53D,EAAG7C,GAAM,OAAA6C,EAAI7C,IAAG,GACrC+6F,EAAQxgG,EAAK4G,MAAMic,GAAMq9C,QAAO,SAAC53D,EAAG7C,GAAM,OAAA6C,EAAI7C,IAAG,GAGvD,MAFmB,CAAC86F,EAAQC,EAAOA,IAU9B,EAAA5hD,aAAP,SAAoB5+C,EAAyBygE,GAC3C,IAAM3I,EAAa,IAAI73D,MAGvBwgE,EAAO7jB,EAAUikB,cAAcJ,EAAMzgE,EAAKjC,QAE1C,IAAK,IAAID,EAAI,EAAGA,EAAIkC,EAAKjC,OAAQD,IAAK,CACpC,IAAM2iG,EAAgBhgC,EAAKjiE,QAAQV,IAAM,EACzC,GAAI2iG,GAA6B,IAAZzgG,EAAKlC,GACxB,MAAM,IAAID,MAAM,6CAGG,IAAhB4iE,EAAK1iE,QAAgBiC,EAAKlC,GAAK,GAAO2iE,EAAK1iE,OAAS,IAAM0iG,IAC7D3oC,EAAW75D,KAAK+B,EAAKlC,IAIzB,OAAOg6D,GAQF,EAAA0P,eAAP,SAAsBxnE,EAAyBygE,GAC7C,IAAM3I,EAAa,IAAI73D,MAAcD,EAAKjC,OAAS0iE,EAAK1iE,QAGxD+5D,EAAW9iD,KAAK,GAGhB,IAAK,IAAIlX,EAAI,EAAGA,EAAI2iE,EAAK1iE,OAAQD,IAAK,CACpC,IAAM+kB,EAAO+5B,EAAU8b,cAAc+H,EAAK3iE,GAAIkC,EAAKjC,QACnD,GAAI8kB,GAAQi1C,EAAW/5D,OACrB,MAAM,IAAIF,MAAM,mCAElB,GAAyB,IAArBi6D,EAAWj1C,GACb,MAAM,IAAIhlB,MAAM,+BAGlBi6D,EAAWj1C,GAAQ,EAIrB,IAAI69E,EAAoB,EACxB,IAAS5iG,EAAI,EAAGA,EAAIg6D,EAAW/5D,OAAQD,IACf,IAAlBg6D,EAAWh6D,KACbg6D,EAAWh6D,GAAKkC,EAAK0gG,MAMzB,GAAIA,IAAsB1gG,EAAKjC,OAC7B,MAAM,IAAIF,MAAM,qDAGlB,OAAOi6D,GAEX,EA1UA,GAAa,EAAAlb,YA6Ub,+BAwFA,OAtFS,EAAA+jD,IAAP,SACIzvF,EAAoCmpC,EAAoC4kD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAe7kD,EAAOt8C,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIohG,EAAc,GAAKA,GAAe/tF,EAAOnT,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIqhG,EAAcC,EAAY9kD,EAAOt8C,OACnC,MAAM,IAAIF,MAAM,kDAElB,GAAIohG,EAAcE,EAAYjuF,EAAOnT,OACnC,MAAM,IAAIF,MAAM,4CAGlB,IAAK,IAAI0X,EAAS,EAAGA,EAAS4pF,EAAW5pF,IACvCrE,EAAO+tF,EAAc1pF,IAAWV,KAAK+c,IAAIyoB,EAAO6kD,EAAc3pF,GAAS,IAKpE,EAAAqrF,KAAP,SACI1vF,EAAoCmpC,EAAoC4kD,EAAqBC,EAC7FC,EAAmBnnF,GACrB,GAAIknF,EAAc,GAAKA,GAAe7kD,EAAOt8C,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIohG,EAAc,GAAKA,GAAe/tF,EAAOnT,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIqhG,EAAcC,EAAY9kD,EAAOt8C,OACnC,MAAM,IAAIF,MAAM,kDAElB,GAAIohG,EAAcE,EAAYjuF,EAAOnT,OACnC,MAAM,IAAIF,MAAM,4CAGlB,IAAK,IAAI0X,EAAS,EAAGA,EAAS4pF,EAAW5pF,IACvCrE,EAAO+tF,EAAc1pF,IAAYyC,EAAQqiC,EAAO6kD,EAAc3pF,IAK3D,EAAAsrF,KAAP,SACI3vF,EAAoCmpC,EAAoC4kD,EAAqBC,EAC7FC,EAAmB75F,GACrB,GAAI45F,EAAc,GAAKA,GAAe7kD,EAAOt8C,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIohG,EAAc,GAAKA,GAAe/tF,EAAOnT,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIqhG,EAAcC,EAAY9kD,EAAOt8C,OACnC,MAAM,IAAIF,MAAM,kDAElB,GAAIohG,EAAcE,EAAYjuF,EAAOnT,OACnC,MAAM,IAAIF,MAAM,4CAGlB,IAAK,IAAI0X,EAAS,EAAGA,EAAS4pF,EAAW5pF,IACvCrE,EAAO+tF,EAAc1pF,GAAUV,KAAK+c,IAAIyoB,EAAO6kD,EAAc3pF,GAASjQ,IAKnE,EAAAq6B,IAAP,SACIzuB,EAAoCmpC,EAAoC4kD,EAAqBC,EAC7FC,GACF,GAAID,EAAc,GAAKA,GAAe7kD,EAAOt8C,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIohG,EAAc,GAAKA,GAAe/tF,EAAOnT,OAC3C,MAAM,IAAIF,MAAM,6BAElB,GAAIqhG,EAAcC,EAAY9kD,EAAOt8C,OACnC,MAAM,IAAIF,MAAM,kDAElB,GAAIohG,EAAcE,EAAYjuF,EAAOnT,OACnC,MAAM,IAAIF,MAAM,4CAGlB,IAAK,IAAI0X,EAAS,EAAGA,EAAS4pF,EAAW5pF,IACvCrE,EAAO+tF,EAAc1pF,GAAW8kC,EAAO6kD,EAAc3pF,GAAUrE,EAAO+tF,EAAc1pF,IAG1F,EAxFA,GAAa,EAAAurF,WA0Fb,+BAsCA,OA/BS,EAAA/7B,WAAP,SAAkB/kE,EAAyB6iB,EAAclL,EAAiBitD,GAExE,GAAqB,IAAjBjtD,EAAM5Z,OAAc,CACtB,IAAK6mE,EACH,MAAM,IAAI/mE,MAAM,8EAElBinE,EAAUi8B,eAAe/gG,EAAK6iB,GAAO+hD,EAAYjtD,GAKnD,IAFA,IAAMo6C,EAAqB,GACrBC,EAAU,CAAC,GACRl0D,EAAI,EAAGA,EAAI6Z,EAAM5Z,SAAUD,EAAG,CAC3B,IAANA,GACFk0D,EAAQ/zD,KAAK+zD,EAAQl0D,EAAI,GAAK6Z,EAAM7Z,EAAI,IAE1C,IAAMmuC,EAAQjsC,EAAK4G,QACnBqlC,EAAMppB,GAAQlL,EAAM7Z,GACpBi0D,EAAO9zD,KAAKguC,GAEd,MAAO,CAAC8lB,EAAQC,IAGX,EAAA+uC,eAAP,SAAsBC,EAA8Bp8B,EAAoBjtD,GAEtE,GAAIqpF,EAAuBp8B,GAAe,EACxC,MAAM,IAAI/mE,MAAM,4CAElB,IAAK,IAAIC,EAAI,EAAGA,EAAI8mE,IAAc9mE,EAChC6Z,EAAM1Z,KAAK+iG,EAAuBp8B,IAGxC,EAtCA,GAAa,EAAAE,YAwCb,+BA4FA,OAlFS,EAAAm8B,WAAP,SACIx8F,EAAWg8D,EAAgBygC,EAAmBtiC,EAC9CP,GACF,IAAMr+D,EAAOyE,EAAEzE,KAAK4G,MAAM,GAEN,IAAhB65D,EAAK1iE,QACPiC,EAAK8Z,SAAQ,SAAC5U,EAAGy5E,GAAQ,OAAAle,EAAKxiE,KAAK0gF,MAWrC,IARA,IAAM7mB,EAAaqpC,EAAWC,gBAAgBphG,EAAMygE,GAAM,GAGpDjgE,EAAOo8C,EAAUp8C,KAAKs3D,GACtBryD,EAAI,IAAI,EAAA/F,OAAOo4D,EAAYrzD,EAAE3E,MAC7BwY,EAAUskC,EAAUgM,eAAekP,GACnCupC,EAAezkD,EAAUgM,eAAe5oD,GACxCshG,EAAW,IAAIrhG,MAAMD,EAAKjC,QACvBD,EAAI,EAAGA,EAAI0C,EAAM1C,IAAK,CAC7B,IAAMixF,EAAUnyC,EAAUsH,gBAAgBpmD,EAAGwa,GAE7C8jC,EAAc8hD,UAAUnP,EAAS/uF,EAAMshG,GACvC77F,EAAEhG,IACEsvF,EACAoS,EAAWI,iBACP98F,EAAE8iD,WAAYkZ,EAAMzgE,EAAM,EAAG48C,EAAUuH,gBAAgBm9C,EAAUD,GAAeziC,EAAKP,IAG/F,OAAI6iC,EACKz7F,EAGA,IAAI,EAAA/F,OACPyhG,EAAWC,gBAAgBphG,EAAMygE,EAAMygC,GAAWz7F,EAAE3F,UAAMlC,OAAWA,EAAW6H,EAAE1F,KAAM0F,EAAEyhD,SAe3F,EAAAq6C,iBAAP,SACIj9E,EAA0Bm8C,EAAgBzgE,EAAgBwhG,EAAoB5wE,EAC9EguC,EAA4BP,GAC9B,IAAIz6B,EAAM,EACV,GAAI49D,GAAc/gC,EAAK1iE,OACrB,OAAO6gE,EAAIt6C,EAAMsM,IAInB,IAFA,IAAM/N,EAAO49C,EAAK+gC,GACZC,EAAO5+E,GAAQ7iB,EAAKjC,OAAS,EAAI6+C,EAAUp8C,KAAKR,EAAK4G,MAAMic,EAAO,IAC/D/kB,EAAI,EAAGA,EAAIkC,EAAK6iB,GAAO/kB,IAC9B8lC,EAAY,IAAN9lC,EAAUqjG,EAAWI,iBAAiBj9E,EAAOm8C,EAAMzgE,EAAMwhG,EAAa,EAAG5wE,EAAKguC,EAAKP,GACzEA,EAAIz6B,EAAKu9D,EAAWI,iBAAiBj9E,EAAOm8C,EAAMzgE,EAAMwhG,EAAa,EAAG5wE,EAAKguC,EAAKP,IAClGztC,GAAO6wE,EAET,OAAO79D,GAUF,EAAAw9D,gBAAP,SAAuBphG,EAAyBygE,EAAyBC,GAEvE,IADA,IAAM5I,EAAa93D,EAAK4G,QACf9I,EAAI,EAAGA,EAAI2iE,EAAK1iE,OAAQD,IAE7Bg6D,EAAW2I,EAAK3iE,IADd4iE,EACoB,EAEA,EAG1B,OAAO5I,EAAWjW,QAAO,SAAAphD,GAAO,OAAQ,IAARA,MAEpC,EA5FA,GAAa,EAAA0gG,aA8Fb,+BA8LA,OArLS,EAAAhjC,qBAAP,SACID,EAA2BS,EAA8B5K,EAAuBz7C,EAChF07C,GACF,IAAKkK,GAAoBnK,EAAYh2D,SAAW4gE,EAAU5gE,OAAS,EACjE,MAAM,IAAIF,MAAM,sFAGlB,GAAIqgE,EAEF,IAAK,IAAIz9D,EAAM,EAAGA,EAAMk+D,EAAU5gE,OAAS,EAAG0C,IACxCA,GAAOszD,EAAYh2D,OACrBg2D,EAAY91D,KAAK0gE,EAAUl+D,EAAM,IAEjCszD,EAAYtzD,GAAOk+D,EAAUl+D,EAAM,GAMzC,IAASA,EAAM,EAAGA,EAAMszD,EAAYh2D,OAAQ0C,IAC1C,GAAIA,EAAM6X,EAAQva,QAChB,GAAIua,EAAQ7X,GAAO,EACjB,MAAM,IAAI5C,MAAM,qDAGlBya,EAAQra,KAAK,GAKjB,IAASwC,EAAM,EAAGA,EAA2B,EAArBszD,EAAYh2D,OAAY0C,IAC9C,GAAIA,EAAMuzD,EAAKj2D,QACb,GAAIi2D,EAAKvzD,GAAO,EACd,MAAM,IAAI5C,MAAM,iDAGlBm2D,EAAK/1D,KAAK,GAKd,IAASwC,EAAM,EAAGA,EAAMszD,EAAYh2D,OAAQ0C,IAAO,CACjD,GAAIszD,EAAYtzD,IAAQ,EACtB,MAAM,IAAI5C,MAAM,2CAGlB,GAAIm2D,EAAKvzD,IAAQszD,EAAYtzD,IAAQuzD,EAAKvzD,EAAMszD,EAAYh2D,SAAWg2D,EAAYtzD,GACjF,MAAM,IAAI5C,MAAM,wCAMf,EAAAw4D,yBAAP,SACIsI,EAA8BrmD,EAA4BC,EAC1Dw7C,EAAgCC,EAAgBx7C,GAClD,GAAKA,EAAL,CAIA,GAAIw7C,EAAKj2D,SAAW,GAAK4gE,EAAU5gE,OAAS,GAC1C,MAAM,IAAIF,MAAM,gEAGlB,GAAIya,EAAQva,SAAY4gE,EAAU5gE,OAAS,EACzC,MAAM,IAAIF,MAAM,6DAGlB,GAAIk2D,EAAYh2D,SAAY4gE,EAAU5gE,OAAS,EAC7C,MAAM,IAAIF,MAAM,mEAGlB,IAAK,IAAI4C,EAAM,EAAGA,EAAMk+D,EAAU5gE,OAAS,EAAG0C,IAC5C21D,EAAasrC,wBACT/iC,EAAUl+D,EAAM,GAAI6X,EAAQ7X,GAAM8X,EAAU9X,GAAMszD,EAAYtzD,GAAMuzD,EAAMvzD,EAAKA,EAAMk+D,EAAU5gE,OAAS,EACxGya,KAcD,EAAA4lD,uBAAP,SACIF,EAA2BS,EAA8BrmD,EAAmBy7C,EAAuBC,EACnGx7C,GACF,GAAImmD,EAAU5gE,QAAU,EACtB,MAAM,IAAIF,MAAM,8CAIlB,IAAMi6D,EAAa,CAAC6G,EAAU,GAAIA,EAAU,IAGtCpmD,EAAY,IAAItY,MAAc8zD,EAAYh2D,QAAQiX,KAAK,GAI7D,OAFAohD,EAAaurC,mBACTzjC,EAAkBS,EAAW7G,EAAYx/C,EAASC,EAAWw7C,EAAaC,EAAMx7C,GAC7Es/C,GAaF,EAAA8pC,uBAAP,SACIjjC,EAA8BkjC,EAA+BvpF,EAAmBC,EAChFw7C,EAAuBC,EAAgBx7C,GACzC,GAAImmD,EAAU5gE,QAAU,GAAK8jG,EAAW9jG,QAAU,EAChD,MAAM,IAAIF,MAAM,2DAIlB,IAAMi6D,EAAa,CAAC6G,EAAU,GAAIkjC,EAAW,IAG7C,OADAzrC,EAAaurC,oBAAmB,EAAOhjC,EAAW7G,EAAYx/C,EAASC,EAAWw7C,EAAaC,EAAMx7C,GAC9Fs/C,GAMM,EAAA6pC,mBAAf,SACIzjC,EAA2BS,EAA8B7G,EAAsBx/C,EAC/EC,EAA8Bw7C,EAAgCC,EAAgBx7C,GAChF,GAAI0lD,EACF,IAAK,IAAIz9D,EAAM,EAAGA,EAAMk+D,EAAU5gE,OAAS,EAAG0C,IAC5Cq3D,EAAW75D,KAAK,QAGlB,IAASwC,EAAM,EAAGA,EAAMk+D,EAAU5gE,OAAS,EAAG0C,IAC5Cq3D,EAAW75D,KAAKm4D,EAAasrC,wBACzB/iC,EAAUl+D,EAAM,GAAI6X,EAAQ7X,GAAM8X,EAAU9X,GAAMszD,EAAYtzD,GAAMuzD,EAAMvzD,EAAKA,EAAMk+D,EAAU5gE,OAAS,EACxGya,KAOK,EAAAkpF,wBAAf,SACII,EAAgB9mD,EAAgB+mD,EAAkBC,EAAgBhuC,EAAgBiuC,EAClFC,EAAsB1pF,GACxB,IAAM2pF,EAAUJ,GAAYC,EAAS,GAAK,EAC1C,IAAIxpF,GAAuB,WAAZA,EAsBb,OAAO3D,KAAK6c,OAAQowE,EAAS9tC,EAAKiuC,GAAgBjuC,EAAKkuC,GAAgBC,GAAWnnD,EAAU,GArB5F,OAAQxiC,GACN,IAAK,QAGH,OAFAw7C,EAAKiuC,GAAgB,EACrBjuC,EAAKkuC,GAAgB,EACdrtF,KAAK6c,OAAQowE,EAASK,GAAWnnD,EAAU,GACpD,IAAK,aACL,IAAK,aACH,GAAiB,IAAb+mD,EACF,MAAM,IAAIlkG,MAAM,uDAEhB,IACMukG,IADoBN,EAAS9mD,EAAS,GAAKA,EACX,GAAKA,EAASgnD,EAASF,EAI7D,OAHA9tC,EAAKiuC,GACY,eAAZzpF,EAA4B3D,KAAK6c,OAAO0wE,EAAY,GAAK,GAAKvtF,KAAK6c,MAAM0wE,EAAY,GAC1FpuC,EAAKkuC,GAAgBE,EAAYpuC,EAAKiuC,GAC/BptF,KAAK6c,OAAQowE,EAASM,EAAYJ,GAAUhnD,EAAU,GAEjE,QACE,MAAM,IAAIn9C,MAAM,8BAM1B,EA9LA,GAAa,EAAAu4D,gB,+ZC7gCA,EAAAisC,oBACT,SAACnhG,EAAkCohG,EAAgBC,EAClDxhG,GACC,GAAsB,iBAAXG,GAAmC,OAAZA,EAAkB,CAClD,GAAIqhG,EAAK3hD,IAAI1/C,GACX,MAAM,IAAIrD,MAAM,iCAEhB0kG,EAAKhgF,IAAIrhB,GAIbK,OAAOihG,QAAQthG,GAAS4Y,SAAQ,SAAC,G,IAAA,SAAChY,EAAG,KAAEvD,EAAK,KACpClB,EAAO,EAAWilG,EAASxgG,EAAMA,EACvC,GAAqB,iBAAVvD,EACT,EAAA8jG,oBAAoB9jG,EAAkClB,EAAO,IAAKklG,EAAMxhG,QACnE,GAAqB,iBAAVxC,GAAuC,iBAAVA,EAC7CwC,EAAQ1D,EAAMkB,EAAMsd,gBACf,IAAqB,kBAAVtd,EAGhB,MAAM,IAAIV,MAAM,0CAA0CU,GAF1DwC,EAAQ1D,EAAM,EAAU,IAAM,W,+jECtBxC,IAMIolG,EAQAC,EACAC,EAfJ,UAEA,YACA,UAEMC,EAAU,WAAe,QAAE,EAAA1kG,IAAIE,KAAK80C,OAA6B,oBAAbxvC,UAEtDT,GAAe,EACfD,GAAc,EACdE,GAAU,EAOR2/F,EAA+E,GAC/EC,EAAyD,GACzDC,EAA8D,GAC9DC,EAAuD,GAEvDC,EAAe,WACnB,GAAIhgG,IAAiBD,GAAeE,IAAYu/F,EAC9C,MAAM,IAAI5kG,MAAM,qBAIdqlG,EAAuB,SAACC,GAC5B,OAAQA,EAAGpjG,KAAKD,MACd,IAAK,YACHmD,GAAe,EACXkgG,EAAGpjG,KAAKqD,KACVF,GAAU,EACVw/F,EAAkB,GAAGS,EAAGpjG,KAAKqD,OAE7BJ,GAAc,EACd0/F,EAAkB,MAEpB,MACF,IAAK,WACCS,EAAGpjG,KAAKqD,IACVu/F,EAAiB,GAAGQ,EAAGpjG,KAAKqD,KAE5Bu/F,EAAiB,KAEnB,MACF,IAAK,SACCQ,EAAGpjG,KAAKqD,IACVy/F,EAAuB/2F,QAAS,GAAGq3F,EAAGpjG,KAAKqD,KAE3Cy/F,EAAuB/2F,QAAS,GAAGq3F,EAAGpjG,KAAK09B,KAE7C,MACF,IAAK,UACC0lE,EAAGpjG,KAAKqD,IACV0/F,EAAwBh3F,QAAS,GAAGq3F,EAAGpjG,KAAKqD,KAE5C0/F,EAAwBh3F,QAAS,KAEnC,MACF,IAAK,MACCq3F,EAAGpjG,KAAKqD,IACV2/F,EAAaj3F,QAAS,GAAGq3F,EAAGpjG,KAAKqD,KAEjC2/F,EAAaj3F,QAAS,GAAGq3F,EAAGpjG,KAAK09B,KAEnC,MACF,IAAK,gBACC0lE,EAAGpjG,KAAKqD,IACV4/F,EAAsBl3F,QAAS,GAAGq3F,EAAGpjG,KAAKqD,KAE1C4/F,EAAsBl3F,QAAS,OAOjCs3F,EAAgC,oBAAb1/F,SAAyE,QAA7C,EAAQ,OAARA,eAAQ,IAARA,cAAQ,EAARA,SAAUC,qBAAmC,eAAEC,SAAMhG,EAE7F,EAAA01C,SAAW,qD,2BACtB,GAAIsvD,IAAW,CACb,GAAI5/F,EACF,UAEF,GAAIC,EACF,MAAM,IAAIpF,MAAM,4CAElB,GAAIqF,EACF,MAAM,IAAIrF,MAAM,yCAYlB,OATAoF,GAAe,OAGYrF,IAAvB,EAAAM,IAAIE,KAAKilG,WACPD,GAA4C,IAA/BA,EAAU5kG,QAAQ,WACjC,EAAAN,IAAIE,KAAKilG,UAAYD,EAAU17F,OAAO,EAAI07F,EAAqBz7F,YAAY,KAAO,IAI/E,CAAP,EAAO,IAAI5C,SAAc,SAAC+iB,EAASoH,GACjCuzE,WAAahzF,aAEbgzF,EAAc,aACFtyF,UAAY+yF,EACxBR,EAAoB,CAAC56E,EAASoH,GAC9B,IAAM7d,EAA0B,CAACvR,KAAM,YAAawjG,GAAK,EAAAplG,IAAIE,MAC7DqkG,EAAYnzF,YAAY+B,OAI1B,MAAO,CAAP,EAAO,EAAAkyF,sBAAsB,EAAArlG,IAAIE,cAIxB,EAAAolG,QAAU,SAAMrwD,EAAoBswD,GAAoB,0C,2BACnE,OAAIb,KACFK,IACO,CAAP,EAAO,IAAIl+F,SAAc,SAAC+iB,EAASoH,GACjCyzE,EAAmB,CAAC76E,EAASoH,GAC7B,IAAM7d,EAA0B,CAACvR,KAAM,WAAYwjG,GAAK,CAACnwD,WAAU,EAAEswD,aAAY,IACjFhB,EAAanzF,YAAY+B,SAG3BqyF,EAAKF,QAAQrwD,EAAYswD,G,YAIhB,EAAAE,cACT,SAAM9gB,EAAmB3hF,GAAyC,0C,2BACpE,OAAI0hG,KACFK,IACO,CAAP,EAAO,IAAIl+F,SAAqC,SAAC+iB,EAASoH,GACxD2zE,EAAuB5kG,KAAK,CAAC6pB,EAASoH,IACtC,IAAM7d,EAA0B,CAACvR,KAAM,SAAUwjG,GAAK,CAACzgB,MAAK,EAAE3hF,QAAO,IACrEuhG,EAAanzF,YAAY+B,EAAS,CAACwxE,EAAMxgF,cAGpC,CAAP,EAAOqhG,EAAKC,cAAc9gB,EAAO3hF,WAIxB,EAAA0iG,eAAiB,SAAMC,GAAiB,0C,2BACnD,OAAIjB,KACFK,IACO,CAAP,EAAO,IAAIl+F,SAAc,SAAC+iB,EAASoH,GACjC4zE,EAAwB7kG,KAAK,CAAC6pB,EAASoH,IACvC,IAAM7d,EAA0B,CAACvR,KAAM,UAAWwjG,GAAKO,GACvDpB,EAAanzF,YAAY+B,SAG3BqyF,EAAKE,eAAeC,G,YAIX,EAAAjiG,IAAM,SACfiiG,EAAmBC,EAAwB/9C,EAA8Bu4C,EACzEp9F,GAAoC,0C,2BACtC,OAAI0hG,KACFK,IACO,CAAP,EAAO,IAAIl+F,SAA8B,SAAC+iB,EAASoH,GACjD6zE,EAAa9kG,KAAK,CAAC6pB,EAASoH,IAC5B,IAAM7d,EAA0B,CAACvR,KAAM,MAAOwjG,GAAK,CAACO,UAAS,EAAEC,aAAY,EAAE/9C,OAAM,EAAEu4C,cAAa,EAAEp9F,QAAO,IAC3GuhG,EAAanzF,YAAY+B,EAASqyF,EAAKK,2BAA2Bh+C,SAG7D,CAAP,EAAO29C,EAAK9hG,IAAIiiG,EAAWC,EAAc/9C,EAAQu4C,EAAep9F,WAIvD,EAAAsC,aAAe,SAAMqgG,GAAiB,0C,2BACjD,OAAIjB,KACFK,IACO,CAAP,EAAO,IAAIl+F,SAAc,SAAC+iB,EAASoH,GACjC8zE,EAAsB/kG,KAAK,CAAC6pB,EAASoH,IACrC,IAAM7d,EAA0B,CAACvR,KAAM,gBAAiBwjG,GAAKO,GAC7DpB,EAAanzF,YAAY+B,SAG3BqyF,EAAKlgG,aAAaqgG,G,sHClLtB,cACA,UACA,UAEa,EAAAG,cAAgB,SAAC9iG,GAC5B,IAAM9C,EAAO,EAAA6lG,cACTC,EAAmB,EACjBC,EAAmB,GAEnBC,EAA0CljG,GAAW,GAE3D,IACE,QAAkCtD,KAA9BsD,aAAO,EAAPA,EAASmjG,kBACXD,EAAWC,iBAAmB,OACzB,GACiC,iBAA7BnjG,EAAQmjG,mBAAkC3jG,OAAOunC,UAAU/mC,EAAQmjG,mBAC1EnjG,EAAQmjG,iBAAmB,GAAKnjG,EAAQmjG,iBAAmB,EAC7D,MAAM,IAAIxmG,MAAM,qCAAqCqD,EAAQmjG,kBAG/D,QAAmCzmG,KAA/BsD,aAAO,EAAPA,EAASojG,mBACXF,EAAWE,kBAAoB,OAC1B,GAAyC,iBAA9BpjG,EAAQojG,oBAAmC5jG,OAAOunC,UAAU/mC,EAAQojG,mBACpF,MAAM,IAAIzmG,MAAM,qCAAqCqD,EAAQojG,wBAGpC1mG,KAAvBsD,aAAO,EAAPA,EAASuO,aACX20F,EAAW30F,WAAY,GAGzB,IAAI80F,EAAgB,EAOpB,QANqB3mG,KAAjBsD,aAAO,EAAPA,EAASymC,OACX48D,EAAgB,EAAAC,gBAAgBtjG,EAAQymC,IAAKw8D,IAKtB,KAFzBD,EAAmB9lG,EAAK6rB,qBACpBm6E,EAAWC,iBAAmBD,EAAWE,oBAAsBF,EAAW30F,UAAY80F,IAExF,MAAM,IAAI1mG,MAAM,4BAclB,YAXuBD,KAAnBsD,aAAO,EAAPA,EAASujG,QACX,EAAApC,oBAAoBnhG,EAAQujG,MAAO,GAAI,IAAIC,SAAoC,SAAC5iG,EAAKvD,GACnF,IAAMomG,EAAgB,EAAAH,gBAAgB1iG,EAAKqiG,GACrCS,EAAkB,EAAAJ,gBAAgBjmG,EAAO4lG,GAE/C,GAAqF,IAAjF/lG,EAAK+rB,sBAAsB+5E,EAAkBS,EAAeC,GAC9D,MAAM,IAAI/mG,MAAM,iCAAiCiE,EAAG,MAAMvD,MAKzD,CAAC2lG,EAAkBC,GAC1B,MAAOhhG,GAKP,MAJyB,IAArB+gG,GACF9lG,EAAKisB,sBAAsB65E,GAE7BC,EAAOrqF,QAAQ1b,EAAK2sB,OACd5nB,K,6yDC5DV,IAII0hG,EAJJ,UAEA,UAKMC,EAAc,SAACpkB,GACnB,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,UACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,QACE,MAAM,IAAI7iF,MAAM,8BAA8B6iF,KAIpD,2BA8DA,OAxDQ,YAAA/tC,UAAN,SAAgBkwC,EAAmB3hF,G,uGAC5B2jG,EAAD,MACF,GAAM,EAAArB,QAAQ,EAAAtlG,IAAIE,KAAK+0C,WAAa2xD,EAAY,EAAA5mG,IAAIwiF,Y,OAApD,SACAmkB,GAAU,E,iBAG0C,SAAM,EAAAlB,cAAc9gB,EAAO3hF,I,cAAjF,kBAAsD,SAAmC,IAAxF/C,KAAK0lG,UAAS,KAAE1lG,KAAKuD,WAAU,KAAEvD,KAAKiD,YAAW,K,YAG9C,YAAA81C,QAAN,W,mEACE,MAAO,CAAP,EAAO,EAAA0sD,eAAezlG,KAAK0lG,mBAGvB,YAAAjiG,IAAN,SAAUZ,EAAiCC,EAAqCC,G,iHA2B1E,OAzBE6jG,EAAuB,GACvBjB,EAAyB,GAC/BviG,OAAOihG,QAAQxhG,GAAO8Y,SAAQ,SAAAkrF,GAC5B,IAAM3nG,EAAO2nG,EAAI,GACXl+C,EAASk+C,EAAI,GACbh2E,EAAQ,EAAKttB,WAAWlD,QAAQnB,GACtC,IAAe,IAAX2xB,EACF,MAAM,IAAInxB,MAAM,kBAAkBR,EAAI,KAExC0nG,EAAW9mG,KAAK6oD,GAChBg9C,EAAa7lG,KAAK+wB,MAGdsvE,EAA0B,GAChC/8F,OAAOihG,QAAQvhG,GAAS6Y,SAAQ,SAAAkrF,GAC9B,IAAM3nG,EAAO2nG,EAAI,GAEXh2E,EAAQ,EAAK5tB,YAAY5C,QAAQnB,GACvC,IAAe,IAAX2xB,EACF,MAAM,IAAInxB,MAAM,mBAAmBR,EAAI,KAEzCihG,EAAcrgG,KAAK+wB,MAIjB,GAAM,EAAAptB,IAAIzD,KAAK0lG,UAAWC,EAAciB,EAAWriG,KAAI,SAAAmB,GAAK,OAACA,EAAE/D,KAAM+D,EAAE7D,KAAM6D,EAAE9D,SAAQu+F,EAAep9F,I,OAG1G,IAJM2jE,EACF,SAEE3oC,EAAoC,GACjCp+B,EAAI,EAAGA,EAAI+mE,EAAQ9mE,OAAQD,IAClCo+B,EAAO/9B,KAAKiD,YAAYk9F,EAAcxgG,KAAO,IAAI,EAAA4B,OAAOmlE,EAAQ/mE,GAAG,GAAI+mE,EAAQ/mE,GAAG,GAAI+mE,EAAQ/mE,GAAG,IAEnG,MAAO,CAAP,EAAOo+B,WAGT,YAAA34B,eAAA,aAIA,YAAAC,aAAA,WACO,EAAAA,aAAarF,KAAK0lG,YAE3B,EA9DA,GAAa,EAAArwD,wC,mbCtBb,cACA,UACA,UA0Ca,EAAAyxD,kBAAoB,SAAC/jG,G,QAC1B9C,EAAO,EAAA6lG,cACTiB,EAAuB,EACrBf,EAAmB,GAEnBgB,EAAkDjkG,GAAW,IAnBxC,SAACA,GACvBA,EAAQujG,QACXvjG,EAAQujG,MAAQ,IAEbvjG,EAAQujG,MAAMhyD,UACjBvxC,EAAQujG,MAAMhyD,QAAU,IAE1B,IAAMA,EAAUvxC,EAAQujG,MAAMhyD,QACzBA,EAAQ2yD,+BAEX3yD,EAAQ2yD,6BAA+B,KAUzCC,CAAqBF,GAErB,SAC0CvnG,KAApCsD,aAAO,EAAPA,EAASokG,0BACXH,EAAeG,uBAAyB,OAE1C,IAAMA,EApDuB,SAACA,GAChC,OAAQA,GACN,IAAK,WACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,IAAK,MACH,OAAO,GACT,QACE,MAAM,IAAIznG,MAAM,yCAAyCynG,IAyC5BC,CAAyBJ,EAAeG,6BAEpC1nG,KAA/BsD,aAAO,EAAPA,EAASskG,qBACXL,EAAeK,mBAAoB,QAGH5nG,KAA9BsD,aAAO,EAAPA,EAASukG,oBACXN,EAAeM,kBAAmB,QAGL7nG,KAA3BsD,aAAO,EAAPA,EAASwkG,iBACXP,EAAeO,cAAgB,cAEjC,IAAMA,EAlDe,SAACA,GACxB,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,WACH,OAAO,EACT,QACE,MAAM,IAAI7nG,MAAM,+BAA+B6nG,IA2C3BC,CAAiBR,EAAeO,eAElDE,EAAkB,EAKtB,QAJuBhoG,KAAnBsD,aAAO,EAAPA,EAAS2kG,SACXD,EAAkB,EAAApB,gBAAgBtjG,EAAQ2kG,MAAO1B,SAGjBvmG,KAA9BsD,aAAO,EAAPA,EAASmjG,kBACXc,EAAed,iBAAmB,OAC7B,GACiC,iBAA7BnjG,EAAQmjG,mBAAkC3jG,OAAOunC,UAAU/mC,EAAQmjG,mBAC1EnjG,EAAQmjG,iBAAmB,GAAKnjG,EAAQmjG,iBAAmB,EAC7D,MAAM,IAAIxmG,MAAM,qCAAqCqD,EAAQmjG,kBAG/D,QAAmCzmG,KAA/BsD,aAAO,EAAPA,EAASojG,mBACXa,EAAeb,kBAAoB,OAC9B,GAAyC,iBAA9BpjG,EAAQojG,oBAAmC5jG,OAAOunC,UAAU/mC,EAAQojG,mBACpF,MAAM,IAAIzmG,MAAM,qCAAqCqD,EAAQojG,mBAW/D,QARiC1mG,KAA7BsD,aAAO,EAAPA,EAAS4kG,mBACXX,EAAeW,iBAAkB,GAON,KAJ7BZ,EAAuB9mG,EAAKiqB,yBACxBi9E,IAA0BH,EAAeK,oBAAsBL,EAAeM,iBAAmBC,IAC/FP,EAAeW,gBAAkB,EAAGF,EAAiBT,EAAed,iBACtEc,EAAeb,oBAEjB,MAAM,IAAIzmG,MAAM,gCAclB,QAXuBD,KAAnBsD,aAAO,EAAPA,EAASujG,QACX,EAAApC,oBAAoBnhG,EAAQujG,MAAO,GAAI,IAAIC,SAAoC,SAAC5iG,EAAKvD,GACnF,IAAMomG,EAAgB,EAAAH,gBAAgB1iG,EAAKqiG,GACrCS,EAAkB,EAAAJ,gBAAgBjmG,EAAO4lG,GAE/C,GAA6F,IAAzF/lG,EAAKqqB,0BAA0By8E,EAAsBP,EAAeC,GACtE,MAAM,IAAI/mG,MAAM,qCAAqCiE,EAAG,MAAMvD,MAKhE2C,aAAO,EAAPA,EAASuB,mB,IACX,IAAiB,QAAAvB,EAAQuB,oBAAkB,8BAAE,CAAxC,IAAMsjG,EAAE,QAEX,GAAa,WADc,iBAAPA,EAAkBA,EAAKA,EAAG1oG,MACxB,CACpB,IAAI4jB,EAAmB,EACvB,GAAkB,iBAAP8kF,EAAiB,CAC1B,IAAMC,EAAeD,GACjBC,aAAY,EAAZA,EAAc/kF,oBAChBA,EAAmB+kF,EAAa/kF,kBAIpC,GADA3Z,QAAQoB,IAAI,4BAA4BuY,GAC4D,IAAhG7iB,EAAKmqB,+CAA+C28E,EAAsBjkF,GAC5E,MAAM,IAAIpjB,MAAM,yCAElB,Q,iGAKN,MAAO,CAACqnG,EAAsBf,GAC9B,MAAOhhG,GAKP,MAJ6B,IAAzB+hG,GACF9mG,EAAKuqB,0BAA0Bu8E,GAEjCf,EAAOrqF,QAAQ1b,EAAK2sB,OACd5nB,K,4GC7IV,cAEa,EAAAqhG,gBAAkB,SAACzkG,EAAcokG,GAC5C,IAAM/lG,EAAO,EAAA6lG,cAEPgC,EAAa7nG,EAAKowB,gBAAgBzuB,GAAQ,EAC1CmmG,EAAa9nG,EAAKusB,QAAQs7E,GAIhC,OAHA7nG,EAAKmwB,aAAaxuB,EAAMmmG,EAAYD,GACpC9B,EAAOlmG,KAAKioG,GAELA,I,wyBCRT,aACA,UACA,UACA,UAOa,EAAA1C,QAAU,SAACrwD,EAAoBswD,GAC1C,IAAM0C,EAAY,EAAAlC,cAAc97E,SAASgrB,EAAYswD,GACrD,GAAkB,IAAd0C,EACF,MAAM,IAAItoG,MAAM,8CAA8CsoG,IASlE,IAAMC,EAAmD,GAM5C,EAAAzC,cACT,SAAC9gB,EAAmB3hF,G,MACZ9C,EAAO,EAAA6lG,cACPoC,EAAkBjoG,EAAKusB,QAAQk4D,EAAMtgF,YACvC+jG,EAAgB,EAChBpB,EAAuB,EACvBf,EAAmB,GAEvB,IAKE,GAJCe,GAAD,IAAiC,EAAAD,kBAAkB/jG,GAAQ,IAAtC,GAAEijG,EAAM,KAE7B/lG,EAAKsM,OAAOjL,IAAIojF,EAAOwjB,GAED,KADtBC,EAAgBloG,EAAKyqB,kBAAkBw9E,EAAiBxjB,EAAMtgF,WAAY2iG,IAExE,MAAM,IAAIrnG,MAAM,0B,QAGlBO,EAAK2sB,MAAMs7E,GACXjoG,EAAKuqB,0BAA0Bu8E,GAC/Bf,EAAOrqF,QAAQ1b,EAAK2sB,OAUtB,IAPA,IAAMumC,EAAalzD,EAAK6qB,kBAAkBq9E,GACpCC,EAAcnoG,EAAK+qB,mBAAmBm9E,GAEtC5kG,EAAa,GACb8kG,EAAwB,GACxBplG,EAAc,GACdqlG,EAAyB,GACtB3oG,EAAI,EAAGA,EAAIwzD,EAAYxzD,IAAK,CACnC,IAAM,EAAOM,EAAKirB,iBAAiBi9E,EAAexoG,GAClD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,2BAElB2oG,EAAsBvoG,KAAK,GAC3ByD,EAAWzD,KAAKG,EAAKkwB,aAAa,IAEpC,IAASxwB,EAAI,EAAGA,EAAIyoG,EAAazoG,IAAK,CACpC,IAAM,EAAOM,EAAKmrB,kBAAkB+8E,EAAexoG,GACnD,GAAa,IAAT,EACF,MAAM,IAAID,MAAM,4BAElB4oG,EAAuBxoG,KAAK,GAC5BmD,EAAYnD,KAAKG,EAAKkwB,aAAa,IAIrC,OADA83E,EAAenoG,KAAK,CAACqoG,EAAeE,EAAuBC,IACpD,CAACL,EAAeroG,OAAS,EAAG2D,EAAYN,IAGxC,EAAAwiG,eAAiB,SAACC,GAC7B,IAAMzlG,EAAO,EAAA6lG,cACPxxD,EAAU2zD,EAAevC,GAC/B,IAAKpxD,EACH,MAAM,IAAI50C,MAAM,sBAElB,IAAMyoG,EAAgB7zD,EAAQ,GACxB+zD,EAAwB/zD,EAAQ,GAChCg0D,EAAyBh0D,EAAQ,GAEvC+zD,EAAsB1sF,QAAQ1b,EAAKqrB,UACnCg9E,EAAuB3sF,QAAQ1b,EAAKqrB,UACpCrrB,EAAK2qB,mBAAmBu9E,GACxBF,EAAevC,QAAajmG,GA2B9B,IAgCM8oG,EAA6B,SAAChH,GAClC,OAAQA,GACN,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,OACT,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,QACT,KAAK,GACH,MAAO,SAET,QACE,MAAM,IAAI7hG,MAAM,0BAA0B6hG,KAI1CiH,EAAgC,SAAC7mG,GAGjC,OAAQA,GACN,IAAK,UACH,OAAOd,aACT,IAAK,QACH,OAAOC,WACT,IAAK,OACH,OAAOC,UACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOC,WACT,IAAK,QACH,OAAOC,WACT,IAAK,OACH,OAAOJ,WACT,IAAK,UACH,OAAOK,aACT,IAAK,SACH,OAAOC,YACT,IAAK,QACH,OAAOb,cACT,IAAK,SACH,OAAOG,eACT,QACE,MAAM,IAAIhB,MAAM,qBAAqBiC,KAOlC,EAAA8B,IACT,SAACiiG,EAAmBC,EAAwB/9C,EAA8Bu4C,EACzEp9F,G,MACO9C,EAAO,EAAA6lG,cACPxxD,EAAU2zD,EAAevC,GAC/B,IAAKpxD,EACH,MAAM,IAAI50C,MAAM,sBAElB,IAAMyoG,EAAgB7zD,EAAQ,GACxB+zD,EAAwB/zD,EAAQ,GAChCg0D,EAAyBh0D,EAAQ,GAEjC6e,EAAawyC,EAAa/lG,OAC1BwoG,EAAcjI,EAAcvgG,OAE9BmmG,EAAmB,EACnB0C,EAA6B,GAE3BC,EAAwB,GACxBC,EAAwB,GAE9B,IACG5C,GAAD,IAAuC,EAAAF,cAAc9iG,GAAQ,IAA5C,GAAE0lG,EAAgB,KAGnC,I,eAAS9oG,GACP,IAAM8sC,EAAWmb,EAAOjoD,GAAG,GACrBkC,EAAO+lD,EAAOjoD,GAAG,GACjBiC,EAAOgmD,EAAOjoD,GAAG,GAEnBooG,OAAU,EACVa,OAAc,EAElB,GAAI9mG,MAAMC,QAAQH,GAAO,CAEvBgnG,EAAiB,EAAIhnG,EAAKhC,OAC1BmoG,EAAa9nG,EAAKusB,QAAQo8E,GAC1BD,EAAY7oG,KAAKioG,GAEjB,IADA,IAAIjpB,EAAYipB,EAAa,EACpB,EAAI,EAAG,EAAInmG,EAAKhC,OAAQ,IAAK,CACpC,GAAuB,iBAAZgC,EAAK,GACd,MAAM,IAAIrC,UAAU,wBAAwB,EAAC,oBAE/CU,EAAKwM,QAAQqyE,KAAe,EAAAunB,gBAAgBzkG,EAAK,GAAI+mG,SAGvDC,EAAiBhnG,EAAKwC,WACtB2jG,EAAa9nG,EAAKusB,QAAQo8E,GAC1BD,EAAY7oG,KAAKioG,GACjB9nG,EAAKsM,OAAOjL,IAAI,IAAIR,WAAWc,EAAKsC,OAAQtC,EAAKuC,WAAYykG,GAAiBb,GAGhF,IAAM7nF,EAAQjgB,EAAK+uB,YACb2gE,EAAa1vF,EAAKmvB,WAAW,EAAIvtB,EAAKjC,QAC5C,IACE,IAAI,EAAW+vF,EAAa,EAC5B9tF,EAAK8Z,SAAQ,SAAA5U,GAAK,OAAA9G,EAAKqM,OAAO,KAAcvF,KAC5C,IAAM4hD,EAAS1oD,EAAKurB,iBA3JG,SAAC7pB,GAClC,OAAQA,GACN,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,OACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GACT,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,SACH,OAAO,EACT,IAAK,QACH,OAAO,EACT,IAAK,SACH,OAAO,GAET,QACE,MAAM,IAAIjC,MAAM,0BAA0BiC,IAgIhC6/F,CAA2B/0D,GAAWs7D,EAAYa,EAAgBjZ,EAAY9tF,EAAKjC,QACvF,GAAe,IAAX+oD,EACF,MAAM,IAAIjpD,MAAM,yBAElBgpG,EAAY5oG,KAAK6oD,G,QAEjB1oD,EAAKivB,aAAahP,KAvCbvgB,EAAI,EAAGA,EAAIwzD,EAAYxzD,I,EAAvBA,GA2CT,IAAMkpG,EAAiB5oG,EAAK+uB,YACtB85E,EAAoB7oG,EAAKmvB,WAAwB,EAAb+jC,GACpC41C,EAAmB9oG,EAAKmvB,WAAwB,EAAb+jC,GACnC61C,EAAqB/oG,EAAKmvB,WAAyB,EAAdg5E,GACrCa,EAAoBhpG,EAAKmvB,WAAyB,EAAdg5E,GAE1C,IACE,IAAIc,EAAmBJ,EAAoB,EACvCK,EAAkBJ,EAAmB,EACrCK,EAAoBJ,EAAqB,EACzCK,EAAmBJ,EAAoB,EAC3C,IAAStpG,EAAI,EAAGA,EAAIwzD,EAAYxzD,IAC9BM,EAAKwM,QAAQy8F,KAAsBR,EAAY/oG,GAC/CM,EAAKwM,QAAQ08F,KAAqBd,EAAsB1C,EAAahmG,IAEvE,IAASA,EAAI,EAAGA,EAAIyoG,EAAazoG,IAC/BM,EAAKwM,QAAQ28F,KAAuB,EACpCnpG,EAAKwM,QAAQ48F,KAAsBf,EAAuBnI,EAAcxgG,IAI1E,IAAIqoG,EAAY/nG,EAAKmsB,QACjB+7E,EAAeY,EAAkBD,EAAmB31C,EAAY81C,EAAmBb,EACnFY,EAAoBjD,GAElBj7D,EAA+B,GAErC,GAAkB,IAAdk9D,EACF,IAASroG,EAAI,EAAGA,EAAIyoG,EAAazoG,IAAK,CACpC,IAAMgpD,EAAS1oD,EAAKwM,QAAQu8F,EAAqB,EAAIrpG,GAE/C2pG,EAA2BrpG,EAAK+uB,YAEhCu6E,EAAmBtpG,EAAKmvB,WAAW,IAErCztB,OAAI,EAAyBomG,EAAa,EAC9C,IAGE,GAAkB,KAFlBC,EAAY/nG,EAAKyrB,kBACbi9B,EAAQ4gD,EAAkBA,EAAmB,EAAGA,EAAmB,EAAGA,EAAmB,KAE3F,MAAM,IAAI7pG,MAAM,yCAAyCsoG,GAE3D,IAAIwB,EAAkBD,EAAmB,EACnC98D,EAAWxsC,EAAKwM,QAAQ+8F,KAC9BzB,EAAa9nG,EAAKwM,QAAQ+8F,KAI1B,IAHA,IAAM7Z,EAAa1vF,EAAKwM,QAAQ+8F,KAC1Bna,EAAapvF,EAAKwM,QAAQ+8F,KAC1B3nG,EAAO,GACJ,EAAI,EAAG,EAAIwtF,EAAY,IAC9BxtF,EAAK/B,KAAKG,EAAKwM,QAAQkjF,EAAa,EAAI,IAE1C1vF,EAAKqrB,SAASqkE,GAEd,IAAMttF,EAAuB,IAAhBR,EAAKjC,OAAe,EAAIiC,EAAKkgE,QAAO,SAACz7D,EAAGa,GAAM,OAAAb,EAAIa,KAE/D,GAAa,YADbxF,EAAO4mG,EAA2B97D,IACX,CAGrB,IAFA,IAAML,EAAuB,GACzB0yC,EAAYipB,EAAa,EACpB,EAAI,EAAG,EAAI1lG,EAAM,IAAK,CAC7B,IAAM+U,EAASnX,EAAKwM,QAAQqyE,KACtB2qB,EAAiB,IAAMpnG,EAAO,OAAI5C,EAAYQ,EAAKwM,QAAQqyE,GAAa1nE,EAC9Eg1B,EAAWtsC,KAAKG,EAAKkwB,aAAa/Y,EAAQqyF,IAE5C3+D,EAAOhrC,KAAK,CAAC6B,EAAME,EAAMuqC,QACpB,CACL,IACMxqC,GAAO,IADiB4mG,EAA8B7mG,GAC/C,CAA0BU,GACvC,IAAIvB,WAAWc,GAAKsC,OAAQtC,GAAKuC,WAAYvC,GAAKwC,YAC7C9C,IAAIrB,EAAKsM,OAAOb,SAASq8F,EAAYA,EAAanmG,GAAKwC,aAC5D0mC,EAAOhrC,KAAK,CAAC6B,EAAME,EAAMD,M,QAG3B3B,EAAKivB,aAAao6E,GACL,WAAT3nG,GAAqBomG,GACvB9nG,EAAK2sB,MAAMm7E,GAEb9nG,EAAK2rB,kBAAkB+8B,IAK7B,GAAkB,IAAdq/C,EACF,OAAOl9D,EAEP,MAAM,IAAIprC,MAAM,yCAAyCsoG,EAAS,K,QAGpE/nG,EAAKivB,aAAa25E,I,QAGpBH,EAAY/sF,QAAQ1b,EAAK2rB,mBACzB+8E,EAAYhtF,QAAQ1b,EAAK2sB,OAEzB3sB,EAAKisB,sBAAsB65E,GAC3B0C,EAAiB9sF,QAAQ1b,EAAK2sB,SAOzB,EAAAvnB,aAAe,SAACqgG,GAC3B,IAAMzlG,EAAO,EAAA6lG,cACPxxD,EAAU2zD,EAAevC,GAC/B,IAAKpxD,EACH,MAAM,IAAI50C,MAAM,sBAElB,IAAMyoG,EAAgB7zD,EAAQ,GAGxBo1D,EAAkBzpG,EAAKqsB,iBAAiB67E,GAC9C,GAAwB,IAApBuB,EACF,MAAM,IAAIhqG,MAAM,kCAElBO,EAAKqrB,SAASo+E,IAGH,EAAA9D,2BAA6B,SAACp9D,G,QACnCmhE,EAA6B,G,IACnC,IAAqB,QAAAnhE,GAAO,8BAAE,CAAzB,IACG5mC,EADS,QACK,IACfE,MAAMC,QAAQH,IAASA,EAAKsC,QAC/BylG,EAAQ7pG,KAAK8B,EAAKsC,S,iGAGtB,OAAOylG,I,knEC1ZT,IAOI1pG,EAPJ,aAIA,aACA,YAGI4E,GAAc,EACdC,GAAe,EACfC,GAAU,EAqCR6kG,EAAkB,SAACC,EAAkBC,GACzC,OAAIA,EACKD,EAAU,8BAAgC,yBAE1CA,EAAU,qBAAuB,iBAI/B,EAAAzE,sBAAwB,SAAMjuF,GAA2B,0C,4EACpE,GAAItS,EACF,MAAO,CAAP,EAAO+B,QAAQ+iB,WAEjB,GAAI7kB,EACF,MAAM,IAAIpF,MAAM,yDAElB,GAAIqF,EACF,MAAM,IAAIrF,MAAM,sDAkFlB,OA/EAoF,GAAe,EAGTilG,EAAU5yF,EAAM09B,YAChBG,EAAa79B,EAAM69B,WACnBF,EAAO39B,EAAM29B,KAEbg1D,EAAa90D,EAAa,GA7DH,WAC7B,IAEE,MAAiC,oBAAtB/wC,oBAMmB,oBAAnB+lG,iBACT,IAAIA,gBAAiBC,MAAM94F,YAAY,IAAIlN,kBAAkB,IAKxDgH,YAAYi/F,SAAS,IAAIppG,WAAW,CACzC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAI,EAAI,EAAG,EAAG,EAAG,EAAI,GAAI,EAAK,EAAI,EAAG,EAAG,EAAI,EAAG,EACnE,EAAG,EAAI,EAAK,EAAK,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAI,IAAK,GAAI,EAAG,EAAG,GAAI,OAElE,MAAOkE,GACP,OAAO,GAyC4BmlG,GAC/BN,EAAU/0D,GAtCM,WACtB,IAGE,OAAO7pC,YAAYi/F,SAAS,IAAIppG,WAC5B,CAAC,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,MACrG,MAAOkE,GACP,OAAO,GA+BeolG,GAElBC,EAAgD,iBAApBlzF,EAAM+tF,UAAyB/tF,EAAM+tF,eAAYzlG,EAC7E6qG,EAAeV,GAAgB,EAAOE,GACtCS,EAAuBX,EAAgBC,EAASC,GAChDU,EAA8C,iBAApBrzF,EAAM+tF,UAAyB/tF,EAAM+tF,UAAUqF,QAAwB9qG,EAEnGgrG,GAAY,EAEVC,EAA8B,GAGhCX,EAAU,GACZW,EAAM5qG,KAAK,IAAI8G,SAAQ,SAAC+iB,GACtB1J,YAAW,WACTwqF,GAAY,EACZ9gF,MACCogF,OAKPW,EAAM5qG,KAAK,IAAI8G,SAAQ,SAAC+iB,EAASoH,GAC/B,IAAMtyB,EAAUqrG,EAAa,UAAyB,UAChDl5B,EAAiC,CACrC3oE,WAAY,SAAC0iG,EAAkBC,GAC7B,OAAID,EAASzlB,SAAS,eAAiC,oBAAT2lB,KACrCC,IAAIC,gBAAgB,IAAIF,KAC3B,CAGE,EAAQ,OAEV,CAAClpG,KAAM,qBAGTgpG,IAAaL,EAERE,WADgBH,UAAsBO,GACTL,EAG/BK,EAAkBD,IAI7B,GAAIb,EACF,GAAoB,oBAATe,KACTj6B,EAAOx9D,oBAAsB43F,EAAK9lG,K,IAAgB,4BAC7C,CACL,IAAM+lG,EACF,yDAAyD,UAAuBvtF,WAAU,QAC9FkzD,EAAOx9D,oBAAsB,IAAIy3F,KAAK,CAACI,GAAmB,CAACtpG,KAAM,oBAIrElD,EAAQmyE,GAAQrnD,MAEZ,SAAA5qB,GACEmG,GAAe,EACfD,GAAc,EACd5E,EAAOtB,EACPgrB,OAGF,SAACuhF,GACCpmG,GAAe,EACfC,GAAU,EACVgsB,EAAOm6E,UAIf,GAAMtkG,QAAQukG,KAAKT,I,OAEnB,GAFA,SAEID,EACF,MAAM,IAAI/qG,MAAM,2DAA2DqqG,EAAO,M,kBAIzE,EAAAjE,YAAc,WACzB,GAAIjhG,GAAe5E,EACjB,OAAOA,EAGT,MAAM,IAAIP,MAAM,wCAGL,EAAAq5C,QAAU,W,OACjBl0C,GAAgBC,GAAiBC,IACnCD,GAAe,EAEwB,QAAtC,EAAA7E,EAA+BswB,eAAO,SAAE66E,sBACzCnrG,OAAOR,EAEPqF,GAAe,EACfD,GAAc,EACdE,GAAU,K,wFC1KC,SAASsmG,IACtB,OAAO,IAAO,yvqFAAmntF,cAAU5rG,OAAWA,K,6BCCxptFd,EAAOD,QAAU,SAAU2iF,EAASiqB,EAAmBC,EAAeC,GACpE,IAAIC,EAAc3sG,MAAQyI,OAE1B,IACE,IACE,IAAImkG,EAEJ,IAEEA,EAAO,IAAID,EAAYZ,KAAK,CAACxpB,IAC7B,MAAOr8E,IAGP0mG,EAAO,IADWD,EAAYE,aAAeF,EAAYG,mBAAqBH,EAAYI,gBAAkBJ,EAAYK,gBAEnHC,OAAO1qB,GACZqqB,EAAOA,EAAKM,UAGd,IAAIlB,EAAMW,EAAYX,KAAOW,EAAYQ,UACrCC,EAAYpB,EAAIC,gBAAgBW,GAChCn8F,EAAS,IAAIk8F,EAAYH,GAAmBY,EAAWX,GAE3D,OADAT,EAAIqB,gBAAgBD,GACb38F,EACP,MAAOvK,GACP,OAAO,IAAIymG,EAAYH,GAAmB,+BAA+BjmF,OAAO+mF,mBAAmB/qB,IAAWkqB,IAEhH,MAAOvmG,GACP,IAAKwmG,EACH,MAAM9rG,MAAM,kCAGd,OAAO,IAAI+rG,EAAYH,GAAmBE,EAAKD,M,sMCnC/Cc,yBAA2B,GAG/B,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqB9sG,IAAjB+sG,EACH,OAAOA,EAAa9tG,QAGrB,IAAIC,EAAS0tG,yBAAyBE,GAAY,CAGjD7tG,QAAS,IAOV,OAHA+tG,oBAAoBF,GAAU1oG,KAAKlF,EAAOD,QAASC,EAAQA,EAAOD,QAAS4tG,qBAGpE3tG,EAAOD,QCpBf4tG,oBAAoBvmG,EAAI,SAASpH,GAChC,IAAI+tG,EAAS/tG,GAAUA,EAAOggC,WAC7B,WAAa,OAAOhgC,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADA2tG,oBAAoBvlG,EAAE2lG,EAAQ,CAAEpmG,EAAGomG,IAC5BA,GCLRJ,oBAAoBvlG,EAAI,SAASrI,EAASiuG,GACzC,IAAI,IAAIhpG,KAAOgpG,EACXL,oBAAoBlmG,EAAEumG,EAAYhpG,KAAS2oG,oBAAoBlmG,EAAE1H,EAASiF,IAC5EP,OAAO28B,eAAerhC,EAASiF,EAAK,CAAEipG,YAAY,EAAM3qG,IAAK0qG,EAAWhpG,MCJ3E2oG,oBAAoBllG,EAAI,WACvB,GAA0B,iBAAfylG,WAAyB,OAAOA,WAC3C,IACC,OAAO7sG,MAAQ,IAAI8sG,SAAS,cAAb,GACd,MAAO9nG,GACR,GAAsB,iBAAXuC,OAAqB,OAAOA,QALjB,GCAxB+kG,oBAAoBlmG,EAAI,SAASw0B,EAAKqX,GAAQ,OAAO7uC,OAAO0uB,UAAUluB,eAAeC,KAAK+2B,EAAKqX,ICC/Fq6D,oBAAoBrmG,EAAI,SAASvH,GACX,oBAAXquG,QAA0BA,OAAOC,aAC1C5pG,OAAO28B,eAAerhC,EAASquG,OAAOC,YAAa,CAAE5sG,MAAO,WAE7DgD,OAAO28B,eAAerhC,EAAS,aAAc,CAAE0B,OAAO,KCFvD,IAAI6sG,oBAAsBX,oBAAoB,M","file":"ort.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority.\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.backend === backend) {\n            return;\n        }\n        else {\n            throw new Error(`backend \"${name}\" is already registered`);\n        }\n        for (let i = 0; i < backendsSortedByPriority.length; i++) {\n            if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                backendsSortedByPriority.splice(i, 0, name);\n                return;\n            }\n        }\n        backendsSortedByPriority.push(name);\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.initializing) {\n                throw new Error(`backend \"${backendName}\" is being initialized; cannot initialize multiple times.`);\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            try {\n                backendInfo.initializing = true;\n                await backendInfo.backend.init();\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                errors.push({ name: backendName, err: e });\n                backendInfo.aborted = true;\n            }\n            finally {\n                backendInfo.initializing = false;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    //#endregion\n    //#region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return R.buffer!=j&&$(R.buffer),W}function n(){return R.buffer!=j&&$(R.buffer),Y}function r(){return R.buffer!=j&&$(R.buffer),U}function i(){return R.buffer!=j&&$(R.buffer),q}function o(){return R.buffer!=j&&$(R.buffer),B}function a(){return R.buffer!=j&&$(R.buffer),G}var u,c,s;e=e||{},u||(u=void 0!==e?e:{}),u.ready=new Promise((function(e,t){c=e,s=t}));var f,l={};for(f in u)u.hasOwnProperty(f)&&(l[f]=u[f]);var d=\"./this.program\";function p(e,t){throw t}var h,m,b,g,_,y=\"object\"==typeof window,w=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=u.ENVIRONMENT_IS_PTHREAD||!1,O=\"\";function T(e){return u.locateFile?u.locateFile(e,O):O+e}if(v){if(O=w?require(\"path\").dirname(O)+\"/\":__dirname+\"/\",h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof sn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},u.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var E;try{E=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=E.Worker}}else(y||w)&&(w?O=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(O=document.currentScript.src),_scriptDir&&(O=_scriptDir),O=0!==O.indexOf(\"blob:\")?O.substr(0,O.lastIndexOf(\"/\")+1):\"\",v?(h=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),Z(e.buffer),e},m=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},w&&(b=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var x,S,k=u.print||console.log.bind(console),M=u.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(u[f]=l[f]);l=null,u.thisProgram&&(d=u.thisProgram),u.quit&&(p=u.quit),u.wasmBinary&&(S=u.wasmBinary);var D=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var R,C,P,I=!1;function Z(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var j,W,Y,U,q,B,G,N=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&N)return N.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var o=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|o);else{var a=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|o<<6|a:(7&i)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?H(n(),e,t):\"\"}function z(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(n>=r)break;t[n++]=a}else{if(2047>=a){if(n+1>=r)break;t[n++]=192|a>>6}else{if(65535>=a){if(n+2>=r)break;t[n++]=224|a>>12}else{if(n+3>=r)break;t[n++]=240|a>>18,t[n++]=128|a>>12&63}t[n++]=128|a>>6&63}t[n++]=128|63&a}}return t[n]=0,n-i}function V(e,t,r){return z(e,n(),t,r)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function X(e){var n=Q(e)+1,r=Ft(n);return r&&z(e,t(),r,n),r}function $(e){j=e,u.HEAP8=W=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=U=new Int32Array(e),u.HEAPU8=Y=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=q=new Uint32Array(e),u.HEAPF32=B=new Float32Array(e),u.HEAPF64=G=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(j=u.buffer);var J=u.INITIAL_MEMORY||16777216;if(A)R=u.wasmMemory,j=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:J/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw M(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");R&&(j=R.buffer),J=j.byteLength,$(j);var K,ee=[],te=[],ne=[],re=[],ie=0;function oe(){return D||0<ie}function ae(){var e=u.preRun.shift();ee.unshift(e)}var ue,ce=0,se=null,fe=null;function le(e){throw u.onAbort&&u.onAbort(e),Z(!A),M(e),I=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ue.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ue;try{if(e==ue&&S)return new Uint8Array(S);if(b)return b(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue=\"ort-wasm-threaded.wasm\",de()||(ue=T(ue));var he={992292:function(){throw\"Canceled!\"}};function me(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(u);else{var n=t.Ec;\"number\"==typeof n?void 0===t.Wb?K.get(n)():K.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),cn>>2),o=0;if(i==e&&Atomics.compareExchange(r(),cn>>2,i,0)==i&&(o=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+o;throw\"Atomics.notify returned an unexpected value \"+e}function ge(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.Rb[e];t&&(r()[e+12>>2]=0,ye.ic(t.worker))}u._emscripten_futex_wake=be;var _e,ye={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ft(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=Ft(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),Qt(e,!w,1),qt(e)},Jc:function(){ye.receiveObjectTransfer=ye.Pc,ye.threadInit=ye.Zc,ye.threadCancel=ye.Yc,ye.threadExit=ye.yc,ye.setExitStatus=ye.Rc},Rb:{},pc:[],vc:function(){for(;0<ye.pc.length;)ye.pc.pop()();$t()},wc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.vc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),be(e+0,2147483647),Qt(0,0,0)},Rc:function(e){P=e},yc:function(e){var t=Yt();t&&(ye.wc(t,e),A&&postMessage({cmd:\"exit\"}))},Yc:function(){ye.wc(Yt(),-1),postMessage({cmd:\"cancelDone\"})},xc:function(){for(var e in ye.Rb){var t=ye.Rb[e];t&&t.worker&&ye.ic(t.worker)}for(ye.Rb={},e=0;e<ye.Ub.length;++e){var n=ye.Ub[e];n.terminate()}for(ye.Ub=[],e=0;e<ye.Tb.length;++e)t=(n=ye.Tb[e]).Qb,ye.nc(t),n.terminate();ye.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=r()[e.Sb+100>>2];r()[e.Sb+100>>2]=0,Wt(t),Wt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Wt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){ye.Qc((function(){delete ye.Rb[e.Qb.Sb],ye.Ub.push(e),ye.Tb.splice(ye.Tb.indexOf(e),1),ye.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){r()[un>>2]=0;try{e()}finally{r()[un>>2]=1}},Pc:function(){},Zc:function(){for(var e in ye.qc)ye.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var o=n.data,a=o.cmd;if(e.Qb&&(ye.Cc=e.Qb.Sb),o.targetThread&&o.targetThread!=Yt()){var u=ye.Rb[o.wd];u?u.worker.postMessage(n.data,o.transferList):M('Internal error! Worker sent a message \"'+a+'\" to target pthread '+o.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===a)Nt();else if(\"spawnThread\"===a)Oe(n.data);else if(\"cleanupThread\"===a)ge(o.thread);else if(\"killThread\"===a){if(n=o.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,o=ye.Rb[n],delete ye.Rb[n],o.worker.terminate(),ye.nc(o),ye.Tb.splice(ye.Tb.indexOf(o.worker),1),o.worker.Qb=void 0}else if(\"cancelThread\"===a){if(n=o.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.Rb[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===a)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\"print\"===a)k(\"Thread \"+o.threadId+\": \"+o.text);else if(\"printErr\"===a)M(\"Thread \"+o.threadId+\": \"+o.text);else if(\"alert\"===a)alert(\"Thread \"+o.threadId+\": \"+o.text);else if(\"exit\"===a)e.Qb&&Atomics.load(i(),e.Qb.Sb+64>>2)&&ye.ic(e);else if(\"exitProcess\"===a)try{ln(o.returnCode)}catch(e){if(e instanceof sn)return;throw e}else\"cancelDone\"===a?ye.ic(e):\"objectTransfer\"!==a&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):M(\"worker sent an unknown command \"+a));ye.Cc=void 0},e.onerror=function(e){M(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},v&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},zc:function(){var e=T(\"ort-wasm-threaded.worker.js\");ye.Ub.push(new Worker(e))},Fc:function(){return 0==ye.Ub.length&&(ye.zc(),ye.Lc(ye.Ub[0])),ye.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[jt()>>2]=28,-1;e=_e()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function ve(e,t){if(A)return Le(1,1,e,t);ne.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){r()[this.$b+4>>2]=e},this.Tc=function(e){r()[this.$b+8>>2]=e},this.Uc=function(){r()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Oe(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\"Internal error!\";if(!e.fc)throw\"Internal error, no pthread ptr!\";ye.Tb.push(t);for(var n=Ft(512),o=0;128>o;++o)r()[n+4*o>>2]=0;var a=e.Vb+e.Xb,u=(o=ye.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.Sb),Atomics.store(i(),u+20,e.Xb),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.Xb),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached),n=Xt()+40,Atomics.store(i(),u+43,n),t.Qb=o;var c={cmd:\"run\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){c.time=performance.now(),t.postMessage(c,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Te(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var o=performance.now();for(i=o+i,Atomics.exchange(r(),cn>>2,e);;){if((o=performance.now())>i)return Atomics.exchange(r(),cn>>2,0),-73;if(0==(o=Atomics.exchange(r(),cn>>2,0)))break;if(Nt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),cn>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function Ee(){v||w||(x||(x={}),x[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(x[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,M(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}u.establishStackSpace=function(e,t){on(e,t),nn(e)},u.invokeEntryPoint=function(e,t){return K.get(e)(t)},_e=v?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-u.__performance_now_clock_drift}:function(){return performance.now()};var xe={},Se=[null,[],[]];function ke(e,t){var n=Se[e];0===t||10===t?((1===e?k:M)(H(n,0)),n.length=0):n.push(t)}var Me={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),Me.kd(e,t))}function Re(e,t,n){return A?Le(3,1,e,t,n):0}function Ce(e,t){if(A)return Le(4,1,e,t)}function Pe(e,t,n){if(A)return Le(5,1,e,t,n)}function Ie(e,t,n){return A?Le(6,1,e,t,n):0}function Ze(e,t){if(A)return Le(7,1,e,t)}function Fe(e,t){return A?Le(8,1,e,t):(e=L(e),Me.ld(e,t))}function je(e,t,r,i,o,a){if(A)t=Le(9,1,e,t,r,i,o,a);else if(a<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=an(65536,u))?n().fill(0,e,e+u):e=0,e?(xe[e]={Nc:e,Kc:t,Ac:!0,fd:o,td:r,flags:i,offset:a},t=e):t=-48}else t=-52;return t}function We(e,t){if(A)e=Le(10,1,e,t);else{var n=xe[e];0!==t&&n?(t===n.Kc&&(xe[e]=null,n.Ac&&Wt(n.Nc)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Le(11,1,e,t,n)}function Ue(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),Me.md(e,t,n))}function qe(e){if(A)return Le(13,1,e)}function Be(e,t){if(A)return Le(14,1,e,t)}function Ge(e){if(A)return Le(15,1,e)}function Ne(){if(A)return Le(16,1);le()}var He=[];function Le(e,t){for(var n=arguments.length-2,r=tn(),i=rn(8*n),o=i>>3,u=0;u<n;u++){var c=arguments[2+u];a()[o+u]=c}return n=Ht(e,n,i,t),nn(r),n}var ze=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Qe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Xe(e,t,n){var i=Qe(e);if(!i)return-4;if(i.ec&&(r()[i.ec>>2]=t,r()[i.ec+4>>2]=n),!i.uc&&i.hd){if(i.ec){i=r()[i.ec+8>>2],e=e?L(e):\"\";var o=tn(),a=rn(12),u=0;if(e){u=Q(e)+1;var c=Ft(u);V(e,c,u),u=c}return r()[a>>2]=u,r()[a+4>>2]=t,r()[a+8>>2]=n,Lt(0,i,657457152,0,u,a),nn(o),1}return-4}return i.uc&&(i=i.uc),e=!1,i.dc&&i.dc.cc&&(e=0===(e=i.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Le(17,1,e,t,n):Xe(e,t,n)}var Je=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=[\"nearest-neighbor\",\"linear\"],rt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function it(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function ot(e,t=\"float32\"){const o=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],Z(\"float32\"===t),new Float32Array(n().buffer,o,e/Float32Array.BYTES_PER_ELEMENT)}function at(e){return{alpha:o()[e>>2]}}function ut(e){return{type:rt[i()[e>>2]],dimensions:it(i()[e+8>>2],r()[e+4>>2])}}function ct(e){return{windowDimensions:it(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?it(i()[e+8>>2],r()[e+12>>2]):void 0,strides:it(i()[e+16>>2],r()[e+20>>2]),dilations:it(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var st,ft,lt,dt,pt,ht,mt,bt,gt,_t={};function yt(){if(!gt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in _t)void 0===_t[e]?delete t[e]:t[e]=_t[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);gt=n}return gt}function wt(e,n){if(A)return Le(18,1,e,n);var i=0;return yt().forEach((function(o,a){var u=n+i;for(a=r()[e+4*a>>2]=u,u=0;u<o.length;++u)t()[a++>>0]=o.charCodeAt(u);t()[a>>0]=0,i+=o.length+1})),0}function vt(e,t){if(A)return Le(19,1,e,t);var n=yt();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function At(e){return A?Le(20,1,e):0}function Ot(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Tt(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=Me.od(e),t=Me.nd(e,t,n),r()[i>>2]=t,0)}function Et(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function xt(e,t,i,o){if(A)return Le(24,1,e,t,i,o);for(var a=0,u=0;u<i;u++){for(var c=r()[t+8*u>>2],s=r()[t+(8*u+4)>>2],f=0;f<s;f++)ke(e,n()[c+f]);a+=s}return r()[o>>2]=a,0}function St(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!St.Bc){St.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var o=i.getTimezoneOffset(),a=Math.max(t,o);r()[en()>>2]=60*a,r()[Kt()>>2]=Number(t!=o),n=e(n),i=e(i),n=X(n),i=X(i),o<t?(r()[Jt()>>2]=n,r()[Jt()+4>>2]=i):(r()[Jt()>>2]=i,r()[Jt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Mt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Dt=[31,29,31,30,31,30,31,31,30,31,30,31],Rt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Dt:Rt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pt(e,n,i,o){function a(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function u(e,t){return a(e,t,\"0\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[o+40>>2];for(var d in o={bd:r()[o>>2],ad:r()[o+4>>2],jc:r()[o+8>>2],bc:r()[o+12>>2],Yb:r()[o+16>>2],Pb:r()[o+20>>2],kc:r()[o+24>>2],lc:r()[o+28>>2],xd:r()[o+32>>2],$c:r()[o+36>>2],cd:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),h=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.kc].substring(0,3)},\"%A\":function(e){return p[e.kc]},\"%b\":function(e){return h[e.Yb].substring(0,3)},\"%B\":function(e){return h[e.Yb]},\"%C\":function(e){return u((e.Pb+1900)/100|0,2)},\"%d\":function(e){return u(e.bc,2)},\"%e\":function(e){return a(e.bc,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return u(e.jc,2)},\"%I\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.bc+Mt(kt(e.Pb+1900)?Dt:Rt,e.Yb-1),3)},\"%m\":function(e){return u(e.Yb+1,2)},\"%M\":function(e){return u(e.ad,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.jc&&12>e.jc?\"AM\":\"PM\"},\"%S\":function(e){return u(e.bd,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.kc||7},\"%U\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.Pb+1901,0,4),n=s(new Date(e.Pb+1900,0,4));t=s(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>c(r,n)?\"53\":0>=c(t,r)?\"01\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\"%w\":function(e){return e.kc},\"%W\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Mt(kt(e.getFullYear())?Dt:Rt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.Pb+1900).toString().substring(2)},\"%Y\":function(e){return e.Pb+1900},\"%z\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.cd},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](o)));return(d=function(e){var t=Array(Q(e)+1);return z(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}st||(st=st||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var It=[null,ve,De,Re,Ce,Pe,Ie,Ze,Fe,je,We,Ye,Ue,qe,Be,Ge,Ne,$e,wt,vt,At,Ot,Tt,Et,xt,St],Zt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},G:function(e,t){return we(e,t)},b:function(e){return Ft(e+16)+16},d:function(e,t){return ve(e,t)},e:function(e,t){ye.pc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,o){if(\"undefined\"==typeof SharedArrayBuffer)return M(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return M(\"pthread_create called with a null thread pointer!\"),28;var a=[];if(A&&0===a.length)return Gt(687865856,e,t,n,o);var u=0,c=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,u=r()[t+8>>2],c=0!==r()[t+12>>2]}else s=2097152;(t=0==u)?u=an(16,s):Z(0<(u-=s));for(var f=Ft(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={Vb:u,Xb:s,mc:t,detached:c,Xc:n,fc:f,Wb:o,dd:a},A?(n.gd=\"spawnThread\",postMessage(n,a),0):Oe(n)},T:function(e){throw A?ye.yc(e):(ye.vc(),ln(e)),\"unwind\"},U:function(e,t){return function(e,t){if(!e)return M(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Yt()==e)return M(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Bt()==e)return M(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return M(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return M(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(Ee();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):ge(e),0;zt(),A||Nt(),Te(e+0,n,A?100:1)}}(e,t)},L:De,r:Re,P:Ce,K:Pe,u:function(){return 42},C:Ie,M:Ze,Q:Fe,S:je,R:We,q:Ye,J:Ue,H:qe,v:Be,I:Ge,aa:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.Rb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:Ne,x:we,Ta:function(e,t){return e-t},W:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ba:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},O:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ca:function(e,t,i){var o;for(He.length=0,i>>=2;o=n()[t++];)(o=105>o)&&1&i&&i++,He.push(o?a()[i++>>1]:r()[i]),++i;return he[e].apply(null,He)},B:Ee,n:function(){},k:Te,j:be,N:function(){return 2147483648},i:_e,z:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){ze.length=t,n>>=3;for(var r=0;r<t;r++)ze[r]=a()[n+r];return(0>e?he[-e-1]:It[e]).apply(null,ze)},A:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-j.byteLength+65535>>>16),$(R.buffer);var o=1;break e}catch(e){}o=void 0}if(o)return!0}return!1},_:function(e,t,n){return Qe(e)?Xe(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!I){try{e()}catch(e){if(e instanceof sn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&M(\"exception thrown: \"+[e,e.stack]),e}if(!oe())try{A?Vt(P):ln(P)}catch(e){if(!(e instanceof sn))throw e}}}((function(){K.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Je[n],failIfMajorPerformanceCaveat:!!r()[t+7],Mc:r()[t+8],rd:r()[t+9],sc:r()[t+10],Dc:r()[t+11],ud:r()[t+12],vd:r()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=Ft(8);r()[n+4>>2]=Yt();var i={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=i),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,o){t.drawElementsInstancedANGLE(e,n,r,i,o)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\"EXT_disjoint_timer_query\"),t.sd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),st.create(navigator.ml.createContext(t))},E:wt,F:vt,l:At,D:Ot,t:Tt,Ua:Et,p:xt,ua:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.rc||(e.rc=X(\"GMT\")),r()[n+40>>2]=e.rc,n},X:function(){ye.Ic()},s:function(e,t){St(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[Jt()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:R||u.wasmMemory,y:function(e){St();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),o=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=o.getTimezoneOffset(),c=Math.min(u,a);return 0>n?r()[e+32>>2]=Number(a!=u&&c==i):0<n!=(c==i)&&(a=Math.max(u,a),t.setTime(t.getTime()+6e4*((0<n?c:a)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-o.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){st.hc(e)},Pa:function(e){st.release(e)},La:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.add(t,n),mt.create(n)},Ka:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.averagePool2d(t,n),mt.create(n)},Ja:function(e,t,n,i,a){return e=lt.get(e),t=mt.get(t),n=mt.get(n),i=mt.get(i),a={scale:mt.get(r()[a>>2]),bias:mt.get(r()[a+4>>2]),axis:r()[a+8>>2],epsilon:o()[a+12>>2],activation:bt.get(r()[a+16>>2])},a=e.batchNormalization(t,n,i,a),mt.create(a)},Ia:function(e,t){e=lt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ha:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),mt.create(n)},Ga:function(e,t,n,r){e=lt.get(e),t=it(t,n),n=[];for(var i=0;i<t.length;++i)n.push(mt.get(t[i]));return r=e.concat(n,r),mt.create(r)},Fa:function(e,t,n){return e=lt.get(e),n=ot(n,(t=ut(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),mt.create(n)},Ea:function(e,t,n,o){return e=lt.get(e),t=mt.get(t),n=mt.get(n),o={padding:\"explicit\"===Ke[r()[o+40>>2]]?it(i()[o>>2],r()[o+4>>2]):void 0,strides:it(i()[o+8>>2],r()[o+12>>2]),dilations:it(i()[o+16>>2],r()[o+20>>2]),autoPad:Ke[r()[o+40>>2]],groups:r()[o+48>>2],inputLayout:tt[r()[o+52>>2]],filterLayout:et[r()[o+56>>2]],bias:mt.get(r()[o+60>>2]),activation:bt.get(r()[o+64>>2])},o=e.conv2d(t,n,o),mt.create(o)},Da:function(e,n,i,a){return e=lt.get(e),n=mt.get(n),i=mt.get(i),a={c:mt.get(r()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,i,a),mt.create(a)},Ca:function(e,t,n){return e=lt.get(e),t=L(t),n=ut(n),n=e.input(t,n),mt.create(n)},Ba:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=at(n),n=e.leakyRelu(t,n),mt.create(n)},Aa:function(e,t){return e=lt.get(e),t=at(t),t=e.leakyRelu(t),bt.create(t)},za:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=mt.get(n),n=e.matmul(t,n),mt.create(n)},ya:function(e,t,n){return e=lt.get(e),t=mt.get(t),n=ct(n),n=e.maxPool2d(t,n),mt.create(n)},ra:function(e){lt.release(e)},xa:function(e,t){return e=lt.get(e),t=mt.get(t),t=e.relu(t),mt.create(t)},wa:function(e){return e=lt.get(e).relu(),bt.create(e)},va:function(e,t,n){e=lt.get(e),t=mt.get(t);var a=nt[r()[n>>2]],u=i()[n+4>>2],c=r()[n+8>>2];if(0!==u&&0!==c){for(var s=[],f=0;f<u;++f,c+=4)s.push(o()[c>>2]);u=s}else u=void 0;return n={mode:a,scales:u,sizes:it(i()[n+12>>2],r()[n+16>>2])},n=e.resample(t,n),mt.create(n)},ta:function(e,t,n,r){return e=lt.get(e),t=mt.get(t),n=it(r,n),n=e.reshape(t,n),mt.create(n)},sa:function(e,t,n){return e=lt.get(e),t=mt.get(t),n={permutation:it(i()[n>>2],r()[n+4>>2])},n=e.transpose(t,n),mt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=dt.get(t),n=pt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){dt.release(e)},qa:function(e,t,n){e=dt.get(e),t=L(t),n=0===r()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:it(i()[n+16>>2],r()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=L(t),n=mt.get(n),e[t]=n},la:function(e){pt.release(e)},ma:function(e,t,n){e=pt.get(e),t=L(t),n=ot(n),e[t]=n},ka:function(e){mt.hc(e)},ja:function(e){mt.release(e)},ia:function(e){bt.hc(e)},ha:function(e){bt.release(e)},Sa:Pt,g:function(e,t,n,r){return Pt(e,t,n,r)},ga:function(e){return e=st.get(e),e=new MLGraphBuilder(e),lt.create(e)},fa:function(){return dt.create({})},ea:function(){return ht.create({})},da:function(){return pt.create({})}};!function(){function e(e,t){u.asm=e.exports,K=u.asm.pb,te.unshift(u.asm.Wa),ye.qc.push(u.asm.ub),C=t,A||(ce--,u.monitorRunDependencies&&u.monitorRunDependencies(ce),0==ce&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!S&&(y||w)){if(\"function\"==typeof fetch&&!ue.startsWith(\"file://\"))return fetch(ue,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ue+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(m)return new Promise((function(e,t){m(ue,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){M(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Zt};if(A||(ce++,u.monitorRunDependencies&&u.monitorRunDependencies(ce)),u.instantiateWasm)try{return u.instantiateWasm(r,e)}catch(e){return M(\"Module.instantiateWasm callback failed with error: \"+e),!1}(S||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ue.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ue,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return M(\"wasm streaming compile failed: \"+e),M(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Wa).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Xa).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Ya).apply(null,arguments)},u._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(u._OrtSessionOptionsAppendExecutionProviderWebNN=u.asm.Za).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm._a).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.$a).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm.ab).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.bb).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.cb).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.db).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.eb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.fb).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.gb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.hb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.ib).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.jb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.kb).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.lb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.mb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.nb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.ob).apply(null,arguments)};var Ft=u._malloc=function(){return(Ft=u._malloc=u.asm.qb).apply(null,arguments)},jt=u.___errno_location=function(){return(jt=u.___errno_location=u.asm.rb).apply(null,arguments)},Wt=u._free=function(){return(Wt=u._free=u.asm.sb).apply(null,arguments)},Yt=u._pthread_self=function(){return(Yt=u._pthread_self=u.asm.tb).apply(null,arguments)};u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.ub).apply(null,arguments)},u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.vb).apply(null,arguments)};var Ut,qt=u._emscripten_register_main_browser_thread_id=function(){return(qt=u._emscripten_register_main_browser_thread_id=u.asm.wb).apply(null,arguments)},Bt=u._emscripten_main_browser_thread_id=function(){return(Bt=u._emscripten_main_browser_thread_id=u.asm.xb).apply(null,arguments)},Gt=u._emscripten_sync_run_in_main_thread_4=function(){return(Gt=u._emscripten_sync_run_in_main_thread_4=u.asm.yb).apply(null,arguments)},Nt=u._emscripten_main_thread_process_queued_calls=function(){return(Nt=u._emscripten_main_thread_process_queued_calls=u.asm.zb).apply(null,arguments)},Ht=u._emscripten_run_in_main_runtime_thread_js=function(){return(Ht=u._emscripten_run_in_main_runtime_thread_js=u.asm.Ab).apply(null,arguments)},Lt=u.__emscripten_call_on_thread=function(){return(Lt=u.__emscripten_call_on_thread=u.asm.Bb).apply(null,arguments)},zt=u._pthread_testcancel=function(){return(zt=u._pthread_testcancel=u.asm.Cb).apply(null,arguments)},Vt=u._pthread_exit=function(){return(Vt=u._pthread_exit=u.asm.Db).apply(null,arguments)},Qt=u.__emscripten_thread_init=function(){return(Qt=u.__emscripten_thread_init=u.asm.Eb).apply(null,arguments)},Xt=u._emscripten_get_global_libc=function(){return(Xt=u._emscripten_get_global_libc=u.asm.Fb).apply(null,arguments)},$t=u.___pthread_tsd_run_dtors=function(){return($t=u.___pthread_tsd_run_dtors=u.asm.Gb).apply(null,arguments)},Jt=u.__get_tzname=function(){return(Jt=u.__get_tzname=u.asm.Hb).apply(null,arguments)},Kt=u.__get_daylight=function(){return(Kt=u.__get_daylight=u.asm.Ib).apply(null,arguments)},en=u.__get_timezone=function(){return(en=u.__get_timezone=u.asm.Jb).apply(null,arguments)},tn=u.stackSave=function(){return(tn=u.stackSave=u.asm.Kb).apply(null,arguments)},nn=u.stackRestore=function(){return(nn=u.stackRestore=u.asm.Lb).apply(null,arguments)},rn=u.stackAlloc=function(){return(rn=u.stackAlloc=u.asm.Mb).apply(null,arguments)},on=u._emscripten_stack_set_limits=function(){return(on=u._emscripten_stack_set_limits=u.asm.Nb).apply(null,arguments)},an=u._memalign=function(){return(an=u._memalign=u.asm.Ob).apply(null,arguments)},un=u.__emscripten_allow_main_runtime_queued_calls=991844,cn=u.__emscripten_main_thread_futex=995844;function sn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function fn(){function e(){if(!Ut&&(Ut=!0,u.calledRun=!0,!I)&&(A||me(te),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!A)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e=u.postRun.shift();re.unshift(e)}me(re)}}if(!(0<ce))if(A)c(u),A||me(te),postMessage({cmd:\"loaded\"});else{if(!A){if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)ae();me(ee)}0<ce||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),e()}),1)):e())}}function ln(e){if(P=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new sn(e);oe()||(ye.xc(),A||(me(ne),\"undefined\"!=typeof _fflush&&_fflush(0),Se[1].length&&ke(1,10),Se[2].length&&ke(2,10))),P=e,oe()||(ye.xc(),u.onExit&&u.onExit(e),I=!0),p(e,new sn(e))}if(u.UTF8ToString=L,u.stringToUTF8=V,u.lengthBytesUTF8=Q,u.keepRuntimeAlive=oe,u.PThread=ye,u.stackSave=tn,u.stackRestore=nn,u.stackAlloc=rn,u.PThread=ye,u.wasmMemory=R,u.ExitStatus=sn,fe=function e(){Ut||fn(),Ut||(fe=e)},u.run=fn,u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return A&&(D=!1,ye.Jc()),fn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},l;for(l in d)d.hasOwnProperty(l)&&(g[l]=d[l]);var ca=\"./this.program\",da=\"object\"===typeof window,p=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,r=\"\",fa,v,w,x,y;\nif(ea)r=p?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",fa=function(a,b){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);return x.readFileSync(a,b?null:\"utf8\")},w=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||A(\"Assertion failed: undefined\");return a},v=function(a,b,c){x||(x=require(\"fs\"));y||(y=require(\"path\"));a=y.normalize(a);x.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",A),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||p)p?r=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.lastIndexOf(\"/\")+1):r=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},p&&(w=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\nb.send(null);return new Uint8Array(b.response)}),v=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ha=d.print||console.log.bind(console),B=d.printErr||console.warn.bind(console);for(l in g)g.hasOwnProperty(l)&&(d[l]=g[l]);g=null;d.thisProgram&&(ca=d.thisProgram);var C;d.wasmBinary&&(C=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&A(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction la(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var m=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|m:(h&7)<<18|k<<12|m<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function D(a,b){return a?la(E,a,b):\"\"}\nfunction ma(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var m=a.charCodeAt(k);if(55296<=m&&57343>=m){var t=a.charCodeAt(++k);m=65536+((m&1023)<<10)|t&1023}if(127>=m){if(c>=e)break;b[c++]=m}else{if(2047>=m){if(c+1>=e)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=e)break;b[c++]=224|m>>12}else{if(c+3>=e)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-h}\nfunction na(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function oa(a){var b=na(a)+1,c=pa(b);c&&ma(a,F,c,b);return c}var qa,F,E,G,H,J;\nfunction ra(){var a=ia.buffer;qa=a;d.HEAP8=F=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=E=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=J=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var sa,ta=[],ua=[],va=[],wa=[];function xa(){var a=d.preRun.shift();ta.unshift(a)}var K=0,ya=null,L=null;d.preloadedImages={};d.preloadedAudios={};\nfunction A(a){if(d.onAbort)d.onAbort(a);B(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function za(){return M.startsWith(\"data:application/octet-stream;base64,\")}var M;M=\"ort-wasm.wasm\";if(!za()){var Aa=M;M=d.locateFile?d.locateFile(Aa,r):r+Aa}function Ba(){var a=M;try{if(a==M&&C)return new Uint8Array(C);if(w)return w(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){A(b)}}\nfunction Ca(){if(!C&&(da||p)){if(\"function\"===typeof fetch&&!M.startsWith(\"file://\"))return fetch(M,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+M+\"'\";return a.arrayBuffer()}).catch(function(){return Ba()});if(v)return new Promise(function(a,b){v(M,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ba()})}\nfunction Da(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.ub;\"number\"===typeof c?void 0===b.kb?sa.get(c)():sa.get(c)(b.kb):c(void 0===b.kb?null:b.kb)}}}function Ea(a){this.mb=a-16;this.Eb=function(b){G[this.mb+4>>2]=b};this.Bb=function(b){G[this.mb+8>>2]=b};this.Cb=function(){G[this.mb>>2]=0};this.Ab=function(){F[this.mb+12>>0]=0};this.Db=function(){F[this.mb+13>>0]=0};this.wb=function(b,c){this.Eb(b);this.Bb(c);this.Cb();this.Ab();this.Db()}}\nvar Fa=0,Ga={},Ha=[null,[],[]],N={},O;O=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ia=[\"explicit\",\"same-upper\",\"same-lower\"],Ja=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ka=[\"nchw\",\"nhwc\"],La=[\"nearest-neighbor\",\"linear\"],Ma=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function P(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(G[b>>2]);return c}}\nfunction Na(a,b=\"float32\"){const c=G[a>>2]+H[a+8>>2];a=H[a+4>>2];\"float32\"===b||A(\"Assertion failed: undefined\");return new Float32Array(E.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Oa(a){return{type:Ma[H[a>>2]],dimensions:P(H[a+8>>2],G[a+4>>2])}}function Pa(a){return{windowDimensions:P(H[a>>2],G[a+4>>2]),padding:\"explicit\"===Ia[G[a+32>>2]]?P(H[a+8>>2],G[a+12>>2]):void 0,strides:P(H[a+16>>2],G[a+20>>2]),dilations:P(H[a+24>>2],G[a+28>>2]),autoPad:Ia[G[a+32>>2]],layout:Ka[G[a+36>>2]]}}\nvar Q,S,T,U,V,W,X,Y,Qa={};function Ra(){if(!Sa){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Qa)void 0===Qa[b]?delete a[b]:a[b]=Qa[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Sa=c}return Sa}var Sa;\nfunction Ta(a,b){a=new Date(1E3*G[a>>2]);G[b>>2]=a.getUTCSeconds();G[b+4>>2]=a.getUTCMinutes();G[b+8>>2]=a.getUTCHours();G[b+12>>2]=a.getUTCDate();G[b+16>>2]=a.getUTCMonth();G[b+20>>2]=a.getUTCFullYear()-1900;G[b+24>>2]=a.getUTCDay();G[b+36>>2]=0;G[b+32>>2]=0;G[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Ta.tb||(Ta.tb=oa(\"GMT\"));G[b+40>>2]=Ta.tb;return b}\nfunction Ua(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}if(!Va){Va=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);G[Wa()>>2]=60*k;G[$a()>>2]=Number(b!=h);c=a(c);e=a(e);c=oa(c);e=oa(e);h<b?(G[Z()>>2]=c,G[Z()+4>>2]=e):(G[Z()>>2]=e,G[Z()+4>>2]=c)}}var Va;function ab(a){return 0===a%4&&(0!==a%100||0===a%400)}function bb(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar cb=[31,29,31,30,31,30,31,31,30,31,30,31],db=[31,28,31,30,31,30,31,31,30,31,30,31];function eb(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=(ab(a.getFullYear())?cb:db)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction fb(a,b,c,e){function h(f,n,q){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<n;)f=q[0]+f;return f}function k(f,n){return h(f,n,\"0\")}function m(f,n){function q(Xa){return 0>Xa?-1:0<Xa?1:0}var I;0===(I=q(f.getFullYear()-n.getFullYear()))&&0===(I=q(f.getMonth()-n.getMonth()))&&(I=q(f.getDate()-n.getDate()));return I}function t(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function R(f){f=eb(new Date(f.ib+1900,0,1),f.rb);var n=new Date(f.getFullYear()+1,0,4),q=t(new Date(f.getFullYear(),0,4));n=t(n);return 0>=m(q,f)?0>=m(n,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var z=G[e+40>>2];e={Hb:G[e>>2],Gb:G[e+4>>2],pb:G[e+8>>2],nb:G[e+12>>2],jb:G[e+16>>2],ib:G[e+20>>2],qb:G[e+24>>2],rb:G[e+28>>2],Pb:G[e+32>>2],Fb:G[e+\n36>>2],Ib:z?D(z):\"\"};c=D(c);z={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var u in z)c=c.replace(new RegExp(u,\"g\"),z[u]);var Ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nZa=\"January February March April May June July August September October November December\".split(\" \");z={\"%a\":function(f){return Ya[f.qb].substring(0,3)},\"%A\":function(f){return Ya[f.qb]},\"%b\":function(f){return Za[f.jb].substring(0,3)},\"%B\":function(f){return Za[f.jb]},\"%C\":function(f){return k((f.ib+1900)/100|0,2)},\"%d\":function(f){return k(f.nb,2)},\"%e\":function(f){return h(f.nb,2,\" \")},\"%g\":function(f){return R(f).toString().substring(2)},\"%G\":function(f){return R(f)},\"%H\":function(f){return k(f.pb,\n2)},\"%I\":function(f){f=f.pb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.nb+bb(ab(f.ib+1900)?cb:db,f.jb-1),3)},\"%m\":function(f){return k(f.jb+1,2)},\"%M\":function(f){return k(f.Gb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.pb&&12>f.pb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Hb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.qb||7},\"%U\":function(f){var n=new Date(f.ib+1900,0,1),q=0===n.getDay()?n:eb(n,7-n.getDay());f=new Date(f.ib+1900,f.jb,f.nb);return 0>\nm(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%V\":function(f){var n=new Date(f.ib+1901,0,4),q=t(new Date(f.ib+1900,0,4));n=t(n);var I=eb(new Date(f.ib+1900,0,1),f.rb);return 0>m(I,q)?\"53\":0>=m(n,I)?\"01\":k(Math.ceil((q.getFullYear()<f.ib+1900?f.rb+32-q.getDate():f.rb+1-q.getDate())/7),2)},\"%w\":function(f){return f.qb},\"%W\":function(f){var n=new Date(f.ib,0,1),q=1===n.getDay()?n:eb(n,0===n.getDay()?1:7-n.getDay()+1);f=\nnew Date(f.ib+1900,f.jb,f.nb);return 0>m(q,f)?k(Math.ceil((31-q.getDate()+(bb(ab(f.getFullYear())?cb:db,f.getMonth()-1)-31)+f.getDate())/7),2):0===m(q,n)?\"01\":\"00\"},\"%y\":function(f){return(f.ib+1900).toString().substring(2)},\"%Y\":function(f){return f.ib+1900},\"%z\":function(f){f=f.Fb;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Ib},\"%%\":function(){return\"%\"}};for(u in z)c.includes(u)&&(c=c.replace(new RegExp(u,\"g\"),z[u](e)));u=gb(c);\nif(u.length>b)return 0;F.set(u,a);return u.length-1}(function(){function a(){return{lb:{},zb:1,create:function(b,c){c=c||{};var e=this.zb++;c.sb=1;c.object=b;this.lb[e]=c;return e},get:function(b){if(0!==b)return this.lb[b].object},ob:function(b){this.lb[b].sb++},release:function(b){var c=this.lb[b];c.sb--;0>=c.sb&&delete this.lb[b]}}}Q||(Q=Q||a(),S=S||a(),T=T||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function gb(a){var b=Array(na(a)+1);ma(a,b,0,b.length);return b}\nvar kb={a:function(a){return pa(a+16)+16},c:function(a,b){va.unshift({ub:a,kb:b})},f:function(a,b){va.unshift({ub:a,kb:b})},b:function(a,b,c){(new Ea(a)).wb(b,c);Fa++;throw a;},L:function(a,b){a=D(a);return N.Jb(a,b)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(a,b){a=D(a);return N.Kb(a,b)},S:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var m=hb(65536,a);\nm?(E.fill(0,m,m+a),a=m):a=0;a?(Ga[a]={yb:a,xb:b,vb:!0,fd:h,Ob:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},R:function(a,b){var c=Ga[a];0!==b&&c?(b===c.xb&&(Ga[a]=null,c.vb&&ib(c.yb)),a=0):a=-28;return a},m:function(){},I:function(a,b,c){a=D(a);return N.Lb(a,b,c)},G:function(){},s:function(){},H:function(){},k:function(){A()},v:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=O();else return G[jb()>>2]=28,-1;G[b>>2]=a/1E3|0;G[b+4>>2]=a%1E3*1E6|0;return 0},J:function(a,b){return a-\nb},Ba:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Ca:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Aa:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nN:function(){return 2147483648},A:function(a,b,c){E.copyWithin(a,b,b+c)},l:function(a){var b=E.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ia.grow(Math.min(2147483648,e)-qa.byteLength+65535>>>16);ra();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},F:function(a){for(var b=O();O()-b<a;);},ya:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[H[a>>2]],powerPreference:e[H[a+4>>2]]});return Q.create(navigator.ml.createContext(b))},D:function(a,b){var c=0;Ra().forEach(function(e,h){var k=b+c;h=G[a+4*h>>2]=k;for(k=0;k<e.length;++k)F[h++>>0]=e.charCodeAt(k);F[h>>0]=0;c+=e.length+1});return 0},E:function(a,b){var c=Ra();G[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});G[b>>2]=e;return 0},i:function(){return 0},C:function(a,b){a=1==a||2==a?2:\nA();F[b>>0]=a;return 0},p:function(a,b,c,e){a=N.Nb(a);b=N.Mb(a,b,c);G[e>>2]=b;return 0},z:function(){},q:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var m=G[b+8*k>>2],t=G[b+(8*k+4)>>2],R=0;R<t;R++){var z=E[m+R],u=Ha[a];0===z||10===z?((1===a?ha:B)(la(u,0)),u.length=0):u.push(z)}h+=t}G[e>>2]=h;return 0},da:function(a){var b=Date.now();G[a>>2]=b/1E3|0;G[a+4>>2]=b%1E3*1E3|0;return 0},P:Ta,t:function(a,b){Ua();a=new Date(1E3*G[a>>2]);G[b>>2]=a.getSeconds();G[b+4>>2]=a.getMinutes();G[b+8>>2]=a.getHours();\nG[b+12>>2]=a.getDate();G[b+16>>2]=a.getMonth();G[b+20>>2]=a.getFullYear()-1900;G[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;G[b+32>>2]=a;a=G[Z()+(a?4:0)>>2];G[b+40>>2]=a;return b},n:function(a){Ua();var b=new Date(G[a+20>>2]+1900,G[a+16>>2],G[a+12>>2],G[a+8>>2],G[a+4>>2],G[a>>\n2],0),c=G[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),m=h.getTimezoneOffset(),t=Math.min(m,k);0>c?G[a+32>>2]=Number(k!=m&&t==e):0<c!=(t==e)&&(k=Math.max(m,k),b.setTime(b.getTime()+6E4*((0<c?t:k)-e)));G[a+24>>2]=b.getDay();G[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;G[a>>2]=b.getSeconds();G[a+4>>2]=b.getMinutes();G[a+8>>2]=b.getHours();G[a+12>>2]=b.getDate();G[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},y:function(a){Q.ob(a)},\nx:function(a){Q.release(a)},va:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.add(b,c);return X.create(c)},ua:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.averagePool2d(b,c);return X.create(c)},ta:function(a,b,c,e,h){a=T.get(a);b=X.get(b);c=X.get(c);e=X.get(e);h={scale:X.get(G[h>>2]),bias:X.get(G[h+4>>2]),axis:G[h+8>>2],epsilon:J[h+12>>2],activation:Y.get(G[h+16>>2])};h=a.batchNormalization(b,c,e,h);return X.create(h)},sa:function(a,b){a=T.get(a);b=W.get(b);try{var c=a.build(b);return S.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},ra:function(a,b,c){a=T.get(a);b=X.get(b);c=a.clamp(b,{minValue:J[c>>2],maxValue:J[c+4>>2]});return X.create(c)},qa:function(a,b,c,e){a=T.get(a);b=P(b,c);c=[];for(var h=0;h<b.length;++h)c.push(X.get(b[h]));e=a.concat(c,e);return X.create(e)},pa:function(a,b,c){a=T.get(a);b=Oa(b);c=Na(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return X.create(c)},oa:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={padding:\"explicit\"===Ia[G[e+40>>2]]?P(H[e>>2],G[e+4>>2]):void 0,strides:P(H[e+\n8>>2],G[e+12>>2]),dilations:P(H[e+16>>2],G[e+20>>2]),autoPad:Ia[G[e+40>>2]],groups:G[e+48>>2],inputLayout:Ka[G[e+52>>2]],filterLayout:Ja[G[e+56>>2]],bias:X.get(G[e+60>>2]),activation:Y.get(G[e+64>>2])};e=a.conv2d(b,c,e);return X.create(e)},na:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={c:X.get(G[e>>2]),alpha:J[e+4>>2],beta:J[e+8>>2],aTranspose:0!==F[e+12>>0],bTranspose:0!==F[e+13>>0]};e=a.gemm(b,c,e);return X.create(e)},ma:function(a,b,c){a=T.get(a);b=D(b);c=Oa(c);c=a.input(b,c);return X.create(c)},\nla:function(a,b,c){a=T.get(a);b=X.get(b);c=a.leakyRelu(b,{alpha:J[c>>2]});return X.create(c)},ka:function(a,b){a=T.get(a).leakyRelu({alpha:J[b>>2]});return Y.create(a)},ja:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.matmul(b,c);return X.create(c)},ia:function(a,b,c){a=T.get(a);b=X.get(b);c=Pa(c);c=a.maxPool2d(b,c);return X.create(c)},u:function(a){T.release(a)},ha:function(a,b){a=T.get(a);b=X.get(b);b=a.relu(b);return X.create(b)},ga:function(a){a=T.get(a).relu();return Y.create(a)},fa:function(a,\nb,c){a=T.get(a);b=X.get(b);var e=La[G[c>>2]];var h=H[c+4>>2];var k=G[c+8>>2];if(0!==h&&0!==k){for(var m=[],t=0;t<h;++t,k+=4)m.push(J[k>>2]);h=m}else h=void 0;c={mode:e,scales:h,sizes:P(H[c+12>>2],G[c+16>>2])};c=a.resample(b,c);return X.create(c)},ea:function(a,b,c,e){a=T.get(a);b=X.get(b);c=P(e,c);c=a.reshape(b,c);return X.create(c)},ca:function(a,b,c){a=T.get(a);b=X.get(b);c={permutation:P(H[c>>2],G[c+4>>2])};c=a.transpose(b,c);return X.create(c)},xa:function(a,b,c){a=S.get(a);b=U.get(b);c=V.get(c);\nreturn a.compute(b,c)},wa:function(a){S.ob(a)},w:function(a){S.release(a)},aa:function(a){U.release(a)},ba:function(a,b,c){a=U.get(a);b=D(b);c=0===G[c+12>>2]?Na(c+0):{resource:Na(c+0),dimensions:P(H[c+16>>2],G[c+12>>2])};a[b]=c},_:function(a){W.release(a)},$:function(a,b,c){a=W.get(a);b=D(b);c=X.get(c);a[b]=c},Y:function(a){V.release(a)},Z:function(a,b,c){a=V.get(a);b=D(b);c=Na(c);a[b]=c},e:function(a){X.ob(a)},d:function(a){X.release(a)},X:function(a){Y.ob(a)},h:function(a){Y.release(a)},za:fb,g:function(a,\nb,c,e){return fb(a,b,c,e)},W:function(a){a=Q.get(a);a=new MLGraphBuilder(a);return T.create(a)},V:function(){return U.create({})},U:function(){return W.create({})},T:function(){return V.create({})}};\n(function(){function a(h){d.asm=h.exports;ia=d.asm.Da;ra();sa=d.asm.hb;ua.unshift(d.asm.Ea);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==ya&&(clearInterval(ya),ya=null),L&&(h=L,L=null,h()))}function b(h){a(h.instance)}function c(h){return Ca().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){B(\"failed to asynchronously prepare wasm: \"+k);A(k)})}var e={a:kb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return B(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return C||\"function\"!==typeof WebAssembly.instantiateStreaming||za()||M.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(M,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){B(\"wasm streaming compile failed: \"+k);B(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ea).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Fa).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ga).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Ha).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Ia).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Ja).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ka).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.La).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ma).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.Na).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Oa).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Pa).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Qa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Ra).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Sa).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Ta).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Ua).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Va).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Wa).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.Xa).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Ya).apply(null,arguments)};\nvar pa=d._malloc=function(){return(pa=d._malloc=d.asm.Za).apply(null,arguments)},jb=d.___errno_location=function(){return(jb=d.___errno_location=d.asm._a).apply(null,arguments)},ib=d._free=function(){return(ib=d._free=d.asm.$a).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm.ab).apply(null,arguments)},$a=d.__get_daylight=function(){return($a=d.__get_daylight=d.asm.bb).apply(null,arguments)},Wa=d.__get_timezone=function(){return(Wa=d.__get_timezone=d.asm.cb).apply(null,\narguments)},lb=d.stackSave=function(){return(lb=d.stackSave=d.asm.db).apply(null,arguments)},mb=d.stackRestore=function(){return(mb=d.stackRestore=d.asm.eb).apply(null,arguments)},nb=d.stackAlloc=function(){return(nb=d.stackAlloc=d.asm.fb).apply(null,arguments)},hb=d._memalign=function(){return(hb=d._memalign=d.asm.gb).apply(null,arguments)};d.UTF8ToString=D;d.stringToUTF8=function(a,b,c){return ma(a,E,b,c)};d.lengthBytesUTF8=na;d.stackSave=lb;d.stackRestore=mb;d.stackAlloc=nb;var ob;\nL=function pb(){ob||qb();ob||(L=pb)};\nfunction qb(){function a(){if(!ob&&(ob=!0,d.calledRun=!0,!ja)){Da(ua);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();wa.unshift(b)}Da(wa)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)xa();Da(ta);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=qb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();qb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n!function(){var e={474:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return D.buffer!=W&&$(D.buffer),L}function r(){return D.buffer!=W&&$(D.buffer),z}function i(){return D.buffer!=W&&$(D.buffer),Y}function a(){return D.buffer!=W&&$(D.buffer),H}function o(){return D.buffer!=W&&$(D.buffer),B}function u(){return D.buffer!=W&&$(D.buffer),N}var s,c,l;e=e||{},s||(s=void 0!==e?e:{}),s.ready=new Promise((function(e,t){c=e,l=t}));var f,d={};for(f in s)s.hasOwnProperty(f)&&(d[f]=s[f]);var p=\\\"./this.program\\\";function b(e,t){throw t}var h,g,m,v,y,w=\\\"object\\\"==typeof window,_=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=s.ENVIRONMENT_IS_PTHREAD||!1,S=\\\"\\\";function E(e){return s.locateFile?s.locateFile(e,S):S+e}if(O){if(S=_?n(908).dirname(S)+\\\"/\\\":\\\"//\\\",h=function(e,t){return v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof ln))throw e})),process.on(\\\"unhandledRejection\\\",de),b=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},s.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var T;try{T=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=T.Worker}}else(w||_)&&(_?S=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(S=document.currentScript.src),_scriptDir&&(S=_scriptDir),S=0!==S.indexOf(\\\"blob:\\\")?S.substr(0,S.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(h=function(e,t){return v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){v||(v=n(384)),y||(y=n(908)),e=y.normalize(e),v.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},_&&(m=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),g=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var M,x,k=s.print||console.log.bind(console),R=s.printErr||console.warn.bind(console);for(f in d)d.hasOwnProperty(f)&&(s[f]=d[f]);d=null,s.thisProgram&&(p=s.thisProgram),s.quit&&(b=s.quit),s.wasmBinary&&(x=s.wasmBinary);var P=s.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var D,C,j,F=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,L,z,Y,H,B,N,G=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function Z(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function V(e,t){return e?Z(r(),e,t):\\\"\\\"}function q(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function X(e,t,n){return q(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function J(e){var n=Q(e)+1,r=Ut(n);return r&&q(e,t(),r,n),r}function $(e){W=e,s.HEAP8=L=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=Y=new Int32Array(e),s.HEAPU8=z=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=H=new Uint32Array(e),s.HEAPF32=B=new Float32Array(e),s.HEAPF64=N=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),A&&(W=s.buffer);var K=s.INITIAL_MEMORY||16777216;if(A)D=s.wasmMemory,W=s.buffer;else if(s.wasmMemory)D=s.wasmMemory;else if(!((D=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw R(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");D&&(W=D.buffer),K=W.byteLength,$(W);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return P||0<ae}function ue(){var e=s.preRun.shift();te.unshift(e)}var se,ce=0,le=null,fe=null;function de(e){throw s.onAbort&&s.onAbort(e),I(!A),R(e),F=!0,j=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function pe(){return se.startsWith(\\\"data:application/octet-stream;base64,\\\")}function be(){var e=se;try{if(e==se&&x)return new Uint8Array(x);if(m)return m(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}s.preloadedImages={},s.preloadedAudios={},se=\\\"ort-wasm-threaded.wasm\\\",pe()||(se=E(se));var he={992292:function(){throw\\\"Canceled!\\\"}};function ge(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(s);else{var n=t.Ec;\\\"number\\\"==typeof n?void 0===t.Wb?ee.get(n)():ee.get(n)(t.Wb):n(void 0===t.Wb?null:t.Wb)}}}function me(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),cn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),cn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ve(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=we.Rb[e];t&&(i()[e+12>>2]=0,we.ic(t.worker))}s._emscripten_futex_wake=me;var ye,we={Ub:[],Tb:[],qc:[],qd:function(){},Ic:function(){for(var e=Ut(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=Ut(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),Qt(e,!_,1),Ht(e)},Jc:function(){we.receiveObjectTransfer=we.Pc,we.threadInit=we.Zc,we.threadCancel=we.Yc,we.threadExit=we.yc,we.setExitStatus=we.Rc},Rb:{},pc:[],vc:function(){for(;0<we.pc.length;)we.pc.pop()();$t()},wc:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),we.vc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),me(e+0,2147483647),Qt(0,0,0)},Rc:function(e){j=e},yc:function(e){var t=zt();t&&(we.wc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},Yc:function(){we.wc(zt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},xc:function(){for(var e in we.Rb){var t=we.Rb[e];t&&t.worker&&we.ic(t.worker)}for(we.Rb={},e=0;e<we.Ub.length;++e){var n=we.Ub[e];n.terminate()}for(we.Ub=[],e=0;e<we.Tb.length;++e)t=(n=we.Tb[e]).Qb,we.nc(t),n.terminate();we.Tb=[]},nc:function(e){if(e){if(e.Sb){var t=i()[e.Sb+100>>2];i()[e.Sb+100>>2]=0,Lt(t),Lt(e.Sb)}e.Sb=0,e.mc&&e.Vb&&Lt(e.Vb),e.Vb=0,e.worker&&(e.worker.Qb=null)}},ic:function(e){we.Qc((function(){delete we.Rb[e.Qb.Sb],we.Ub.push(e),we.Tb.splice(we.Tb.indexOf(e),1),we.nc(e.Qb),e.Qb=void 0}))},Qc:function(e){i()[sn>>2]=0;try{e()}finally{i()[sn>>2]=1}},Pc:function(){},Zc:function(){for(var e in we.qc)we.qc[e]()},Lc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.Qb&&(we.Cc=e.Qb.Sb),r.targetThread&&r.targetThread!=zt()){var u=we.Rb[r.wd];u?u.worker.postMessage(n.data,r.transferList):R('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)Gt();else if(\\\"spawnThread\\\"===o)Se(n.data);else if(\\\"cleanupThread\\\"===o)ve(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=we.Rb[n],delete we.Rb[n],r.worker.terminate(),we.nc(r),we.Tb.splice(we.Tb.indexOf(r.worker),1),r.worker.Qb=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";we.Rb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.ac&&(e.ac(),delete e.ac);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)R(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.Qb&&Atomics.load(a(),e.Qb.Sb+64>>2)&&we.ic(e);else if(\\\"exitProcess\\\"===o)try{dn(r.returnCode)}catch(e){if(e instanceof ln)return;throw e}else\\\"cancelDone\\\"===o?we.ic(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):R(\\\"worker sent an unknown command \\\"+o));we.Cc=void 0},e.onerror=function(e){R(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:D,wasmModule:C})},zc:function(){var e=E(\\\"ort-wasm-threaded.worker.js\\\");we.Ub.push(new Worker(e))},Fc:function(){return 0==we.Ub.length&&(we.zc(),we.Lc(we.Ub[0])),we.Ub.pop()},ed:function(e){for(e=performance.now()+e;performance.now()<e;);}};function _e(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Wt()>>2]=28,-1;e=ye()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return Ve(1,1,e,t);re.unshift({Ec:e,Wb:t})}function Ae(e){this.$b=e-16,this.Wc=function(e){i()[this.$b+4>>2]=e},this.Tc=function(e){i()[this.$b+8>>2]=e},this.Uc=function(){i()[this.$b>>2]=0},this.Sc=function(){t()[this.$b+12>>0]=0},this.Vc=function(){t()[this.$b+13>>0]=0},this.Gc=function(e,t){this.Wc(e),this.Tc(t),this.Uc(),this.Sc(),this.Vc()}}function Se(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=we.Fc();if(!t)return 6;if(void 0!==t.Qb)throw\\\"Internal error!\\\";if(!e.fc)throw\\\"Internal error, no pthread ptr!\\\";we.Tb.push(t);for(var n=Ut(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.Vb+e.Xb,u=(r=we.Rb[e.fc]={worker:t,Vb:e.Vb,Xb:e.Xb,mc:e.mc,Sb:e.fc}).Sb>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.Sb),Atomics.store(a(),u+20,e.Xb),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.Xb),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=Jt()+40,Atomics.store(a(),u+43,n),t.Qb=r;var s={cmd:\\\"run\\\",start_routine:e.Xc,arg:e.Wb,threadInfoStruct:e.fc,stackBase:e.Vb,stackSize:e.Xb};return t.ac=function(){s.time=performance.now(),t.postMessage(s,e.dd)},t.loaded&&(t.ac(),delete t.ac),0}function Ee(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(w){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),cn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),cn>>2,0),-73;if(0==(a=Atomics.exchange(i(),cn>>2,0)))break;if(Gt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),cn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Te(){O||_||(M||(M={}),M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,R(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}s.establishStackSpace=function(e,t){on(e,t),rn(e)},s.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ye=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-s.__performance_now_clock_drift}:function(){return performance.now()};var Me={},xe=[null,[],[]];function ke(e,t){var n=xe[e];0===t||10===t?((1===e?k:R)(Z(n,0)),n.length=0):n.push(t)}var Re={};function Pe(e,t){return A?Ve(2,1,e,t):(e=V(e),Re.kd(e,t))}function De(e,t,n){return A?Ve(3,1,e,t,n):0}function Ce(e,t){if(A)return Ve(4,1,e,t)}function je(e,t,n){if(A)return Ve(5,1,e,t,n)}function Fe(e,t,n){return A?Ve(6,1,e,t,n):0}function Ie(e,t){if(A)return Ve(7,1,e,t)}function Ue(e,t){return A?Ve(8,1,e,t):(e=V(e),Re.ld(e,t))}function We(e,t,n,i,a,o){if(A)t=Ve(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=un(65536,u))?r().fill(0,e,e+u):e=0,e?(Me[e]={Nc:e,Kc:t,Ac:!0,fd:a,td:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Le(e,t){if(A)e=Ve(10,1,e,t);else{var n=Me[e];0!==t&&n?(t===n.Kc&&(Me[e]=null,n.Ac&&Lt(n.Nc)),e=0):e=-28}return e}function ze(e,t,n){if(A)return Ve(11,1,e,t,n)}function Ye(e,t,n){return A?Ve(12,1,e,t,n):(e=V(e),Re.md(e,t,n))}function He(e){if(A)return Ve(13,1,e)}function Be(e,t){if(A)return Ve(14,1,e,t)}function Ne(e){if(A)return Ve(15,1,e)}function Ge(){if(A)return Ve(16,1);de()}var Ze=[];function Ve(e,t){for(var n=arguments.length-2,r=nn(),i=an(8*n),a=i>>3,o=0;o<n;o++){var s=arguments[2+o];u()[a+o]=s}return n=Zt(e,n,i,t),rn(r),n}var qe=[],Xe=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Qe(e){return e=2<e?V(e):e,Xe[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Je(e,t,n){var r=Qe(e);if(!r)return-4;if(r.ec&&(i()[r.ec>>2]=t,i()[r.ec+4>>2]=n),!r.uc&&r.hd){if(r.ec){r=i()[r.ec+8>>2],e=e?V(e):\\\"\\\";var a=nn(),o=an(12),u=0;if(e){u=Q(e)+1;var s=Ut(u);X(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Vt(0,r,657457152,0,u,o),rn(a),1}return-4}return r.uc&&(r=r.uc),e=!1,r.dc&&r.dc.cc&&(e=0===(e=r.dc.cc.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.dc.cc.viewport(0,0,t,n),0}function $e(e,t,n){return A?Ve(17,1,e,t,n):Je(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=[\\\"nearest-neighbor\\\",\\\"linear\\\"],it=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function at(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function ot(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function ut(e){return{alpha:o()[e>>2]}}function st(e){return{type:it[a()[e>>2]],dimensions:at(a()[e+8>>2],i()[e+4>>2])}}function ct(e){return{windowDimensions:at(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?at(a()[e+8>>2],i()[e+12>>2]):void 0,strides:at(a()[e+16>>2],i()[e+20>>2]),dilations:at(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var lt,ft,dt,pt,bt,ht,gt,mt,vt,yt={};function wt(){if(!vt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in yt)void 0===yt[e]?delete t[e]:t[e]=yt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);vt=n}return vt}function _t(e,n){if(A)return Ve(18,1,e,n);var r=0;return wt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function Ot(e,t){if(A)return Ve(19,1,e,t);var n=wt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function At(e){return A?Ve(20,1,e):0}function St(e,n){return A?Ve(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Et(e,t,n,r){return A?Ve(22,1,e,t,n,r):(e=Re.od(e),t=Re.nd(e,t,n),i()[r>>2]=t,0)}function Tt(e,t,n,r,i){if(A)return Ve(23,1,e,t,n,r,i)}function Mt(e,t,n,a){if(A)return Ve(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],l=0;l<c;l++)ke(e,r()[s+l]);o+=c}return i()[a>>2]=o,0}function xt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return Ve(25,1);if(!xt.Bc){xt.Bc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[tn()>>2]=60*o,i()[en()>>2]=Number(t!=a),n=e(n),r=e(r),n=J(n),r=J(r),a<t?(i()[Kt()>>2]=n,i()[Kt()+4>>2]=r):(i()[Kt()>>2]=r,i()[Kt()+4>>2]=n)}}function kt(e){return 0==e%4&&(0!=e%100||0==e%400)}function Rt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Pt=[31,29,31,30,31,30,31,31,30,31,30,31],Dt=[31,28,31,30,31,30,31,31,30,31,30,31];function Ct(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(kt(e.getFullYear())?Pt:Dt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function jt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){e=Ct(new Date(e.Pb+1900,0,1),e.lc);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var f=i()[a+40>>2];for(var d in a={bd:i()[a>>2],ad:i()[a+4>>2],jc:i()[a+8>>2],bc:i()[a+12>>2],Yb:i()[a+16>>2],Pb:i()[a+20>>2],kc:i()[a+24>>2],lc:i()[a+28>>2],xd:i()[a+32>>2],$c:i()[a+36>>2],cd:f?V(f):\\\"\\\"},r=V(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),f[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),b=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in f={\\\"%a\\\":function(e){return p[e.kc].substring(0,3)},\\\"%A\\\":function(e){return p[e.kc]},\\\"%b\\\":function(e){return b[e.Yb].substring(0,3)},\\\"%B\\\":function(e){return b[e.Yb]},\\\"%C\\\":function(e){return u((e.Pb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.bc,2)},\\\"%e\\\":function(e){return o(e.bc,2,\\\" \\\")},\\\"%g\\\":function(e){return l(e).toString().substring(2)},\\\"%G\\\":function(e){return l(e)},\\\"%H\\\":function(e){return u(e.jc,2)},\\\"%I\\\":function(e){return 0==(e=e.jc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.bc+Rt(kt(e.Pb+1900)?Pt:Dt,e.Yb-1),3)},\\\"%m\\\":function(e){return u(e.Yb+1,2)},\\\"%M\\\":function(e){return u(e.ad,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.jc&&12>e.jc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.bd,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.kc||7},\\\"%U\\\":function(e){var t=new Date(e.Pb+1900,0,1),n=0===t.getDay()?t:Ct(t,7-t.getDay());return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Pb+1901,0,4),n=c(new Date(e.Pb+1900,0,4));t=c(t);var r=Ct(new Date(e.Pb+1900,0,1),e.lc);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Pb+1900?e.lc+32-n.getDate():e.lc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.kc},\\\"%W\\\":function(e){var t=new Date(e.Pb,0,1),n=1===t.getDay()?t:Ct(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Pb+1900,e.Yb,e.bc))?u(Math.ceil((31-n.getDate()+(Rt(kt(e.getFullYear())?Pt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Pb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Pb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.$c);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.cd},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),f[d](a)));return(d=function(e){var t=Array(Q(e)+1);return q(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}lt||(lt=lt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ft=ft||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},dt=dt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},pt=pt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},bt=bt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},ht=ht||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},gt=gt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}},mt=mt||{Zb:{},Oc:1,create:function(e,t){t=t||{};var n=this.Oc++;return t.oc=1,t.object=e,this.Zb[n]=t,n},get:function(e){if(0!==e)return this.Zb[e].object},hc:function(e){this.Zb[e].oc++},release:function(e){var t=this.Zb[e];t.oc--,0>=t.oc&&delete this.Zb[e]}});var Ft=[null,Oe,Pe,De,Ce,je,Fe,Ie,Ue,We,Le,ze,Ye,He,Be,Ne,Ge,$e,_t,Ot,At,St,Et,Tt,Mt,xt],It={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+V(e)+\\\", at: \\\"+[t?V(t):\\\"unknown filename\\\",n,r?V(r):\\\"unknown function\\\"])},G:function(e,t){return _e(e,t)},b:function(e){return Ut(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){we.pc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Gc(t,n),e},V:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return R(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return R(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(A&&0===o.length)return Nt(687865856,e,t,n,r);var u=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,u=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==u)?u=un(16,c):I(0<(u-=c));for(var l=Ut(228),f=0;57>f;++f)a()[(l>>2)+f]=0;return i()[e>>2]=l,i()[l+12>>2]=l,e=l+152,i()[e>>2]=e,n={Vb:u,Xb:c,mc:t,detached:s,Xc:n,fc:l,Wb:r,dd:o},A?(n.gd=\\\"spawnThread\\\",postMessage(n,o),0):Se(n)},T:function(e){throw A?we.yc(e):(we.vc(),dn(e)),\\\"unwind\\\"},U:function(e,t){return function(e,t){if(!e)return R(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&zt()==e)return R(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Bt()==e)return R(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return R(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return R(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Te();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ve(e),0;qt(),A||Gt(),Ee(e+0,n,A?100:1)}}(e,t)},L:Pe,r:De,P:Ce,K:je,u:function(){return 42},C:Fe,M:Ie,Q:Ue,S:We,R:Le,q:ze,J:Ye,H:He,v:Be,I:Ne,aa:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=we.Rb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Ge,x:_e,Ta:function(e,t){return e-t},W:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ba:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},O:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ca:function(e,t,n){var a;for(Ze.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Ze.push(a?u()[n++>>1]:i()[n]),++n;return he[e].apply(null,Ze)},B:Te,n:function(){},k:Ee,j:me,N:function(){return 2147483648},i:ye,z:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(993).cpus().length:navigator.hardwareConcurrency},Z:function(e,t,n){qe.length=t,n>>=3;for(var r=0;r<t;r++)qe[r]=u()[n+r];return(0>e?he[-e-1]:Ft[e]).apply(null,qe)},A:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{D.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),$(D.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},_:function(e,t,n){return Qe(e)?Je(e,t,n):$e(e,t,n)},w:function(){},Y:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!F){try{e()}catch(e){if(e instanceof ln)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&R(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{A?Xt(j):dn(j)}catch(e){if(!(e instanceof ln))throw e}}}((function(){ee.get(e)(n)}))}),t)},$:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Mc:i()[t+8],rd:i()[t+9],sc:i()[t+10],Dc:i()[t+11],ud:i()[t+12],vd:i()[t+13]},!(e=Qe(e))||t.Dc?0:function(e,t){e.tc||(e.tc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.tc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=Ut(8);i()[n+4>>2]=zt();var r={pd:n,attributes:t,version:t.Mc,cc:e};return e.canvas&&(e.canvas.dc=r),(void 0===t.sc||t.sc)&&function(e){if(e||(e=void 0),!e.Hc){e.Hc=!0;var t=e.cc;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.jd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.sd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Ra:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),lt.create(navigator.ml.createContext(t))},E:_t,F:Ot,l:At,D:St,t:Et,Ua:Tt,p:Mt,ua:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Va:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.rc||(e.rc=J(\\\"GMT\\\")),i()[n+40>>2]=e.rc,n},X:function(){we.Ic()},s:function(e,t){xt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[Kt()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:D||s.wasmMemory,y:function(e){xt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Qa:function(e){lt.hc(e)},Pa:function(e){lt.release(e)},La:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.add(t,n),gt.create(n)},Ka:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.averagePool2d(t,n),gt.create(n)},Ja:function(e,t,n,r,a){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r=gt.get(r),a={scale:gt.get(i()[a>>2]),bias:gt.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:mt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),gt.create(a)},Ia:function(e,t){e=dt.get(e),t=ht.get(t);try{var n=e.build(t);return ft.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ha:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),gt.create(n)},Ga:function(e,t,n,r){e=dt.get(e),t=at(t,n),n=[];for(var i=0;i<t.length;++i)n.push(gt.get(t[i]));return r=e.concat(n,r),gt.create(r)},Fa:function(e,t,n){return e=dt.get(e),n=ot(n,(t=st(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),gt.create(n)},Ea:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=gt.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?at(a()[r>>2],i()[r+4>>2]):void 0,strides:at(a()[r+8>>2],i()[r+12>>2]),dilations:at(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:gt.get(i()[r+60>>2]),activation:mt.get(i()[r+64>>2])},r=e.conv2d(t,n,r),gt.create(r)},Da:function(e,n,r,a){return e=dt.get(e),n=gt.get(n),r=gt.get(r),a={c:gt.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),gt.create(a)},Ca:function(e,t,n){return e=dt.get(e),t=V(t),n=st(n),n=e.input(t,n),gt.create(n)},Ba:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ut(n),n=e.leakyRelu(t,n),gt.create(n)},Aa:function(e,t){return e=dt.get(e),t=ut(t),t=e.leakyRelu(t),mt.create(t)},za:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=gt.get(n),n=e.matmul(t,n),gt.create(n)},ya:function(e,t,n){return e=dt.get(e),t=gt.get(t),n=ct(n),n=e.maxPool2d(t,n),gt.create(n)},ra:function(e){dt.release(e)},xa:function(e,t){return e=dt.get(e),t=gt.get(t),t=e.relu(t),gt.create(t)},wa:function(e){return e=dt.get(e).relu(),mt.create(e)},va:function(e,t,n){e=dt.get(e),t=gt.get(t);var r=rt[i()[n>>2]],u=a()[n+4>>2],s=i()[n+8>>2];if(0!==u&&0!==s){for(var c=[],l=0;l<u;++l,s+=4)c.push(o()[s>>2]);u=c}else u=void 0;return n={mode:r,scales:u,sizes:at(a()[n+12>>2],i()[n+16>>2])},n=e.resample(t,n),gt.create(n)},ta:function(e,t,n,r){return e=dt.get(e),t=gt.get(t),n=at(r,n),n=e.reshape(t,n),gt.create(n)},sa:function(e,t,n){return e=dt.get(e),t=gt.get(t),n={permutation:at(a()[n>>2],i()[n+4>>2])},n=e.transpose(t,n),gt.create(n)},Oa:function(e,t,n){return e=ft.get(e),t=pt.get(t),n=bt.get(n),e.compute(t,n)},Na:function(e){ft.hc(e)},Ma:function(e){ft.release(e)},pa:function(e){pt.release(e)},qa:function(e,t,n){e=pt.get(e),t=V(t),n=0===i()[n+12>>2]?ot(n+0):{resource:ot(n+0),dimensions:at(a()[n+16>>2],i()[n+12>>2])},e[t]=n},na:function(e){ht.release(e)},oa:function(e,t,n){e=ht.get(e),t=V(t),n=gt.get(n),e[t]=n},la:function(e){bt.release(e)},ma:function(e,t,n){e=bt.get(e),t=V(t),n=ot(n),e[t]=n},ka:function(e){gt.hc(e)},ja:function(e){gt.release(e)},ia:function(e){mt.hc(e)},ha:function(e){mt.release(e)},Sa:jt,g:function(e,t,n,r){return jt(e,t,n,r)},ga:function(e){return e=lt.get(e),e=new MLGraphBuilder(e),dt.create(e)},fa:function(){return pt.create({})},ea:function(){return ht.create({})},da:function(){return bt.create({})}};!function(){function e(e,t){s.asm=e.exports,ee=s.asm.pb,ne.unshift(s.asm.Wa),we.qc.push(s.asm.ub),C=t,A||(ce--,s.monitorRunDependencies&&s.monitorRunDependencies(ce),0==ce&&(null!==le&&(clearInterval(le),le=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(w||_)){if(\\\"function\\\"==typeof fetch&&!se.startsWith(\\\"file://\\\"))return fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+se+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return be()}));if(g)return new Promise((function(e,t){g(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return be()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){R(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:It};if(A||(ce++,s.monitorRunDependencies&&s.monitorRunDependencies(ce)),s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(e){return R(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(x||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||se.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return R(\\\"wasm streaming compile failed: \\\"+e),R(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.Wa).apply(null,arguments)},s._OrtInit=function(){return(s._OrtInit=s.asm.Xa).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm.Ya).apply(null,arguments)},s._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(s._OrtSessionOptionsAppendExecutionProviderWebNN=s.asm.Za).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm._a).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.$a).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm.ab).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.bb).apply(null,arguments)},s._OrtGetInputCount=function(){return(s._OrtGetInputCount=s.asm.cb).apply(null,arguments)},s._OrtGetOutputCount=function(){return(s._OrtGetOutputCount=s.asm.db).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.eb).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.fb).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.gb).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.hb).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.ib).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.jb).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.kb).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.lb).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.mb).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.nb).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.ob).apply(null,arguments)};var Ut=s._malloc=function(){return(Ut=s._malloc=s.asm.qb).apply(null,arguments)},Wt=s.___errno_location=function(){return(Wt=s.___errno_location=s.asm.rb).apply(null,arguments)},Lt=s._free=function(){return(Lt=s._free=s.asm.sb).apply(null,arguments)},zt=s._pthread_self=function(){return(zt=s._pthread_self=s.asm.tb).apply(null,arguments)};s._emscripten_tls_init=function(){return(s._emscripten_tls_init=s.asm.ub).apply(null,arguments)},s._emscripten_current_thread_process_queued_calls=function(){return(s._emscripten_current_thread_process_queued_calls=s.asm.vb).apply(null,arguments)};var Yt,Ht=s._emscripten_register_main_browser_thread_id=function(){return(Ht=s._emscripten_register_main_browser_thread_id=s.asm.wb).apply(null,arguments)},Bt=s._emscripten_main_browser_thread_id=function(){return(Bt=s._emscripten_main_browser_thread_id=s.asm.xb).apply(null,arguments)},Nt=s._emscripten_sync_run_in_main_thread_4=function(){return(Nt=s._emscripten_sync_run_in_main_thread_4=s.asm.yb).apply(null,arguments)},Gt=s._emscripten_main_thread_process_queued_calls=function(){return(Gt=s._emscripten_main_thread_process_queued_calls=s.asm.zb).apply(null,arguments)},Zt=s._emscripten_run_in_main_runtime_thread_js=function(){return(Zt=s._emscripten_run_in_main_runtime_thread_js=s.asm.Ab).apply(null,arguments)},Vt=s.__emscripten_call_on_thread=function(){return(Vt=s.__emscripten_call_on_thread=s.asm.Bb).apply(null,arguments)},qt=s._pthread_testcancel=function(){return(qt=s._pthread_testcancel=s.asm.Cb).apply(null,arguments)},Xt=s._pthread_exit=function(){return(Xt=s._pthread_exit=s.asm.Db).apply(null,arguments)},Qt=s.__emscripten_thread_init=function(){return(Qt=s.__emscripten_thread_init=s.asm.Eb).apply(null,arguments)},Jt=s._emscripten_get_global_libc=function(){return(Jt=s._emscripten_get_global_libc=s.asm.Fb).apply(null,arguments)},$t=s.___pthread_tsd_run_dtors=function(){return($t=s.___pthread_tsd_run_dtors=s.asm.Gb).apply(null,arguments)},Kt=s.__get_tzname=function(){return(Kt=s.__get_tzname=s.asm.Hb).apply(null,arguments)},en=s.__get_daylight=function(){return(en=s.__get_daylight=s.asm.Ib).apply(null,arguments)},tn=s.__get_timezone=function(){return(tn=s.__get_timezone=s.asm.Jb).apply(null,arguments)},nn=s.stackSave=function(){return(nn=s.stackSave=s.asm.Kb).apply(null,arguments)},rn=s.stackRestore=function(){return(rn=s.stackRestore=s.asm.Lb).apply(null,arguments)},an=s.stackAlloc=function(){return(an=s.stackAlloc=s.asm.Mb).apply(null,arguments)},on=s._emscripten_stack_set_limits=function(){return(on=s._emscripten_stack_set_limits=s.asm.Nb).apply(null,arguments)},un=s._memalign=function(){return(un=s._memalign=s.asm.Ob).apply(null,arguments)},sn=s.__emscripten_allow_main_runtime_queued_calls=991844,cn=s.__emscripten_main_thread_futex=995844;function ln(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function fn(){function e(){if(!Yt&&(Yt=!0,s.calledRun=!0,!F)&&(A||ge(ne),c(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!A)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();ie.unshift(e)}ge(ie)}}if(!(0<ce))if(A)c(s),A||ge(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)ue();ge(te)}0<ce||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function dn(e){if(j=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new ln(e);oe()||(we.xc(),A||(ge(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),xe[1].length&&ke(1,10),xe[2].length&&ke(2,10))),j=e,oe()||(we.xc(),s.onExit&&s.onExit(e),F=!0),b(e,new ln(e))}if(s.UTF8ToString=V,s.stringToUTF8=X,s.lengthBytesUTF8=Q,s.keepRuntimeAlive=oe,s.PThread=we,s.stackSave=nn,s.stackRestore=rn,s.stackAlloc=an,s.PThread=we,s.wasmMemory=D,s.ExitStatus=ln,fe=function e(){Yt||fn(),Yt||(fe=e)},s.run=fn,s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return A&&(P=!1,we.Jc()),fn(),e.ready});e.exports=r},118:function(e){\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:function(e,t,n){var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,s,c,l,f,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=b?n(908).dirname(g)+\\\"/\\\":\\\"//\\\",u=function(e,t){return l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||G(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",G),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||b)&&(b?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var m,v=t.print||console.log.bind(console),y=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(m=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&G(\\\"no native wasm support detected\\\");var w,_,O,A,S,E,T,M=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&x)return x.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function R(e,t){return e?k(A,e,t):\\\"\\\"}function P(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function D(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function C(e){var t=D(e)+1,n=Pe(t);return n&&P(e,O,n,t),n}function j(){var e=w.buffer;_=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=S=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=E=new Uint32Array(e),t.HEAPF32=T=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var F,I=[],U=[],W=[],L=[];function z(){var e=t.preRun.shift();I.unshift(e)}var Y,H=0,B=null,N=null;function G(e){throw t.onAbort&&t.onAbort(e),y(e),M=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function Z(){return Y.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},Y=\\\"ort-wasm.wasm\\\",!Z()){var V=Y;Y=t.locateFile?t.locateFile(V,g):g+V}function q(){var e=Y;try{if(e==Y&&m)return new Uint8Array(m);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){G(e)}}function X(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.ub;\\\"number\\\"==typeof r?void 0===n.kb?F.get(r)():F.get(r)(n.kb):r(void 0===n.kb?null:n.kb)}}}function Q(e){this.mb=e-16,this.Eb=function(e){S[this.mb+4>>2]=e},this.Bb=function(e){S[this.mb+8>>2]=e},this.Cb=function(){S[this.mb>>2]=0},this.Ab=function(){O[this.mb+12>>0]=0},this.Db=function(){O[this.mb+13>>0]=0},this.wb=function(e,t){this.Eb(e),this.Bb(t),this.Cb(),this.Ab(),this.Db()}}var J,$={},K=[null,[],[]],ee={};J=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=[\\\"nearest-neighbor\\\",\\\"linear\\\"],ae=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function oe(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(S[t>>2]);return n}}function ue(e,t=\\\"float32\\\"){const n=S[e>>2]+E[e+8>>2];return e=E[e+4>>2],\\\"float32\\\"===t||G(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function se(e){return{type:ae[E[e>>2]],dimensions:oe(E[e+8>>2],S[e+4>>2])}}function ce(e){return{windowDimensions:oe(E[e>>2],S[e+4>>2]),padding:\\\"explicit\\\"===te[S[e+32>>2]]?oe(E[e+8>>2],S[e+12>>2]):void 0,strides:oe(E[e+16>>2],S[e+20>>2]),dilations:oe(E[e+24>>2],S[e+28>>2]),autoPad:te[S[e+32>>2]],layout:re[S[e+36>>2]]}}var le,fe,de,pe,be,he,ge,me,ve,ye,we={};function _e(){if(!ve){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in we)void 0===we[e]?delete t[e]:t[e]=we[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);ve=n}return ve}function Oe(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!ye){ye=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);S[Ie()>>2]=60*a,S[Fe()>>2]=Number(t!=i),n=e(n),r=e(r),n=C(n),r=C(r),i<t?(S[je()>>2]=n,S[je()+4>>2]=r):(S[je()>>2]=r,S[je()+4>>2]=n)}}function Ae(e){return 0==e%4&&(0!=e%100||0==e%400)}function Se(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ee=[31,29,31,30,31,30,31,31,30,31,30,31],Te=[31,28,31,30,31,30,31,31,30,31,30,31];function Me(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Ae(e.getFullYear())?Ee:Te)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function xe(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Me(new Date(e.ib+1900,0,1),e.rb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=S[r+40>>2];for(var l in r={Hb:S[r>>2],Gb:S[r+4>>2],pb:S[r+8>>2],nb:S[r+12>>2],jb:S[r+16>>2],ib:S[r+20>>2],qb:S[r+24>>2],rb:S[r+28>>2],Pb:S[r+32>>2],Fb:S[r+36>>2],Ib:c?R(c):\\\"\\\"},n=R(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),c[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in c={\\\"%a\\\":function(e){return f[e.qb].substring(0,3)},\\\"%A\\\":function(e){return f[e.qb]},\\\"%b\\\":function(e){return d[e.jb].substring(0,3)},\\\"%B\\\":function(e){return d[e.jb]},\\\"%C\\\":function(e){return a((e.ib+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.nb,2)},\\\"%e\\\":function(e){return i(e.nb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return a(e.pb,2)},\\\"%I\\\":function(e){return 0==(e=e.pb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.nb+Se(Ae(e.ib+1900)?Ee:Te,e.jb-1),3)},\\\"%m\\\":function(e){return a(e.jb+1,2)},\\\"%M\\\":function(e){return a(e.Gb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.pb&&12>e.pb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Hb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.qb||7},\\\"%U\\\":function(e){var t=new Date(e.ib+1900,0,1),n=0===t.getDay()?t:Me(t,7-t.getDay());return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.ib+1901,0,4),n=u(new Date(e.ib+1900,0,4));t=u(t);var r=Me(new Date(e.ib+1900,0,1),e.rb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.ib+1900?e.rb+32-n.getDate():e.rb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.qb},\\\"%W\\\":function(e){var t=new Date(e.ib,0,1),n=1===t.getDay()?t:Me(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.ib+1900,e.jb,e.nb))?a(Math.ceil((31-n.getDate()+(Se(Ae(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.ib+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.ib+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Fb);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Ib},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),c[l](r)));return(l=function(e){var t=Array(D(e)+1);return P(e,t,0,t.length),t}(n)).length>t?0:(O.set(l,e),l.length-1)}le||(le=le||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},fe=fe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},de=de||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},pe=pe||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},be=be||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},he=he||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},ge=ge||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}},me=me||{lb:{},zb:1,create:function(e,t){t=t||{};var n=this.zb++;return t.sb=1,t.object=e,this.lb[n]=t,n},get:function(e){if(0!==e)return this.lb[e].object},ob:function(e){this.lb[e].sb++},release:function(e){var t=this.lb[e];t.sb--,0>=t.sb&&delete this.lb[e]}});var ke={a:function(e){return Pe(e+16)+16},c:function(e,t){W.unshift({ub:e,kb:t})},f:function(e,t){W.unshift({ub:e,kb:t})},b:function(e,t,n){throw new Q(e).wb(t,n),e},L:function(e,t){return e=R(e),ee.Jb(e,t)},o:function(){return 0},O:function(){},K:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(e,t){return e=R(e),ee.Kb(e,t)},S:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=ze(65536,e);o?(A.fill(0,o,o+e),e=o):e=0,e?($[e]={yb:e,xb:t,vb:!0,fd:i,Ob:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},R:function(e,t){var n=$[e];return 0!==t&&n?(t===n.xb&&($[e]=null,n.vb&&Ce(n.yb)),e=0):e=-28,e},m:function(){},I:function(e,t,n){return e=R(e),ee.Lb(e,t,n)},G:function(){},s:function(){},H:function(){},k:function(){G()},v:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return S[De()>>2]=28,-1;e=J()}return S[t>>2]=e/1e3|0,S[t+4>>2]=e%1e3*1e6|0,0},J:function(e,t){return e-t},Ba:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Ca:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Aa:function(){G(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},N:function(){return 2147483648},A:function(e,t,n){A.copyWithin(e,t,t+n)},l:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{w.grow(Math.min(2147483648,r)-_.byteLength+65535>>>16),j();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},F:function(e){for(var t=J();J()-t<e;);},ya:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][E[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][E[e+4>>2]]}),le.create(navigator.ml.createContext(t))},D:function(e,t){var n=0;return _e().forEach((function(r,i){var a=t+n;for(i=S[e+4*i>>2]=a,a=0;a<r.length;++a)O[i++>>0]=r.charCodeAt(a);O[i>>0]=0,n+=r.length+1})),0},E:function(e,t){var n=_e();S[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),S[t>>2]=r,0},i:function(){return 0},C:function(e,t){return e=1==e||2==e?2:G(),O[t>>0]=e,0},p:function(e,t,n,r){return e=ee.Nb(e),t=ee.Mb(e,t,n),S[r>>2]=t,0},z:function(){},q:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=S[t+8*a>>2],u=S[t+(8*a+4)>>2],s=0;s<u;s++){var c=A[o+s],l=K[e];0===c||10===c?((1===e?v:y)(k(l,0)),l.length=0):l.push(c)}i+=u}return S[r>>2]=i,0},da:function(e){var t=Date.now();return S[e>>2]=t/1e3|0,S[e+4>>2]=t%1e3*1e3|0,0},P:function e(t,n){return t=new Date(1e3*S[t>>2]),S[n>>2]=t.getUTCSeconds(),S[n+4>>2]=t.getUTCMinutes(),S[n+8>>2]=t.getUTCHours(),S[n+12>>2]=t.getUTCDate(),S[n+16>>2]=t.getUTCMonth(),S[n+20>>2]=t.getUTCFullYear()-1900,S[n+24>>2]=t.getUTCDay(),S[n+36>>2]=0,S[n+32>>2]=0,S[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.tb||(e.tb=C(\\\"GMT\\\")),S[n+40>>2]=e.tb,n},t:function(e,t){Oe(),e=new Date(1e3*S[e>>2]),S[t>>2]=e.getSeconds(),S[t+4>>2]=e.getMinutes(),S[t+8>>2]=e.getHours(),S[t+12>>2]=e.getDate(),S[t+16>>2]=e.getMonth(),S[t+20>>2]=e.getFullYear()-1900,S[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);S[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,S[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),S[t+32>>2]=e,e=S[je()+(e?4:0)>>2],S[t+40>>2]=e,t},n:function(e){Oe();var t=new Date(S[e+20>>2]+1900,S[e+16>>2],S[e+12>>2],S[e+8>>2],S[e+4>>2],S[e>>2],0),n=S[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?S[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),S[e+24>>2]=t.getDay(),S[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,S[e>>2]=t.getSeconds(),S[e+4>>2]=t.getMinutes(),S[e+8>>2]=t.getHours(),S[e+12>>2]=t.getDate(),S[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},y:function(e){le.ob(e)},x:function(e){le.release(e)},va:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.add(t,n),ge.create(n)},ua:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.averagePool2d(t,n),ge.create(n)},ta:function(e,t,n,r,i){return e=de.get(e),t=ge.get(t),n=ge.get(n),r=ge.get(r),i={scale:ge.get(S[i>>2]),bias:ge.get(S[i+4>>2]),axis:S[i+8>>2],epsilon:T[i+12>>2],activation:me.get(S[i+16>>2])},i=e.batchNormalization(t,n,r,i),ge.create(i)},sa:function(e,t){e=de.get(e),t=he.get(t);try{var n=e.build(t);return fe.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},ra:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.clamp(t,{minValue:T[n>>2],maxValue:T[n+4>>2]}),ge.create(n)},qa:function(e,t,n,r){e=de.get(e),t=oe(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ge.get(t[i]));return r=e.concat(n,r),ge.create(r)},pa:function(e,t,n){return e=de.get(e),n=ue(n,(t=se(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ge.create(n)},oa:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={padding:\\\"explicit\\\"===te[S[r+40>>2]]?oe(E[r>>2],S[r+4>>2]):void 0,strides:oe(E[r+8>>2],S[r+12>>2]),dilations:oe(E[r+16>>2],S[r+20>>2]),autoPad:te[S[r+40>>2]],groups:S[r+48>>2],inputLayout:re[S[r+52>>2]],filterLayout:ne[S[r+56>>2]],bias:ge.get(S[r+60>>2]),activation:me.get(S[r+64>>2])},r=e.conv2d(t,n,r),ge.create(r)},na:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=ge.get(n),r={c:ge.get(S[r>>2]),alpha:T[r+4>>2],beta:T[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),ge.create(r)},ma:function(e,t,n){return e=de.get(e),t=R(t),n=se(n),n=e.input(t,n),ge.create(n)},la:function(e,t,n){return e=de.get(e),t=ge.get(t),n=e.leakyRelu(t,{alpha:T[n>>2]}),ge.create(n)},ka:function(e,t){return e=de.get(e).leakyRelu({alpha:T[t>>2]}),me.create(e)},ja:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ge.get(n),n=e.matmul(t,n),ge.create(n)},ia:function(e,t,n){return e=de.get(e),t=ge.get(t),n=ce(n),n=e.maxPool2d(t,n),ge.create(n)},u:function(e){de.release(e)},ha:function(e,t){return e=de.get(e),t=ge.get(t),t=e.relu(t),ge.create(t)},ga:function(e){return e=de.get(e).relu(),me.create(e)},fa:function(e,t,n){e=de.get(e),t=ge.get(t);var r=ie[S[n>>2]],i=E[n+4>>2],a=S[n+8>>2];if(0!==i&&0!==a){for(var o=[],u=0;u<i;++u,a+=4)o.push(T[a>>2]);i=o}else i=void 0;return n={mode:r,scales:i,sizes:oe(E[n+12>>2],S[n+16>>2])},n=e.resample(t,n),ge.create(n)},ea:function(e,t,n,r){return e=de.get(e),t=ge.get(t),n=oe(r,n),n=e.reshape(t,n),ge.create(n)},ca:function(e,t,n){return e=de.get(e),t=ge.get(t),n={permutation:oe(E[n>>2],S[n+4>>2])},n=e.transpose(t,n),ge.create(n)},xa:function(e,t,n){return e=fe.get(e),t=pe.get(t),n=be.get(n),e.compute(t,n)},wa:function(e){fe.ob(e)},w:function(e){fe.release(e)},aa:function(e){pe.release(e)},ba:function(e,t,n){e=pe.get(e),t=R(t),n=0===S[n+12>>2]?ue(n+0):{resource:ue(n+0),dimensions:oe(E[n+16>>2],S[n+12>>2])},e[t]=n},_:function(e){he.release(e)},$:function(e,t,n){e=he.get(e),t=R(t),n=ge.get(n),e[t]=n},Y:function(e){be.release(e)},Z:function(e,t,n){e=be.get(e),t=R(t),n=ue(n),e[t]=n},e:function(e){ge.ob(e)},d:function(e){ge.release(e)},X:function(e){me.ob(e)},h:function(e){me.release(e)},za:xe,g:function(e,t,n,r){return xe(e,t,n,r)},W:function(e){return e=le.get(e),e=new MLGraphBuilder(e),de.create(e)},V:function(){return pe.create({})},U:function(){return he.create({})},T:function(){return be.create({})}};!function(){function e(e){t.asm=e.exports,w=t.asm.Da,j(),F=t.asm.hb,U.unshift(t.asm.Ea),H--,t.monitorRunDependencies&&t.monitorRunDependencies(H),0==H&&(null!==B&&(clearInterval(B),B=null),N&&(e=N,N=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!m&&(p||b)){if(\\\"function\\\"==typeof fetch&&!Y.startsWith(\\\"file://\\\"))return fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+Y+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return q()}));if(s)return new Promise((function(e,t){s(Y,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return q()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){y(\\\"failed to asynchronously prepare wasm: \\\"+e),G(e)}))}var a={a:ke};if(H++,t.monitorRunDependencies&&t.monitorRunDependencies(H),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return y(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||Z()||Y.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(Y,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return y(\\\"wasm streaming compile failed: \\\"+e),y(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ea).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Fa).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ga).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Ha).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Ia).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Ja).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ka).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.La).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Ma).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.Na).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Oa).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Pa).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Qa).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Ra).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Sa).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ta).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Ua).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Va).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Wa).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Xa).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Ya).apply(null,arguments)};var Re,Pe=t._malloc=function(){return(Pe=t._malloc=t.asm.Za).apply(null,arguments)},De=t.___errno_location=function(){return(De=t.___errno_location=t.asm._a).apply(null,arguments)},Ce=t._free=function(){return(Ce=t._free=t.asm.$a).apply(null,arguments)},je=t.__get_tzname=function(){return(je=t.__get_tzname=t.asm.ab).apply(null,arguments)},Fe=t.__get_daylight=function(){return(Fe=t.__get_daylight=t.asm.bb).apply(null,arguments)},Ie=t.__get_timezone=function(){return(Ie=t.__get_timezone=t.asm.cb).apply(null,arguments)},Ue=t.stackSave=function(){return(Ue=t.stackSave=t.asm.db).apply(null,arguments)},We=t.stackRestore=function(){return(We=t.stackRestore=t.asm.eb).apply(null,arguments)},Le=t.stackAlloc=function(){return(Le=t.stackAlloc=t.asm.fb).apply(null,arguments)},ze=t._memalign=function(){return(ze=t._memalign=t.asm.gb).apply(null,arguments)};function Ye(){function e(){if(!Re&&(Re=!0,t.calledRun=!0,!M)){if(X(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();L.unshift(e)}X(L)}}if(!(0<H)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)z();X(I),0<H||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=R,t.stringToUTF8=function(e,t,n){return P(e,A,t,n)},t.lengthBytesUTF8=D,t.stackSave=Ue,t.stackRestore=We,t.stackAlloc=Le,N=function e(){Re||Ye(),Re||(N=e)},t.run=Ye,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Ye(),e.ready});e.exports=r},967:function(e,t){\\\"use strict\\\";var n=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=function(e,r,i,a){if(\\\"object\\\"==typeof e&&null!==e){if(i.has(e))throw new Error(\\\"Circular reference in options\\\");i.add(e)}Object.entries(e).forEach((function(e){var o=n(e,2),u=o[0],s=o[1],c=r?r+u:u;if(\\\"object\\\"==typeof s)t.iterateExtraOptions(s,c+\\\".\\\",i,a);else if(\\\"string\\\"==typeof s||\\\"number\\\"==typeof s)a(c,s.toString());else{if(\\\"boolean\\\"!=typeof s)throw new Error(\\\"Can't handle extra config type: \\\"+typeof s);a(c,s?\\\"1\\\":\\\"0\\\")}}))}},586:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;var r=n(967),i=n(983),a=n(361);t.setRunOptions=function(e){var t=a.getInstance(),n=0,o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);var s=0;if(void 0!==(null==e?void 0:e.tag)&&(s=i.allocWasmString(e.tag,o)),0===(n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,s)))throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,r){var a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(\\\"Can't set a run config entry: \\\"+e+\\\" - \\\"+r)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:function(e,t,n){\\\"use strict\\\";var r=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;var i=n(967),a=n(983),o=n(361);t.setSessionOptions=function(e){var t,n,u=o.getInstance(),s=0,c=[],l=e||{};!function(e){e.extra||(e.extra={}),e.extra.session||(e.extra.session={});var t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")}(l);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(l.graphOptimizationLevel=\\\"all\\\");var f=function(e){switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(\\\"unsupported graph optimization level: \\\"+e)}}(l.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(l.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(l.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(l.executionMode=\\\"sequential\\\");var d=function(e){switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(\\\"unsupported execution mode: \\\"+e)}}(l.executionMode),p=0;if(void 0!==(null==e?void 0:e.logId)&&(p=a.allocWasmString(e.logId,c)),void 0===(null==e?void 0:e.logSeverityLevel))l.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(\\\"log serverity level is not valid: \\\"+e.logSeverityLevel);if(void 0===(null==e?void 0:e.logVerbosityLevel))l.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(\\\"log verbosity level is not valid: \\\"+e.logVerbosityLevel);if(void 0===(null==e?void 0:e.enableProfiling)&&(l.enableProfiling=!1),0===(s=u._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,p,l.logSeverityLevel,l.logVerbosityLevel)))throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&i.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,(function(e,t){var n=a.allocWasmString(e,c),r=a.allocWasmString(t,c);if(0!==u._OrtAddSessionConfigEntry(s,n,r))throw new Error(\\\"Can't set a session config entry: \\\"+e+\\\" - \\\"+t)})),null==e?void 0:e.executionProviders)try{for(var b=r(e.executionProviders),h=b.next();!h.done;h=b.next()){var g=h.value;if(\\\"webnn\\\"===(\\\"string\\\"==typeof g?g:g.name)){var m=0;if(\\\"string\\\"!=typeof g){var v=g;(null==v?void 0:v.devicePreference)&&(m=v.devicePreference)}if(console.log(\\\"webnn device preference: \\\"+m),0!==u._OrtSessionOptionsAppendExecutionProviderWebNN(s,m))throw new Error(\\\"Can't append WebNN execution provider\\\");break}}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=b.return)&&n.call(b)}finally{if(t)throw t.error}}return[s,c]}catch(e){throw 0!==s&&u._OrtReleaseSessionOptions(s),c.forEach(u._free),e}}},983:function(e,t,n){\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;var r=n(361);t.allocWasmString=function(e,t){var n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:function(e,t,n){\\\"use strict\\\";var r=this&&this.__read||function(e,t){var n=\\\"function\\\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,i,a=n.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(i)throw i.error}}return o},i=this&&this.__values||function(e){var t=\\\"function\\\"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&\\\"number\\\"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?\\\"Object is not iterable.\\\":\\\"Symbol.iterator is not defined.\\\")};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;var a=n(586),o=n(919),u=n(983),s=n(361);t.initOrt=function(e,t){var n=s.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(\\\"Can't initialize onnxruntime. error code = \\\"+n)};var c=[];t.createSession=function(e,t){var n,i=s.getInstance(),a=i._malloc(e.byteLength),u=0,l=0,f=[];try{if(l=(n=r(o.setSessionOptions(t),2))[0],f=n[1],i.HEAPU8.set(e,a),0===(u=i._OrtCreateSession(a,e.byteLength,l)))throw new Error(\\\"Can't create a session\\\")}finally{i._free(a),i._OrtReleaseSessionOptions(l),f.forEach(i._free)}for(var d=i._OrtGetInputCount(u),p=i._OrtGetOutputCount(u),b=[],h=[],g=[],m=[],v=0;v<d;v++){var y=i._OrtGetInputName(u,v);if(0===y)throw new Error(\\\"Can't get an input name\\\");h.push(y),b.push(i.UTF8ToString(y))}for(v=0;v<p;v++){var w=i._OrtGetOutputName(u,v);if(0===w)throw new Error(\\\"Can't get an output name\\\");m.push(w),g.push(i.UTF8ToString(w))}return c.push([u,h,m]),[c.length-1,b,g]},t.releaseSession=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),c[e]=void 0};var l=function(e){switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(\\\"unsupported data type: \\\"+e)}},f=function(e){switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(\\\"unsupported type: \\\"+e)}};t.run=function(e,t,n,i,o){var d,p=s.getInstance(),b=c[e];if(!b)throw new Error(\\\"invalid session id\\\");var h=b[0],g=b[1],m=b[2],v=t.length,y=i.length,w=0,_=[],O=[],A=[];try{w=(d=r(a.setRunOptions(o),2))[0],_=d[1];for(var S=function(e){var t=n[e][0],r=n[e][1],i=n[e][2],a=void 0,o=void 0;if(Array.isArray(i)){o=4*i.length,a=p._malloc(o),A.push(a);for(var s=a/4,c=0;c<i.length;c++){if(\\\"string\\\"!=typeof i[c])throw new TypeError(\\\"tensor data at index \\\"+c+\\\" is not a string\\\");p.HEAPU32[s++]=u.allocWasmString(i[c],A)}}else o=i.byteLength,a=p._malloc(o),A.push(a),p.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,o),a);var l=p.stackSave(),f=p.stackAlloc(4*r.length);try{var d=f/4;r.forEach((function(e){return p.HEAP32[d++]=e}));var b=p._OrtCreateTensor(function(e){switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(\\\"unsupported data type: \\\"+e)}}(t),a,o,f,r.length);if(0===b)throw new Error(\\\"Can't create a tensor\\\");O.push(b)}finally{p.stackRestore(l)}},E=0;E<v;E++)S(E);var T=p.stackSave(),M=p.stackAlloc(4*v),x=p.stackAlloc(4*v),k=p.stackAlloc(4*y),R=p.stackAlloc(4*y);try{var P=M/4,D=x/4,C=k/4,j=R/4;for(E=0;E<v;E++)p.HEAPU32[P++]=O[E],p.HEAPU32[D++]=g[t[E]];for(E=0;E<y;E++)p.HEAPU32[C++]=0,p.HEAPU32[j++]=m[i[E]];var F=p._OrtRun(h,x,M,v,R,y,k,w),I=[];if(0===F)for(E=0;E<y;E++){var U=p.HEAPU32[k/4+E],W=p.stackSave(),L=p.stackAlloc(16),z=void 0,Y=0;try{if(0!==(F=p._OrtGetTensorData(U,L,L+4,L+8,L+12)))throw new Error(\\\"Can't get a tensor data. error code = \\\"+F);var H=L/4,B=p.HEAPU32[H++];Y=p.HEAPU32[H++];for(var N=p.HEAPU32[H++],G=p.HEAPU32[H++],Z=[],V=0;V<G;V++)Z.push(p.HEAPU32[N/4+V]);p._OrtFree(N);var q=0===Z.length?1:Z.reduce((function(e,t){return e*t}));if(\\\"string\\\"===(z=l(B))){for(var X=[],Q=Y/4,J=0;J<q;J++){var $=p.HEAPU32[Q++],K=J===q-1?void 0:p.HEAPU32[Q]-$;X.push(p.UTF8ToString($,K))}I.push([z,Z,X])}else{var ee=new(f(z))(q);new Uint8Array(ee.buffer,ee.byteOffset,ee.byteLength).set(p.HEAPU8.subarray(Y,Y+ee.byteLength)),I.push([z,Z,ee])}}finally{p.stackRestore(W),\\\"string\\\"===z&&Y&&p._free(Y),p._OrtReleaseTensor(U)}}if(0===F)return I;throw new Error(\\\"failed to call OrtRun(). error code = \\\"+F+\\\".\\\")}finally{p.stackRestore(T)}}finally{O.forEach(p._OrtReleaseTensor),A.forEach(p._free),p._OrtReleaseRunOptions(w),_.forEach(p._free)}},t.endProfiling=function(e){var t=s.getInstance(),n=c[e];if(!n)throw new Error(\\\"invalid session id\\\");var r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=function(e){var t,n,r=[];try{for(var a=i(e),o=a.next();!o.done;o=a.next()){var u=o.value[2];!Array.isArray(u)&&u.buffer&&r.push(u.buffer)}}catch(e){t={error:e}}finally{try{o&&!o.done&&(n=a.return)&&n.call(a)}finally{if(t)throw t.error}}return r}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__generator||function(e,t){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:u(0),throw:u(1),return:u(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function u(a){return function(u){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(n=1,r&&(i=2&a[0]?r.return:a[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,a[1])).done)return i;switch(r=0,i&&(a=[2&a[0],i.value]),a[0]){case 0:case 1:i=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,r=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==a[0]&&2!==a[0])){o=0;continue}if(3===a[0]&&(!i||a[1]>i[0]&&a[1]<i[3])){o.label=a[1];break}if(6===a[0]&&o.label<i[1]){o.label=i[1],i=a;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(a);break}i[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(e){a=[6,e],r=0}finally{n=i=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;var c,l=a(n(449)),f=s(n(474)),d=s(n(932)),p=!1,b=!1,h=!1,g=function(e,t){return t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\"};t.initializeWebAssembly=function(e){return o(void 0,void 0,void 0,(function(){var t,r,i,a,o,s,m,v,y,w,_;return u(this,(function(u){switch(u.label){case 0:if(p)return[2,Promise.resolve()];if(b)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(h)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");return b=!0,t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&function(){try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}}(),o=i&&function(){try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}}(),s=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,m=g(!1,a),v=g(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[v]:void 0,w=!1,_=[],t>0&&_.push(new Promise((function(e){setTimeout((function(){w=!0,e()}),t)}))),_.push(new Promise((function(e,t){var r=a?f.default:d.default,i={locateFile:function(e,t){return e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob?URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"})):e===m?null!=y?y:(null!=s?s:t)+v:t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=l.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{var o=\\\"var ortWasmThreaded=(function(){var _scriptDir;return \\\"+f.default.toString()+\\\"})();\\\";i.mainScriptUrlOrBlob=new Blob([o],{type:\\\"text/javascript\\\"})}r(i).then((function(t){b=!1,p=!0,c=t,e()}),(function(e){b=!1,h=!0,t(e)}))}))),[4,Promise.race(_)];case 1:if(u.sent(),w)throw new Error(\\\"WebAssembly backend initializing failed due to timeout: \\\"+t+\\\"ms\\\");return[2]}}))}))},t.getInstance=function(){if(p&&c)return c;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=function(){var e;!p||b||h||(b=!0,null===(e=c.PThread)||void 0===e||e.terminateAllThreads(),c=void 0,b=!1,p=!1,h=!0)}},384:function(){},993:function(){},908:function(){},953:function(){},925:function(){},449:function(){}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),function(){\\\"use strict\\\";var e=n(349),t=n(361);self.onmessage=function(n){switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((function(){return postMessage({type:\\\"init-wasm\\\"})}),(function(e){return postMessage({type:\\\"init-wasm\\\",err:e})}));break;case\\\"init-ort\\\":try{var r=n.data.in,i=r.numThreads,a=r.loggingLevel;e.initOrt(i,a),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{var o=n.data.in,u=o.model,s=o.options,c=e.createSession(u,s);postMessage({type:\\\"create\\\",out:c})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{var l=n.data.in;e.releaseSession(l),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{var f=n.data.in,d=f.sessionId,p=f.inputIndices,b=f.inputs,h=f.outputIndices,g=(s=f.options,e.run(d,p,b,h,s));postMessage({type:\\\"run\\\",out:g},e.extractTransferableBuffers(g))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{l=n.data.in,e.endProfiling(l),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}}()}();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}